{
	"id": "555f80b58af30476e1e941cd5d706ce6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Farm.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Pausable is Context {\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state.\r\n     */\r\n    constructor() {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        _requireNotPaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        _requirePaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is paused.\r\n     */\r\n    function _requireNotPaused() internal view virtual {\r\n        require(!paused(), \"Pausable: paused\");\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is not paused.\r\n     */\r\n    function _requirePaused() internal view virtual {\r\n        require(paused(), \"Pausable: not paused\");\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}\r\n\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        _nonReentrantBefore();\r\n        _;\r\n        _nonReentrantAfter();\r\n    }\r\n\r\n    function _nonReentrantBefore() private {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n    }\r\n\r\n    function _nonReentrantAfter() private {\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n\r\ncontract Farm is ReentrancyGuard, Pausable, Ownable, IERC721Receiver {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct StakedToken {\r\n        address staker;\r\n        uint256 tokenId;\r\n    }\r\n    // Staker info\r\n    struct Staker {\r\n        uint256 amountStaked;\r\n        StakedToken[] stakedTokens;\r\n        uint256 timeOfLastUpdate;\r\n        uint256 unclaimedRewards;\r\n    }\r\n\r\n    IERC20 public rewardsToken;\r\n    IERC721 public nftCollection;\r\n    // Rewards per hour per token deposited in wei\r\n    uint256 private rewardsPerHour = 100000;\r\n    \r\n    mapping(address => Staker) public stakers;\r\n    // Mapping of tokenId to staker. For remember who to send back ther token\r\n    mapping(uint256 => address) public stakerAddress;\r\n\r\n    constructor(IERC721 _nftCollection, IERC20 _rewardsToken, uint256 _rewardsPerHour) {\r\n        nftCollection = _nftCollection;\r\n        rewardsToken = _rewardsToken;\r\n        rewardsPerHour = _rewardsPerHour;\r\n    }\r\n\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external override pure returns (bytes4) {\r\n        return bytes4(keccak256(abi.encodePacked(operator, from, tokenId, data)));\r\n    }\r\n\r\n    function stake(uint256 _tokenId) external nonReentrant {\r\n        require(\r\n            nftCollection.ownerOf(_tokenId) == msg.sender,\r\n            \"You don't own this token!\"\r\n        );\r\n\r\n        if (stakers[msg.sender].amountStaked > 0) {\r\n            uint256 rewards = calculateRewards(msg.sender);\r\n            stakers[msg.sender].unclaimedRewards += rewards;\r\n        }\r\n\r\n        nftCollection.transferFrom(msg.sender, address(this), _tokenId);\r\n\r\n        StakedToken memory stakedToken = StakedToken(msg.sender, _tokenId);\r\n        stakers[msg.sender].stakedTokens.push(stakedToken);\r\n        stakers[msg.sender].amountStaked++;\r\n        stakerAddress[_tokenId] = msg.sender;\r\n        stakers[msg.sender].timeOfLastUpdate = block.timestamp;\r\n    }\r\n\r\n    function withdraw(uint256 _tokenId) external nonReentrant {\r\n        require(\r\n            stakers[msg.sender].amountStaked > 0,\r\n            \"You have no tokens staked\"\r\n        );\r\n        require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\");\r\n\r\n        // Update the rewards for this user, as the amount of rewards decreases with less tokens.\r\n        uint256 rewards = calculateRewards(msg.sender);\r\n        stakers[msg.sender].unclaimedRewards += rewards;\r\n\r\n\r\n        uint256 index = 0;\r\n        for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {\r\n            if (stakers[msg.sender].stakedTokens[i].tokenId == _tokenId) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n        stakers[msg.sender].stakedTokens[index].staker = address(0);\r\n        stakers[msg.sender].amountStaked--;\r\n        stakerAddress[_tokenId] = address(0);\r\n\r\n        nftCollection.transferFrom(address(this), msg.sender, _tokenId);\r\n        stakers[msg.sender].timeOfLastUpdate = block.timestamp;\r\n    }\r\n\r\n    function calculateRewards(address _staker)\r\n        internal\r\n        view\r\n        returns (uint256 _rewards)\r\n    {\r\n        return (((\r\n            ((block.timestamp - stakers[_staker].timeOfLastUpdate) *\r\n                stakers[_staker].amountStaked)\r\n        ) * rewardsPerHour) / 3600);\r\n    }\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Farm.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Farm.sol\":6029:12890  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Farm.sol\":6029:12890  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b427794f29f7c98dc58bbd2b2e45cafaf75c1c00271bd1ef357dc03afc4eea9264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b427794f29f7c98dc58bbd2b2e45cafaf75c1c00271bd1ef357dc03afc4eea9264736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0x27 PUSH26 0x4F29F7C98DC58BBD2B2E45CAFAF75C1C00271BD1EF357DC03AFC 0x4E 0xEA SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "6029:6861:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b427794f29f7c98dc58bbd2b2e45cafaf75c1c00271bd1ef357dc03afc4eea9264736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0x27 PUSH26 0x4F29F7C98DC58BBD2B2E45CAFAF75C1C00271BD1EF357DC03AFC 0x4E 0xEA SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "6029:6861:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b427794f29f7c98dc58bbd2b2e45cafaf75c1c00271bd1ef357dc03afc4eea9264736f6c63430008070033",
									".code": [
										{
											"begin": 6029,
											"end": 12890,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0x7d053ca7093ca1c4a4bc4733a112fe2677b17015df67aeca0fc9844ff731e2b7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7d7e603016d38044798ac40ccdf7caf6507d98524f09af3fd0c7f7f0b23333cb\",\"dweb:/ipfs/QmPaF8Md1RPY3wcetPQseLKYpfEsgYtbADAaacfmBR8KN6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0x7d053ca7093ca1c4a4bc4733a112fe2677b17015df67aeca0fc9844ff731e2b7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7d7e603016d38044798ac40ccdf7caf6507d98524f09af3fd0c7f7f0b23333cb\",\"dweb:/ipfs/QmPaF8Md1RPY3wcetPQseLKYpfEsgYtbADAaacfmBR8KN6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Farm": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC721",
									"name": "_nftCollection",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_rewardsToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardsPerHour",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "nftCollection",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountStaked",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeOfLastUpdate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unclaimedRewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Farm.sol\":29748:33162  contract Farm is ReentrancyGuard, Pausable, Ownable, IERC721Receiver {\r... */\n  mstore(0x40, 0x80)\n    /* \"Farm.sol\":30317:30323  100000 */\n  0x0186a0\n    /* \"Farm.sol\":30284:30323  uint256 private rewardsPerHour = 100000 */\n  0x04\n  sstore\n    /* \"Farm.sol\":30520:30734  constructor(IERC721 _nftCollection, IERC20 _rewardsToken, uint256 _rewardsPerHour) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Farm.sol\":18664:18665  1 */\n  0x01\n    /* \"Farm.sol\":18775:18782  _status */\n  0x00\n    /* \"Farm.sol\":18775:18797  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Farm.sol\":16203:16208  false */\n  0x00\n    /* \"Farm.sol\":16193:16200  _paused */\n  0x01\n  0x00\n    /* \"Farm.sol\":16193:16208  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Farm.sol\":28002:28034  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"Farm.sol\":28021:28033  _msgSender() */\n  tag_12\n    /* \"Farm.sol\":28021:28031  _msgSender */\n  shl(0x20, tag_13)\n    /* \"Farm.sol\":28021:28033  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"Farm.sol\":28002:28020  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"Farm.sol\":28002:28034  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"Farm.sol\":30630:30644  _nftCollection */\n  dup3\n    /* \"Farm.sol\":30614:30627  nftCollection */\n  0x03\n  0x00\n    /* \"Farm.sol\":30614:30644  nftCollection = _nftCollection */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Farm.sol\":30670:30683  _rewardsToken */\n  dup2\n    /* \"Farm.sol\":30655:30667  rewardsToken */\n  0x02\n  0x00\n    /* \"Farm.sol\":30655:30683  rewardsToken = _rewardsToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Farm.sol\":30711:30726  _rewardsPerHour */\n  dup1\n    /* \"Farm.sol\":30694:30708  rewardsPerHour */\n  0x04\n    /* \"Farm.sol\":30694:30726  rewardsPerHour = _rewardsPerHour */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Farm.sol\":30520:30734  constructor(IERC721 _nftCollection, IERC20 _rewardsToken, uint256 _rewardsPerHour) {\r... */\n  pop\n  pop\n  pop\n    /* \"Farm.sol\":29748:33162  contract Farm is ReentrancyGuard, Pausable, Ownable, IERC721Receiver {\r... */\n  jump(tag_16)\n    /* \"Farm.sol\":15568:15666  function _msgSender() internal view virtual returns (address) {\r... */\ntag_13:\n    /* \"Farm.sol\":15621:15628  address */\n  0x00\n    /* \"Farm.sol\":15648:15658  msg.sender */\n  caller\n    /* \"Farm.sol\":15641:15658  return msg.sender */\n  swap1\n  pop\n    /* \"Farm.sol\":15568:15666  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"Farm.sol\":29548:29739  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_14:\n    /* \"Farm.sol\":29622:29638  address oldOwner */\n  0x00\n    /* \"Farm.sol\":29641:29647  _owner */\n  0x01\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Farm.sol\":29622:29647  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Farm.sol\":29667:29675  newOwner */\n  dup2\n    /* \"Farm.sol\":29658:29664  _owner */\n  0x01\n  dup1\n    /* \"Farm.sol\":29658:29675  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Farm.sol\":29722:29730  newOwner */\n  dup2\n    /* \"Farm.sol\":29691:29731  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Farm.sol\":29712:29720  oldOwner */\n  dup2\n    /* \"Farm.sol\":29691:29731  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Farm.sol\":29611:29739  {\r... */\n  pop\n    /* \"Farm.sol\":29548:29739  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:178   */\ntag_20:\n    /* \"#utility.yul\":78:83   */\n  0x00\n    /* \"#utility.yul\":109:115   */\n  dup2\n    /* \"#utility.yul\":103:116   */\n  mload\n    /* \"#utility.yul\":94:116   */\n  swap1\n  pop\n    /* \"#utility.yul\":125:172   */\n  tag_22\n    /* \"#utility.yul\":166:171   */\n  dup2\n    /* \"#utility.yul\":125:172   */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":7:178   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":184:357   */\ntag_24:\n    /* \"#utility.yul\":256:261   */\n  0x00\n    /* \"#utility.yul\":287:293   */\n  dup2\n    /* \"#utility.yul\":281:294   */\n  mload\n    /* \"#utility.yul\":272:294   */\n  swap1\n  pop\n    /* \"#utility.yul\":303:351   */\n  tag_26\n    /* \"#utility.yul\":345:350   */\n  dup2\n    /* \"#utility.yul\":303:351   */\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":184:357   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":363:506   */\ntag_28:\n    /* \"#utility.yul\":420:425   */\n  0x00\n    /* \"#utility.yul\":451:457   */\n  dup2\n    /* \"#utility.yul\":445:458   */\n  mload\n    /* \"#utility.yul\":436:458   */\n  swap1\n  pop\n    /* \"#utility.yul\":467:500   */\n  tag_30\n    /* \"#utility.yul\":494:499   */\n  dup2\n    /* \"#utility.yul\":467:500   */\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":363:506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":512:1233   */\ntag_3:\n    /* \"#utility.yul\":629:635   */\n  0x00\n    /* \"#utility.yul\":637:643   */\n  dup1\n    /* \"#utility.yul\":645:651   */\n  0x00\n    /* \"#utility.yul\":694:696   */\n  0x60\n    /* \"#utility.yul\":682:691   */\n  dup5\n    /* \"#utility.yul\":673:680   */\n  dup7\n    /* \"#utility.yul\":669:692   */\n  sub\n    /* \"#utility.yul\":665:697   */\n  slt\n    /* \"#utility.yul\":662:781   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":700:779   */\n  tag_34\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":662:781   */\ntag_33:\n    /* \"#utility.yul\":820:821   */\n  0x00\n    /* \"#utility.yul\":845:924   */\n  tag_36\n    /* \"#utility.yul\":916:923   */\n  dup7\n    /* \"#utility.yul\":907:913   */\n  dup3\n    /* \"#utility.yul\":896:905   */\n  dup8\n    /* \"#utility.yul\":892:914   */\n  add\n    /* \"#utility.yul\":845:924   */\n  tag_24\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":835:924   */\n  swap4\n  pop\n    /* \"#utility.yul\":791:934   */\n  pop\n    /* \"#utility.yul\":973:975   */\n  0x20\n    /* \"#utility.yul\":999:1077   */\n  tag_37\n    /* \"#utility.yul\":1069:1076   */\n  dup7\n    /* \"#utility.yul\":1060:1066   */\n  dup3\n    /* \"#utility.yul\":1049:1058   */\n  dup8\n    /* \"#utility.yul\":1045:1067   */\n  add\n    /* \"#utility.yul\":999:1077   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":989:1077   */\n  swap3\n  pop\n    /* \"#utility.yul\":944:1087   */\n  pop\n    /* \"#utility.yul\":1126:1128   */\n  0x40\n    /* \"#utility.yul\":1152:1216   */\n  tag_38\n    /* \"#utility.yul\":1208:1215   */\n  dup7\n    /* \"#utility.yul\":1199:1205   */\n  dup3\n    /* \"#utility.yul\":1188:1197   */\n  dup8\n    /* \"#utility.yul\":1184:1206   */\n  add\n    /* \"#utility.yul\":1152:1216   */\n  tag_28\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1142:1216   */\n  swap2\n  pop\n    /* \"#utility.yul\":1097:1226   */\n  pop\n    /* \"#utility.yul\":512:1233   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1320:1416   */\ntag_41:\n    /* \"#utility.yul\":1357:1364   */\n  0x00\n    /* \"#utility.yul\":1386:1410   */\n  tag_43\n    /* \"#utility.yul\":1404:1409   */\n  dup3\n    /* \"#utility.yul\":1386:1410   */\n  tag_44\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1375:1410   */\n  swap1\n  pop\n    /* \"#utility.yul\":1320:1416   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1422:1532   */\ntag_45:\n    /* \"#utility.yul\":1473:1480   */\n  0x00\n    /* \"#utility.yul\":1502:1526   */\n  tag_47\n    /* \"#utility.yul\":1520:1525   */\n  dup3\n    /* \"#utility.yul\":1502:1526   */\n  tag_41\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1491:1526   */\n  swap1\n  pop\n    /* \"#utility.yul\":1422:1532   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1538:1649   */\ntag_48:\n    /* \"#utility.yul\":1590:1597   */\n  0x00\n    /* \"#utility.yul\":1619:1643   */\n  tag_50\n    /* \"#utility.yul\":1637:1642   */\n  dup3\n    /* \"#utility.yul\":1619:1643   */\n  tag_41\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1608:1643   */\n  swap1\n  pop\n    /* \"#utility.yul\":1538:1649   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1655:1781   */\ntag_44:\n    /* \"#utility.yul\":1692:1699   */\n  0x00\n    /* \"#utility.yul\":1732:1774   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1725:1730   */\n  dup3\n    /* \"#utility.yul\":1721:1775   */\n  and\n    /* \"#utility.yul\":1710:1775   */\n  swap1\n  pop\n    /* \"#utility.yul\":1655:1781   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1787:1864   */\ntag_52:\n    /* \"#utility.yul\":1824:1831   */\n  0x00\n    /* \"#utility.yul\":1853:1858   */\n  dup2\n    /* \"#utility.yul\":1842:1858   */\n  swap1\n  pop\n    /* \"#utility.yul\":1787:1864   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1993:2110   */\ntag_35:\n    /* \"#utility.yul\":2102:2103   */\n  0x00\n    /* \"#utility.yul\":2099:2100   */\n  dup1\n    /* \"#utility.yul\":2092:2104   */\n  revert\n    /* \"#utility.yul\":2116:2266   */\ntag_23:\n    /* \"#utility.yul\":2203:2241   */\n  tag_58\n    /* \"#utility.yul\":2235:2240   */\n  dup2\n    /* \"#utility.yul\":2203:2241   */\n  tag_45\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2196:2201   */\n  dup2\n    /* \"#utility.yul\":2193:2242   */\n  eq\n    /* \"#utility.yul\":2183:2260   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":2256:2257   */\n  0x00\n    /* \"#utility.yul\":2253:2254   */\n  dup1\n    /* \"#utility.yul\":2246:2258   */\n  revert\n    /* \"#utility.yul\":2183:2260   */\ntag_59:\n    /* \"#utility.yul\":2116:2266   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2272:2424   */\ntag_27:\n    /* \"#utility.yul\":2360:2399   */\n  tag_61\n    /* \"#utility.yul\":2393:2398   */\n  dup2\n    /* \"#utility.yul\":2360:2399   */\n  tag_48\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2353:2358   */\n  dup2\n    /* \"#utility.yul\":2350:2400   */\n  eq\n    /* \"#utility.yul\":2340:2418   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2414:2415   */\n  0x00\n    /* \"#utility.yul\":2411:2412   */\n  dup1\n    /* \"#utility.yul\":2404:2416   */\n  revert\n    /* \"#utility.yul\":2340:2418   */\ntag_62:\n    /* \"#utility.yul\":2272:2424   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2430:2552   */\ntag_31:\n    /* \"#utility.yul\":2503:2527   */\n  tag_64\n    /* \"#utility.yul\":2521:2526   */\n  dup2\n    /* \"#utility.yul\":2503:2527   */\n  tag_52\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2496:2501   */\n  dup2\n    /* \"#utility.yul\":2493:2528   */\n  eq\n    /* \"#utility.yul\":2483:2546   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2542:2543   */\n  0x00\n    /* \"#utility.yul\":2539:2540   */\n  dup1\n    /* \"#utility.yul\":2532:2544   */\n  revert\n    /* \"#utility.yul\":2483:2546   */\ntag_65:\n    /* \"#utility.yul\":2430:2552   */\n  pop\n  jump\t// out\n    /* \"Farm.sol\":29748:33162  contract Farm is ReentrancyGuard, Pausable, Ownable, IERC721Receiver {\r... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Farm.sol\":29748:33162  contract Farm is ReentrancyGuard, Pausable, Ownable, IERC721Receiver {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x9168ae72\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x94067045\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6588103b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Farm.sol\":30742:31013  function onERC721Received(\r... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":31785:32849  function withdraw(uint256 _tokenId) external nonReentrant {\r... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"Farm.sol\":16842:16928  function paused() public view virtual returns (bool) {\r... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":30197:30225  IERC721 public nftCollection */\n    tag_6:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":28929:29032  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_7:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"Farm.sol\":28281:28368  function owner() public view virtual returns (address) {\r... */\n    tag_8:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":30336:30377  mapping(address => Staker) public stakers */\n    tag_9:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":30463:30511  mapping(uint256 => address) public stakerAddress */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":31021:31777  function stake(uint256 _tokenId) external nonReentrant {\r... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"Farm.sol\":30164:30190  IERC20 public rewardsToken */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":29187:29388  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_13:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"Farm.sol\":30742:31013  function onERC721Received(\r... */\n    tag_18:\n        /* \"Farm.sol\":30913:30919  bytes4 */\n      0x00\n        /* \"Farm.sol\":30973:30981  operator */\n      dup6\n        /* \"Farm.sol\":30983:30987  from */\n      dup6\n        /* \"Farm.sol\":30989:30996  tokenId */\n      dup6\n        /* \"Farm.sol\":30998:31002  data */\n      dup6\n      dup6\n        /* \"Farm.sol\":30956:31003  abi.encodePacked(operator, from, tokenId, data) */\n      add(0x20, mload(0x40))\n      tag_60\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Farm.sol\":30946:31004  keccak256(abi.encodePacked(operator, from, tokenId, data)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Farm.sol\":30932:31005  return bytes4(keccak256(abi.encodePacked(operator, from, tokenId, data))) */\n      swap1\n      pop\n        /* \"Farm.sol\":30742:31013  function onERC721Received(\r... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Farm.sol\":31785:32849  function withdraw(uint256 _tokenId) external nonReentrant {\r... */\n    tag_24:\n        /* \"Farm.sol\":19226:19247  _nonReentrantBefore() */\n      tag_63\n        /* \"Farm.sol\":19226:19245  _nonReentrantBefore */\n      tag_64\n        /* \"Farm.sol\":19226:19247  _nonReentrantBefore() */\n      jump\t// in\n    tag_63:\n        /* \"Farm.sol\":31911:31912  0 */\n      0x00\n        /* \"Farm.sol\":31876:31883  stakers */\n      0x05\n        /* \"Farm.sol\":31876:31895  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":31884:31894  msg.sender */\n      caller\n        /* \"Farm.sol\":31876:31895  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":31876:31908  stakers[msg.sender].amountStaked */\n      0x00\n      add\n      sload\n        /* \"Farm.sol\":31876:31912  stakers[msg.sender].amountStaked > 0 */\n      gt\n        /* \"Farm.sol\":31854:31965  require(\r... */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"Farm.sol\":32011:32021  msg.sender */\n      caller\n        /* \"Farm.sol\":31984:32021  stakerAddress[_tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":31984:31997  stakerAddress */\n      0x06\n        /* \"Farm.sol\":31984:32007  stakerAddress[_tokenId] */\n      0x00\n        /* \"Farm.sol\":31998:32006  _tokenId */\n      dup4\n        /* \"Farm.sol\":31984:32007  stakerAddress[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":31984:32021  stakerAddress[_tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Farm.sol\":31976:32051  require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"Farm.sol\":32163:32178  uint256 rewards */\n      0x00\n        /* \"Farm.sol\":32181:32209  calculateRewards(msg.sender) */\n      tag_72\n        /* \"Farm.sol\":32198:32208  msg.sender */\n      caller\n        /* \"Farm.sol\":32181:32197  calculateRewards */\n      tag_73\n        /* \"Farm.sol\":32181:32209  calculateRewards(msg.sender) */\n      jump\t// in\n    tag_72:\n        /* \"Farm.sol\":32163:32209  uint256 rewards = calculateRewards(msg.sender) */\n      swap1\n      pop\n        /* \"Farm.sol\":32260:32267  rewards */\n      dup1\n        /* \"Farm.sol\":32220:32227  stakers */\n      0x05\n        /* \"Farm.sol\":32220:32239  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":32228:32238  msg.sender */\n      caller\n        /* \"Farm.sol\":32220:32239  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":32220:32256  stakers[msg.sender].unclaimedRewards */\n      0x03\n      add\n      0x00\n        /* \"Farm.sol\":32220:32267  stakers[msg.sender].unclaimedRewards += rewards */\n      dup3\n      dup3\n      sload\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":32282:32295  uint256 index */\n      0x00\n        /* \"Farm.sol\":32315:32324  uint256 i */\n      dup1\n        /* \"Farm.sol\":32310:32535  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {\r... */\n    tag_76:\n        /* \"Farm.sol\":32334:32341  stakers */\n      0x05\n        /* \"Farm.sol\":32334:32353  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":32342:32352  msg.sender */\n      caller\n        /* \"Farm.sol\":32334:32353  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":32334:32366  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"Farm.sol\":32334:32373  stakers[msg.sender].stakedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farm.sol\":32330:32331  i */\n      dup2\n        /* \"Farm.sol\":32330:32373  i < stakers[msg.sender].stakedTokens.length */\n      lt\n        /* \"Farm.sol\":32310:32535  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {\r... */\n      iszero\n      tag_77\n      jumpi\n        /* \"Farm.sol\":32446:32454  _tokenId */\n      dup4\n        /* \"Farm.sol\":32399:32406  stakers */\n      0x05\n        /* \"Farm.sol\":32399:32418  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":32407:32417  msg.sender */\n      caller\n        /* \"Farm.sol\":32399:32418  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":32399:32431  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"Farm.sol\":32432:32433  i */\n      dup3\n        /* \"Farm.sol\":32399:32434  stakers[msg.sender].stakedTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_79\n      jumpi\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n    tag_79:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Farm.sol\":32399:32442  stakers[msg.sender].stakedTokens[i].tokenId */\n      0x01\n      add\n      sload\n        /* \"Farm.sol\":32399:32454  stakers[msg.sender].stakedTokens[i].tokenId == _tokenId */\n      eq\n        /* \"Farm.sol\":32395:32524  if (stakers[msg.sender].stakedTokens[i].tokenId == _tokenId) {\r... */\n      iszero\n      tag_83\n      jumpi\n        /* \"Farm.sol\":32483:32484  i */\n      dup1\n        /* \"Farm.sol\":32475:32484  index = i */\n      swap2\n      pop\n        /* \"Farm.sol\":32503:32508  break */\n      jump(tag_77)\n        /* \"Farm.sol\":32395:32524  if (stakers[msg.sender].stakedTokens[i].tokenId == _tokenId) {\r... */\n    tag_83:\n        /* \"Farm.sol\":32375:32378  i++ */\n      dup1\n      dup1\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      swap2\n      pop\n      pop\n        /* \"Farm.sol\":32310:32535  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {\r... */\n      jump(tag_76)\n    tag_77:\n      pop\n        /* \"Farm.sol\":32606:32607  0 */\n      0x00\n        /* \"Farm.sol\":32549:32556  stakers */\n      0x05\n        /* \"Farm.sol\":32549:32568  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":32557:32567  msg.sender */\n      caller\n        /* \"Farm.sol\":32549:32568  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":32549:32581  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"Farm.sol\":32582:32587  index */\n      dup3\n        /* \"Farm.sol\":32549:32588  stakers[msg.sender].stakedTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_86\n      jumpi\n      tag_87\n      tag_81\n      jump\t// in\n    tag_87:\n    tag_86:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Farm.sol\":32549:32595  stakers[msg.sender].stakedTokens[index].staker */\n      0x00\n      add\n      0x00\n        /* \"Farm.sol\":32549:32608  stakers[msg.sender].stakedTokens[index].staker = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":32619:32626  stakers */\n      0x05\n        /* \"Farm.sol\":32619:32638  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":32627:32637  msg.sender */\n      caller\n        /* \"Farm.sol\":32619:32638  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":32619:32651  stakers[msg.sender].amountStaked */\n      0x00\n      add\n      0x00\n        /* \"Farm.sol\":32619:32653  stakers[msg.sender].amountStaked-- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Farm.sol\":32698:32699  0 */\n      0x00\n        /* \"Farm.sol\":32664:32677  stakerAddress */\n      0x06\n        /* \"Farm.sol\":32664:32687  stakerAddress[_tokenId] */\n      0x00\n        /* \"Farm.sol\":32678:32686  _tokenId */\n      dup6\n        /* \"Farm.sol\":32664:32687  stakerAddress[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Farm.sol\":32664:32700  stakerAddress[_tokenId] = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":32713:32726  nftCollection */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":32713:32739  nftCollection.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Farm.sol\":32748:32752  this */\n      address\n        /* \"Farm.sol\":32755:32765  msg.sender */\n      caller\n        /* \"Farm.sol\":32767:32775  _tokenId */\n      dup7\n        /* \"Farm.sol\":32713:32776  nftCollection.transferFrom(address(this), msg.sender, _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n        /* \"Farm.sol\":32826:32841  block.timestamp */\n      timestamp\n        /* \"Farm.sol\":32787:32794  stakers */\n      0x05\n        /* \"Farm.sol\":32787:32806  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":32795:32805  msg.sender */\n      caller\n        /* \"Farm.sol\":32787:32806  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":32787:32823  stakers[msg.sender].timeOfLastUpdate */\n      0x02\n      add\n        /* \"Farm.sol\":32787:32841  stakers[msg.sender].timeOfLastUpdate = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":31843:32849  {\r... */\n      pop\n      pop\n        /* \"Farm.sol\":19270:19290  _nonReentrantAfter() */\n      tag_96\n        /* \"Farm.sol\":19270:19288  _nonReentrantAfter */\n      tag_97\n        /* \"Farm.sol\":19270:19290  _nonReentrantAfter() */\n      jump\t// in\n    tag_96:\n        /* \"Farm.sol\":31785:32849  function withdraw(uint256 _tokenId) external nonReentrant {\r... */\n      pop\n      jump\t// out\n        /* \"Farm.sol\":16842:16928  function paused() public view virtual returns (bool) {\r... */\n    tag_26:\n        /* \"Farm.sol\":16889:16893  bool */\n      0x00\n        /* \"Farm.sol\":16913:16920  _paused */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Farm.sol\":16906:16920  return _paused */\n      swap1\n      pop\n        /* \"Farm.sol\":16842:16928  function paused() public view virtual returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"Farm.sol\":30197:30225  IERC721 public nftCollection */\n    tag_30:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Farm.sol\":28929:29032  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_34:\n        /* \"Farm.sol\":28167:28180  _checkOwner() */\n      tag_100\n        /* \"Farm.sol\":28167:28178  _checkOwner */\n      tag_101\n        /* \"Farm.sol\":28167:28180  _checkOwner() */\n      jump\t// in\n    tag_100:\n        /* \"Farm.sol\":28994:29024  _transferOwnership(address(0)) */\n      tag_103\n        /* \"Farm.sol\":29021:29022  0 */\n      0x00\n        /* \"Farm.sol\":28994:29012  _transferOwnership */\n      tag_104\n        /* \"Farm.sol\":28994:29024  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_103:\n        /* \"Farm.sol\":28929:29032  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Farm.sol\":28281:28368  function owner() public view virtual returns (address) {\r... */\n    tag_36:\n        /* \"Farm.sol\":28327:28334  address */\n      0x00\n        /* \"Farm.sol\":28354:28360  _owner */\n      0x01\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":28347:28360  return _owner */\n      swap1\n      pop\n        /* \"Farm.sol\":28281:28368  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Farm.sol\":30336:30377  mapping(address => Staker) public stakers */\n    tag_42:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"Farm.sol\":30463:30511  mapping(uint256 => address) public stakerAddress */\n    tag_47:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Farm.sol\":31021:31777  function stake(uint256 _tokenId) external nonReentrant {\r... */\n    tag_51:\n        /* \"Farm.sol\":19226:19247  _nonReentrantBefore() */\n      tag_107\n        /* \"Farm.sol\":19226:19245  _nonReentrantBefore */\n      tag_64\n        /* \"Farm.sol\":19226:19247  _nonReentrantBefore() */\n      jump\t// in\n    tag_107:\n        /* \"Farm.sol\":31144:31154  msg.sender */\n      caller\n        /* \"Farm.sol\":31109:31154  nftCollection.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":31109:31122  nftCollection */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":31109:31130  nftCollection.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"Farm.sol\":31131:31139  _tokenId */\n      dup4\n        /* \"Farm.sol\":31109:31140  nftCollection.ownerOf(_tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"Farm.sol\":31109:31154  nftCollection.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Farm.sol\":31087:31207  require(\r... */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_71\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"Farm.sol\":31259:31260  0 */\n      0x00\n        /* \"Farm.sol\":31224:31231  stakers */\n      0x05\n        /* \"Farm.sol\":31224:31243  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":31232:31242  msg.sender */\n      caller\n        /* \"Farm.sol\":31224:31243  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":31224:31256  stakers[msg.sender].amountStaked */\n      0x00\n      add\n      sload\n        /* \"Farm.sol\":31224:31260  stakers[msg.sender].amountStaked > 0 */\n      gt\n        /* \"Farm.sol\":31220:31397  if (stakers[msg.sender].amountStaked > 0) {\r... */\n      iszero\n      tag_118\n      jumpi\n        /* \"Farm.sol\":31277:31292  uint256 rewards */\n      0x00\n        /* \"Farm.sol\":31295:31323  calculateRewards(msg.sender) */\n      tag_119\n        /* \"Farm.sol\":31312:31322  msg.sender */\n      caller\n        /* \"Farm.sol\":31295:31311  calculateRewards */\n      tag_73\n        /* \"Farm.sol\":31295:31323  calculateRewards(msg.sender) */\n      jump\t// in\n    tag_119:\n        /* \"Farm.sol\":31277:31323  uint256 rewards = calculateRewards(msg.sender) */\n      swap1\n      pop\n        /* \"Farm.sol\":31378:31385  rewards */\n      dup1\n        /* \"Farm.sol\":31338:31345  stakers */\n      0x05\n        /* \"Farm.sol\":31338:31357  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":31346:31356  msg.sender */\n      caller\n        /* \"Farm.sol\":31338:31357  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":31338:31374  stakers[msg.sender].unclaimedRewards */\n      0x03\n      add\n      0x00\n        /* \"Farm.sol\":31338:31385  stakers[msg.sender].unclaimedRewards += rewards */\n      dup3\n      dup3\n      sload\n      tag_120\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_120:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":31262:31397  {\r... */\n      pop\n        /* \"Farm.sol\":31220:31397  if (stakers[msg.sender].amountStaked > 0) {\r... */\n    tag_118:\n        /* \"Farm.sol\":31409:31422  nftCollection */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":31409:31435  nftCollection.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Farm.sol\":31436:31446  msg.sender */\n      caller\n        /* \"Farm.sol\":31456:31460  this */\n      address\n        /* \"Farm.sol\":31463:31471  _tokenId */\n      dup5\n        /* \"Farm.sol\":31409:31472  nftCollection.transferFrom(msg.sender, address(this), _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_121:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n        /* \"Farm.sol\":31485:31515  StakedToken memory stakedToken */\n      0x00\n        /* \"Farm.sol\":31518:31551  StakedToken(msg.sender, _tokenId) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Farm.sol\":31530:31540  msg.sender */\n      caller\n        /* \"Farm.sol\":31518:31551  StakedToken(msg.sender, _tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farm.sol\":31542:31550  _tokenId */\n      dup4\n        /* \"Farm.sol\":31518:31551  StakedToken(msg.sender, _tokenId) */\n      dup2\n      mstore\n      pop\n        /* \"Farm.sol\":31485:31551  StakedToken memory stakedToken = StakedToken(msg.sender, _tokenId) */\n      swap1\n      pop\n        /* \"Farm.sol\":31562:31569  stakers */\n      0x05\n        /* \"Farm.sol\":31562:31581  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":31570:31580  msg.sender */\n      caller\n        /* \"Farm.sol\":31562:31581  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":31562:31594  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"Farm.sol\":31600:31611  stakedToken */\n      dup2\n        /* \"Farm.sol\":31562:31612  stakers[msg.sender].stakedTokens.push(stakedToken) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"Farm.sol\":31623:31630  stakers */\n      0x05\n        /* \"Farm.sol\":31623:31642  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":31631:31641  msg.sender */\n      caller\n        /* \"Farm.sol\":31623:31642  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":31623:31655  stakers[msg.sender].amountStaked */\n      0x00\n      add\n      0x00\n        /* \"Farm.sol\":31623:31657  stakers[msg.sender].amountStaked++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_126\n      swap1\n      tag_85\n      jump\t// in\n    tag_126:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Farm.sol\":31694:31704  msg.sender */\n      caller\n        /* \"Farm.sol\":31668:31681  stakerAddress */\n      0x06\n        /* \"Farm.sol\":31668:31691  stakerAddress[_tokenId] */\n      0x00\n        /* \"Farm.sol\":31682:31690  _tokenId */\n      dup5\n        /* \"Farm.sol\":31668:31691  stakerAddress[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Farm.sol\":31668:31704  stakerAddress[_tokenId] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":31754:31769  block.timestamp */\n      timestamp\n        /* \"Farm.sol\":31715:31722  stakers */\n      0x05\n        /* \"Farm.sol\":31715:31734  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":31723:31733  msg.sender */\n      caller\n        /* \"Farm.sol\":31715:31734  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":31715:31751  stakers[msg.sender].timeOfLastUpdate */\n      0x02\n      add\n        /* \"Farm.sol\":31715:31769  stakers[msg.sender].timeOfLastUpdate = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":31076:31777  {\r... */\n      pop\n        /* \"Farm.sol\":19270:19290  _nonReentrantAfter() */\n      tag_127\n        /* \"Farm.sol\":19270:19288  _nonReentrantAfter */\n      tag_97\n        /* \"Farm.sol\":19270:19290  _nonReentrantAfter() */\n      jump\t// in\n    tag_127:\n        /* \"Farm.sol\":31021:31777  function stake(uint256 _tokenId) external nonReentrant {\r... */\n      pop\n      jump\t// out\n        /* \"Farm.sol\":30164:30190  IERC20 public rewardsToken */\n    tag_53:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Farm.sol\":29187:29388  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_58:\n        /* \"Farm.sol\":28167:28180  _checkOwner() */\n      tag_129\n        /* \"Farm.sol\":28167:28178  _checkOwner */\n      tag_101\n        /* \"Farm.sol\":28167:28180  _checkOwner() */\n      jump\t// in\n    tag_129:\n        /* \"Farm.sol\":29296:29297  0 */\n      0x00\n        /* \"Farm.sol\":29276:29298  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":29276:29284  newOwner */\n      dup2\n        /* \"Farm.sol\":29276:29298  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Farm.sol\":29268:29341  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"Farm.sol\":29352:29380  _transferOwnership(newOwner) */\n      tag_134\n        /* \"Farm.sol\":29371:29379  newOwner */\n      dup2\n        /* \"Farm.sol\":29352:29370  _transferOwnership */\n      tag_104\n        /* \"Farm.sol\":29352:29380  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_134:\n        /* \"Farm.sol\":29187:29388  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Farm.sol\":19306:19595  function _nonReentrantBefore() private {\r... */\n    tag_64:\n        /* \"Farm.sol\":18708:18709  2 */\n      0x02\n        /* \"Farm.sol\":19436:19443  _status */\n      sload(0x00)\n        /* \"Farm.sol\":19436:19455  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Farm.sol\":19428:19491  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"Farm.sol\":18708:18709  2 */\n      0x02\n        /* \"Farm.sol\":19569:19576  _status */\n      0x00\n        /* \"Farm.sol\":19569:19587  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":19306:19595  function _nonReentrantBefore() private {\r... */\n      jump\t// out\n        /* \"Farm.sol\":32857:33157  function calculateRewards(address _staker)\r... */\n    tag_73:\n        /* \"Farm.sol\":32950:32966  uint256 _rewards */\n      0x00\n        /* \"Farm.sol\":33144:33148  3600 */\n      0x0e10\n        /* \"Farm.sol\":33126:33140  rewardsPerHour */\n      sload(0x04)\n        /* \"Farm.sol\":33082:33089  stakers */\n      0x05\n        /* \"Farm.sol\":33082:33098  stakers[_staker] */\n      0x00\n        /* \"Farm.sol\":33090:33097  _staker */\n      dup6\n        /* \"Farm.sol\":33082:33098  stakers[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":33082:33111  stakers[_staker].amountStaked */\n      0x00\n      add\n      sload\n        /* \"Farm.sol\":33028:33035  stakers */\n      0x05\n        /* \"Farm.sol\":33028:33044  stakers[_staker] */\n      0x00\n        /* \"Farm.sol\":33036:33043  _staker */\n      dup7\n        /* \"Farm.sol\":33028:33044  stakers[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":33028:33061  stakers[_staker].timeOfLastUpdate */\n      0x02\n      add\n      sload\n        /* \"Farm.sol\":33010:33025  block.timestamp */\n      timestamp\n        /* \"Farm.sol\":33010:33061  block.timestamp - stakers[_staker].timeOfLastUpdate */\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"Farm.sol\":33009:33111  (block.timestamp - stakers[_staker].timeOfLastUpdate) *\r... */\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"Farm.sol\":32993:33140  (\r... */\n      tag_144\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_144:\n        /* \"Farm.sol\":32992:33148  ((\r... */\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"Farm.sol\":32984:33149  return (((\r... */\n      swap1\n      pop\n        /* \"Farm.sol\":32857:33157  function calculateRewards(address _staker)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Farm.sol\":19603:19816  function _nonReentrantAfter() private {\r... */\n    tag_97:\n        /* \"Farm.sol\":18664:18665  1 */\n      0x01\n        /* \"Farm.sol\":19786:19793  _status */\n      0x00\n        /* \"Farm.sol\":19786:19808  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":19603:19816  function _nonReentrantAfter() private {\r... */\n      jump\t// out\n        /* \"Farm.sol\":28446:28578  function _checkOwner() internal view virtual {\r... */\n    tag_101:\n        /* \"Farm.sol\":28521:28533  _msgSender() */\n      tag_149\n        /* \"Farm.sol\":28521:28531  _msgSender */\n      tag_150\n        /* \"Farm.sol\":28521:28533  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"Farm.sol\":28510:28533  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":28510:28517  owner() */\n      tag_151\n        /* \"Farm.sol\":28510:28515  owner */\n      tag_36\n        /* \"Farm.sol\":28510:28517  owner() */\n      jump\t// in\n    tag_151:\n        /* \"Farm.sol\":28510:28533  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Farm.sol\":28502:28570  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"Farm.sol\":28446:28578  function _checkOwner() internal view virtual {\r... */\n      jump\t// out\n        /* \"Farm.sol\":29548:29739  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_104:\n        /* \"Farm.sol\":29622:29638  address oldOwner */\n      0x00\n        /* \"Farm.sol\":29641:29647  _owner */\n      0x01\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":29622:29647  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Farm.sol\":29667:29675  newOwner */\n      dup2\n        /* \"Farm.sol\":29658:29664  _owner */\n      0x01\n      dup1\n        /* \"Farm.sol\":29658:29675  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":29722:29730  newOwner */\n      dup2\n        /* \"Farm.sol\":29691:29731  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":29712:29720  oldOwner */\n      dup2\n        /* \"Farm.sol\":29691:29731  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Farm.sol\":29611:29739  {\r... */\n      pop\n        /* \"Farm.sol\":29548:29739  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"Farm.sol\":15568:15666  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_150:\n        /* \"Farm.sol\":15621:15628  address */\n      0x00\n        /* \"Farm.sol\":15648:15658  msg.sender */\n      caller\n        /* \"Farm.sol\":15641:15658  return msg.sender */\n      swap1\n      pop\n        /* \"Farm.sol\":15568:15666  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_158:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_160\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:295   */\n    tag_162:\n        /* \"#utility.yul\":209:214   */\n      0x00\n        /* \"#utility.yul\":240:246   */\n      dup2\n        /* \"#utility.yul\":234:247   */\n      mload\n        /* \"#utility.yul\":225:247   */\n      swap1\n      pop\n        /* \"#utility.yul\":256:289   */\n      tag_164\n        /* \"#utility.yul\":283:288   */\n      dup2\n        /* \"#utility.yul\":256:289   */\n      tag_161\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":152:295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":314:866   */\n    tag_165:\n        /* \"#utility.yul\":371:379   */\n      0x00\n        /* \"#utility.yul\":381:387   */\n      dup1\n        /* \"#utility.yul\":431:434   */\n      dup4\n        /* \"#utility.yul\":424:428   */\n      0x1f\n        /* \"#utility.yul\":416:422   */\n      dup5\n        /* \"#utility.yul\":412:429   */\n      add\n        /* \"#utility.yul\":408:435   */\n      slt\n        /* \"#utility.yul\":398:520   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":439:518   */\n      tag_168\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":398:520   */\n    tag_167:\n        /* \"#utility.yul\":552:558   */\n      dup3\n        /* \"#utility.yul\":539:559   */\n      calldataload\n        /* \"#utility.yul\":529:559   */\n      swap1\n      pop\n        /* \"#utility.yul\":582:600   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":574:580   */\n      dup2\n        /* \"#utility.yul\":571:601   */\n      gt\n        /* \"#utility.yul\":568:685   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":604:683   */\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":568:685   */\n    tag_170:\n        /* \"#utility.yul\":718:722   */\n      0x20\n        /* \"#utility.yul\":710:716   */\n      dup4\n        /* \"#utility.yul\":706:723   */\n      add\n        /* \"#utility.yul\":694:723   */\n      swap2\n      pop\n        /* \"#utility.yul\":772:775   */\n      dup4\n        /* \"#utility.yul\":764:768   */\n      0x01\n        /* \"#utility.yul\":756:762   */\n      dup3\n        /* \"#utility.yul\":752:769   */\n      mul\n        /* \"#utility.yul\":742:750   */\n      dup4\n        /* \"#utility.yul\":738:770   */\n      add\n        /* \"#utility.yul\":735:776   */\n      gt\n        /* \"#utility.yul\":732:860   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":779:858   */\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":732:860   */\n    tag_173:\n        /* \"#utility.yul\":314:866   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":872:1011   */\n    tag_176:\n        /* \"#utility.yul\":918:923   */\n      0x00\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":943:963   */\n      calldataload\n        /* \"#utility.yul\":934:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":972:1005   */\n      tag_178\n        /* \"#utility.yul\":999:1004   */\n      dup2\n        /* \"#utility.yul\":972:1005   */\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":872:1011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1017:1346   */\n    tag_41:\n        /* \"#utility.yul\":1076:1082   */\n      0x00\n        /* \"#utility.yul\":1125:1127   */\n      0x20\n        /* \"#utility.yul\":1113:1122   */\n      dup3\n        /* \"#utility.yul\":1104:1111   */\n      dup5\n        /* \"#utility.yul\":1100:1123   */\n      sub\n        /* \"#utility.yul\":1096:1128   */\n      slt\n        /* \"#utility.yul\":1093:1212   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":1131:1210   */\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1093:1212   */\n    tag_181:\n        /* \"#utility.yul\":1251:1252   */\n      0x00\n        /* \"#utility.yul\":1276:1329   */\n      tag_184\n        /* \"#utility.yul\":1321:1328   */\n      dup5\n        /* \"#utility.yul\":1312:1318   */\n      dup3\n        /* \"#utility.yul\":1301:1310   */\n      dup6\n        /* \"#utility.yul\":1297:1319   */\n      add\n        /* \"#utility.yul\":1276:1329   */\n      tag_158\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1266:1329   */\n      swap2\n      pop\n        /* \"#utility.yul\":1222:1339   */\n      pop\n        /* \"#utility.yul\":1017:1346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1352:1703   */\n    tag_115:\n        /* \"#utility.yul\":1422:1428   */\n      0x00\n        /* \"#utility.yul\":1471:1473   */\n      0x20\n        /* \"#utility.yul\":1459:1468   */\n      dup3\n        /* \"#utility.yul\":1450:1457   */\n      dup5\n        /* \"#utility.yul\":1446:1469   */\n      sub\n        /* \"#utility.yul\":1442:1474   */\n      slt\n        /* \"#utility.yul\":1439:1558   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":1477:1556   */\n      tag_187\n      tag_183\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1439:1558   */\n    tag_186:\n        /* \"#utility.yul\":1597:1598   */\n      0x00\n        /* \"#utility.yul\":1622:1686   */\n      tag_188\n        /* \"#utility.yul\":1678:1685   */\n      dup5\n        /* \"#utility.yul\":1669:1675   */\n      dup3\n        /* \"#utility.yul\":1658:1667   */\n      dup6\n        /* \"#utility.yul\":1654:1676   */\n      add\n        /* \"#utility.yul\":1622:1686   */\n      tag_162\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1612:1686   */\n      swap2\n      pop\n        /* \"#utility.yul\":1568:1696   */\n      pop\n        /* \"#utility.yul\":1352:1703   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1709:2672   */\n    tag_17:\n        /* \"#utility.yul\":1806:1812   */\n      0x00\n        /* \"#utility.yul\":1814:1820   */\n      dup1\n        /* \"#utility.yul\":1822:1828   */\n      0x00\n        /* \"#utility.yul\":1830:1836   */\n      dup1\n        /* \"#utility.yul\":1838:1844   */\n      0x00\n        /* \"#utility.yul\":1887:1890   */\n      0x80\n        /* \"#utility.yul\":1875:1884   */\n      dup7\n        /* \"#utility.yul\":1866:1873   */\n      dup9\n        /* \"#utility.yul\":1862:1885   */\n      sub\n        /* \"#utility.yul\":1858:1891   */\n      slt\n        /* \"#utility.yul\":1855:1975   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":1894:1973   */\n      tag_191\n      tag_183\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1855:1975   */\n    tag_190:\n        /* \"#utility.yul\":2014:2015   */\n      0x00\n        /* \"#utility.yul\":2039:2092   */\n      tag_192\n        /* \"#utility.yul\":2084:2091   */\n      dup9\n        /* \"#utility.yul\":2075:2081   */\n      dup3\n        /* \"#utility.yul\":2064:2073   */\n      dup10\n        /* \"#utility.yul\":2060:2082   */\n      add\n        /* \"#utility.yul\":2039:2092   */\n      tag_158\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2029:2092   */\n      swap6\n      pop\n        /* \"#utility.yul\":1985:2102   */\n      pop\n        /* \"#utility.yul\":2141:2143   */\n      0x20\n        /* \"#utility.yul\":2167:2220   */\n      tag_193\n        /* \"#utility.yul\":2212:2219   */\n      dup9\n        /* \"#utility.yul\":2203:2209   */\n      dup3\n        /* \"#utility.yul\":2192:2201   */\n      dup10\n        /* \"#utility.yul\":2188:2210   */\n      add\n        /* \"#utility.yul\":2167:2220   */\n      tag_158\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2157:2220   */\n      swap5\n      pop\n        /* \"#utility.yul\":2112:2230   */\n      pop\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2295:2348   */\n      tag_194\n        /* \"#utility.yul\":2340:2347   */\n      dup9\n        /* \"#utility.yul\":2331:2337   */\n      dup3\n        /* \"#utility.yul\":2320:2329   */\n      dup10\n        /* \"#utility.yul\":2316:2338   */\n      add\n        /* \"#utility.yul\":2295:2348   */\n      tag_176\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2285:2348   */\n      swap4\n      pop\n        /* \"#utility.yul\":2240:2358   */\n      pop\n        /* \"#utility.yul\":2425:2427   */\n      0x60\n        /* \"#utility.yul\":2414:2423   */\n      dup7\n        /* \"#utility.yul\":2410:2428   */\n      add\n        /* \"#utility.yul\":2397:2429   */\n      calldataload\n        /* \"#utility.yul\":2456:2474   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2448:2454   */\n      dup2\n        /* \"#utility.yul\":2445:2475   */\n      gt\n        /* \"#utility.yul\":2442:2559   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_196\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2442:2559   */\n    tag_195:\n        /* \"#utility.yul\":2591:2655   */\n      tag_198\n        /* \"#utility.yul\":2647:2654   */\n      dup9\n        /* \"#utility.yul\":2638:2644   */\n      dup3\n        /* \"#utility.yul\":2627:2636   */\n      dup10\n        /* \"#utility.yul\":2623:2645   */\n      add\n        /* \"#utility.yul\":2591:2655   */\n      tag_165\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2573:2655   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2368:2665   */\n      pop\n        /* \"#utility.yul\":1709:2672   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2678:3007   */\n    tag_23:\n        /* \"#utility.yul\":2737:2743   */\n      0x00\n        /* \"#utility.yul\":2786:2788   */\n      0x20\n        /* \"#utility.yul\":2774:2783   */\n      dup3\n        /* \"#utility.yul\":2765:2772   */\n      dup5\n        /* \"#utility.yul\":2761:2784   */\n      sub\n        /* \"#utility.yul\":2757:2789   */\n      slt\n        /* \"#utility.yul\":2754:2873   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":2792:2871   */\n      tag_201\n      tag_183\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2754:2873   */\n    tag_200:\n        /* \"#utility.yul\":2912:2913   */\n      0x00\n        /* \"#utility.yul\":2937:2990   */\n      tag_202\n        /* \"#utility.yul\":2982:2989   */\n      dup5\n        /* \"#utility.yul\":2973:2979   */\n      dup3\n        /* \"#utility.yul\":2962:2971   */\n      dup6\n        /* \"#utility.yul\":2958:2980   */\n      add\n        /* \"#utility.yul\":2937:2990   */\n      tag_176\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2927:2990   */\n      swap2\n      pop\n        /* \"#utility.yul\":2883:3000   */\n      pop\n        /* \"#utility.yul\":2678:3007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3013:3131   */\n    tag_203:\n        /* \"#utility.yul\":3100:3124   */\n      tag_205\n        /* \"#utility.yul\":3118:3123   */\n      dup2\n        /* \"#utility.yul\":3100:3124   */\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3095:3098   */\n      dup3\n        /* \"#utility.yul\":3088:3125   */\n      mstore\n        /* \"#utility.yul\":3013:3131   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3137:3294   */\n    tag_207:\n        /* \"#utility.yul\":3242:3287   */\n      tag_209\n        /* \"#utility.yul\":3262:3286   */\n      tag_210\n        /* \"#utility.yul\":3280:3285   */\n      dup3\n        /* \"#utility.yul\":3262:3286   */\n      tag_206\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3242:3287   */\n      tag_211\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3237:3240   */\n      dup3\n        /* \"#utility.yul\":3230:3288   */\n      mstore\n        /* \"#utility.yul\":3137:3294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3300:3409   */\n    tag_212:\n        /* \"#utility.yul\":3381:3402   */\n      tag_214\n        /* \"#utility.yul\":3396:3401   */\n      dup2\n        /* \"#utility.yul\":3381:3402   */\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":3376:3379   */\n      dup3\n        /* \"#utility.yul\":3369:3403   */\n      mstore\n        /* \"#utility.yul\":3300:3409   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3415:3530   */\n    tag_216:\n        /* \"#utility.yul\":3500:3523   */\n      tag_218\n        /* \"#utility.yul\":3517:3522   */\n      dup2\n        /* \"#utility.yul\":3500:3523   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":3495:3498   */\n      dup3\n        /* \"#utility.yul\":3488:3524   */\n      mstore\n        /* \"#utility.yul\":3415:3530   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3558:3872   */\n    tag_220:\n        /* \"#utility.yul\":3672:3675   */\n      0x00\n        /* \"#utility.yul\":3693:3781   */\n      tag_222\n        /* \"#utility.yul\":3774:3780   */\n      dup4\n        /* \"#utility.yul\":3769:3772   */\n      dup6\n        /* \"#utility.yul\":3693:3781   */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3686:3781   */\n      swap4\n      pop\n        /* \"#utility.yul\":3791:3834   */\n      tag_224\n        /* \"#utility.yul\":3827:3833   */\n      dup4\n        /* \"#utility.yul\":3822:3825   */\n      dup6\n        /* \"#utility.yul\":3815:3820   */\n      dup5\n        /* \"#utility.yul\":3791:3834   */\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3859:3865   */\n      dup3\n        /* \"#utility.yul\":3854:3857   */\n      dup5\n        /* \"#utility.yul\":3850:3866   */\n      add\n        /* \"#utility.yul\":3843:3866   */\n      swap1\n      pop\n        /* \"#utility.yul\":3558:3872   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3878:4037   */\n    tag_226:\n        /* \"#utility.yul\":3979:4030   */\n      tag_228\n        /* \"#utility.yul\":4024:4029   */\n      dup2\n        /* \"#utility.yul\":3979:4030   */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3974:3977   */\n      dup3\n        /* \"#utility.yul\":3967:4031   */\n      mstore\n        /* \"#utility.yul\":3878:4037   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4043:4204   */\n    tag_230:\n        /* \"#utility.yul\":4145:4197   */\n      tag_232\n        /* \"#utility.yul\":4191:4196   */\n      dup2\n        /* \"#utility.yul\":4145:4197   */\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4140:4143   */\n      dup3\n        /* \"#utility.yul\":4133:4198   */\n      mstore\n        /* \"#utility.yul\":4043:4204   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4210:4576   */\n    tag_234:\n        /* \"#utility.yul\":4352:4355   */\n      0x00\n        /* \"#utility.yul\":4373:4440   */\n      tag_236\n        /* \"#utility.yul\":4437:4439   */\n      0x19\n        /* \"#utility.yul\":4432:4435   */\n      dup4\n        /* \"#utility.yul\":4373:4440   */\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4366:4440   */\n      swap2\n      pop\n        /* \"#utility.yul\":4449:4542   */\n      tag_238\n        /* \"#utility.yul\":4538:4541   */\n      dup3\n        /* \"#utility.yul\":4449:4542   */\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4567:4569   */\n      0x20\n        /* \"#utility.yul\":4562:4565   */\n      dup3\n        /* \"#utility.yul\":4558:4570   */\n      add\n        /* \"#utility.yul\":4551:4570   */\n      swap1\n      pop\n        /* \"#utility.yul\":4210:4576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4582:4948   */\n    tag_240:\n        /* \"#utility.yul\":4724:4727   */\n      0x00\n        /* \"#utility.yul\":4745:4812   */\n      tag_242\n        /* \"#utility.yul\":4809:4811   */\n      0x26\n        /* \"#utility.yul\":4804:4807   */\n      dup4\n        /* \"#utility.yul\":4745:4812   */\n      tag_237\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":4738:4812   */\n      swap2\n      pop\n        /* \"#utility.yul\":4821:4914   */\n      tag_243\n        /* \"#utility.yul\":4910:4913   */\n      dup3\n        /* \"#utility.yul\":4821:4914   */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4939:4941   */\n      0x40\n        /* \"#utility.yul\":4934:4937   */\n      dup3\n        /* \"#utility.yul\":4930:4942   */\n      add\n        /* \"#utility.yul\":4923:4942   */\n      swap1\n      pop\n        /* \"#utility.yul\":4582:4948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4954:5320   */\n    tag_245:\n        /* \"#utility.yul\":5096:5099   */\n      0x00\n        /* \"#utility.yul\":5117:5184   */\n      tag_247\n        /* \"#utility.yul\":5181:5183   */\n      0x19\n        /* \"#utility.yul\":5176:5179   */\n      dup4\n        /* \"#utility.yul\":5117:5184   */\n      tag_237\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5110:5184   */\n      swap2\n      pop\n        /* \"#utility.yul\":5193:5286   */\n      tag_248\n        /* \"#utility.yul\":5282:5285   */\n      dup3\n        /* \"#utility.yul\":5193:5286   */\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5311:5313   */\n      0x20\n        /* \"#utility.yul\":5306:5309   */\n      dup3\n        /* \"#utility.yul\":5302:5314   */\n      add\n        /* \"#utility.yul\":5295:5314   */\n      swap1\n      pop\n        /* \"#utility.yul\":4954:5320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5326:5692   */\n    tag_250:\n        /* \"#utility.yul\":5468:5471   */\n      0x00\n        /* \"#utility.yul\":5489:5556   */\n      tag_252\n        /* \"#utility.yul\":5553:5555   */\n      0x20\n        /* \"#utility.yul\":5548:5551   */\n      dup4\n        /* \"#utility.yul\":5489:5556   */\n      tag_237\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5482:5556   */\n      swap2\n      pop\n        /* \"#utility.yul\":5565:5658   */\n      tag_253\n        /* \"#utility.yul\":5654:5657   */\n      dup3\n        /* \"#utility.yul\":5565:5658   */\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5683:5685   */\n      0x20\n        /* \"#utility.yul\":5678:5681   */\n      dup3\n        /* \"#utility.yul\":5674:5686   */\n      add\n        /* \"#utility.yul\":5667:5686   */\n      swap1\n      pop\n        /* \"#utility.yul\":5326:5692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5698:6064   */\n    tag_255:\n        /* \"#utility.yul\":5840:5843   */\n      0x00\n        /* \"#utility.yul\":5861:5928   */\n      tag_257\n        /* \"#utility.yul\":5925:5927   */\n      0x1f\n        /* \"#utility.yul\":5920:5923   */\n      dup4\n        /* \"#utility.yul\":5861:5928   */\n      tag_237\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5854:5928   */\n      swap2\n      pop\n        /* \"#utility.yul\":5937:6030   */\n      tag_258\n        /* \"#utility.yul\":6026:6029   */\n      dup3\n        /* \"#utility.yul\":5937:6030   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6055:6057   */\n      0x20\n        /* \"#utility.yul\":6050:6053   */\n      dup3\n        /* \"#utility.yul\":6046:6058   */\n      add\n        /* \"#utility.yul\":6039:6058   */\n      swap1\n      pop\n        /* \"#utility.yul\":5698:6064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6070:6188   */\n    tag_260:\n        /* \"#utility.yul\":6157:6181   */\n      tag_262\n        /* \"#utility.yul\":6175:6180   */\n      dup2\n        /* \"#utility.yul\":6157:6181   */\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6152:6155   */\n      dup3\n        /* \"#utility.yul\":6145:6182   */\n      mstore\n        /* \"#utility.yul\":6070:6188   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6194:6351   */\n    tag_264:\n        /* \"#utility.yul\":6299:6344   */\n      tag_266\n        /* \"#utility.yul\":6319:6343   */\n      tag_267\n        /* \"#utility.yul\":6337:6342   */\n      dup3\n        /* \"#utility.yul\":6319:6343   */\n      tag_263\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":6299:6344   */\n      tag_268\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6294:6297   */\n      dup3\n        /* \"#utility.yul\":6287:6345   */\n      mstore\n        /* \"#utility.yul\":6194:6351   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6357:7071   */\n    tag_61:\n        /* \"#utility.yul\":6581:6584   */\n      0x00\n        /* \"#utility.yul\":6596:6671   */\n      tag_270\n        /* \"#utility.yul\":6667:6670   */\n      dup3\n        /* \"#utility.yul\":6658:6664   */\n      dup9\n        /* \"#utility.yul\":6596:6671   */\n      tag_207\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":6696:6698   */\n      0x14\n        /* \"#utility.yul\":6691:6694   */\n      dup3\n        /* \"#utility.yul\":6687:6699   */\n      add\n        /* \"#utility.yul\":6680:6699   */\n      swap2\n      pop\n        /* \"#utility.yul\":6709:6784   */\n      tag_271\n        /* \"#utility.yul\":6780:6783   */\n      dup3\n        /* \"#utility.yul\":6771:6777   */\n      dup8\n        /* \"#utility.yul\":6709:6784   */\n      tag_207\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6809:6811   */\n      0x14\n        /* \"#utility.yul\":6804:6807   */\n      dup3\n        /* \"#utility.yul\":6800:6812   */\n      add\n        /* \"#utility.yul\":6793:6812   */\n      swap2\n      pop\n        /* \"#utility.yul\":6822:6897   */\n      tag_272\n        /* \"#utility.yul\":6893:6896   */\n      dup3\n        /* \"#utility.yul\":6884:6890   */\n      dup7\n        /* \"#utility.yul\":6822:6897   */\n      tag_264\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":6922:6924   */\n      0x20\n        /* \"#utility.yul\":6917:6920   */\n      dup3\n        /* \"#utility.yul\":6913:6925   */\n      add\n        /* \"#utility.yul\":6906:6925   */\n      swap2\n      pop\n        /* \"#utility.yul\":6942:7045   */\n      tag_273\n        /* \"#utility.yul\":7041:7044   */\n      dup3\n        /* \"#utility.yul\":7032:7038   */\n      dup5\n        /* \"#utility.yul\":7024:7030   */\n      dup7\n        /* \"#utility.yul\":6942:7045   */\n      tag_220\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6935:7045   */\n      swap2\n      pop\n        /* \"#utility.yul\":7062:7065   */\n      dup2\n        /* \"#utility.yul\":7055:7065   */\n      swap1\n      pop\n        /* \"#utility.yul\":6357:7071   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7077:7299   */\n    tag_38:\n        /* \"#utility.yul\":7170:7174   */\n      0x00\n        /* \"#utility.yul\":7208:7210   */\n      0x20\n        /* \"#utility.yul\":7197:7206   */\n      dup3\n        /* \"#utility.yul\":7193:7211   */\n      add\n        /* \"#utility.yul\":7185:7211   */\n      swap1\n      pop\n        /* \"#utility.yul\":7221:7292   */\n      tag_275\n        /* \"#utility.yul\":7289:7290   */\n      0x00\n        /* \"#utility.yul\":7278:7287   */\n      dup4\n        /* \"#utility.yul\":7274:7291   */\n      add\n        /* \"#utility.yul\":7265:7271   */\n      dup5\n        /* \"#utility.yul\":7221:7292   */\n      tag_203\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":7077:7299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7305:7747   */\n    tag_92:\n        /* \"#utility.yul\":7454:7458   */\n      0x00\n        /* \"#utility.yul\":7492:7494   */\n      0x60\n        /* \"#utility.yul\":7481:7490   */\n      dup3\n        /* \"#utility.yul\":7477:7495   */\n      add\n        /* \"#utility.yul\":7469:7495   */\n      swap1\n      pop\n        /* \"#utility.yul\":7505:7576   */\n      tag_277\n        /* \"#utility.yul\":7573:7574   */\n      0x00\n        /* \"#utility.yul\":7562:7571   */\n      dup4\n        /* \"#utility.yul\":7558:7575   */\n      add\n        /* \"#utility.yul\":7549:7555   */\n      dup7\n        /* \"#utility.yul\":7505:7576   */\n      tag_203\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":7586:7658   */\n      tag_278\n        /* \"#utility.yul\":7654:7656   */\n      0x20\n        /* \"#utility.yul\":7643:7652   */\n      dup4\n        /* \"#utility.yul\":7639:7657   */\n      add\n        /* \"#utility.yul\":7630:7636   */\n      dup6\n        /* \"#utility.yul\":7586:7658   */\n      tag_203\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":7668:7740   */\n      tag_279\n        /* \"#utility.yul\":7736:7738   */\n      0x40\n        /* \"#utility.yul\":7725:7734   */\n      dup4\n        /* \"#utility.yul\":7721:7739   */\n      add\n        /* \"#utility.yul\":7712:7718   */\n      dup5\n        /* \"#utility.yul\":7668:7740   */\n      tag_260\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7305:7747   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7753:7963   */\n    tag_28:\n        /* \"#utility.yul\":7840:7844   */\n      0x00\n        /* \"#utility.yul\":7878:7880   */\n      0x20\n        /* \"#utility.yul\":7867:7876   */\n      dup3\n        /* \"#utility.yul\":7863:7881   */\n      add\n        /* \"#utility.yul\":7855:7881   */\n      swap1\n      pop\n        /* \"#utility.yul\":7891:7956   */\n      tag_281\n        /* \"#utility.yul\":7953:7954   */\n      0x00\n        /* \"#utility.yul\":7942:7951   */\n      dup4\n        /* \"#utility.yul\":7938:7955   */\n      add\n        /* \"#utility.yul\":7929:7935   */\n      dup5\n        /* \"#utility.yul\":7891:7956   */\n      tag_212\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7753:7963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7969:8187   */\n    tag_20:\n        /* \"#utility.yul\":8060:8064   */\n      0x00\n        /* \"#utility.yul\":8098:8100   */\n      0x20\n        /* \"#utility.yul\":8087:8096   */\n      dup3\n        /* \"#utility.yul\":8083:8101   */\n      add\n        /* \"#utility.yul\":8075:8101   */\n      swap1\n      pop\n        /* \"#utility.yul\":8111:8180   */\n      tag_283\n        /* \"#utility.yul\":8177:8178   */\n      0x00\n        /* \"#utility.yul\":8166:8175   */\n      dup4\n        /* \"#utility.yul\":8162:8179   */\n      add\n        /* \"#utility.yul\":8153:8159   */\n      dup5\n        /* \"#utility.yul\":8111:8180   */\n      tag_216\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":7969:8187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8193:8443   */\n    tag_55:\n        /* \"#utility.yul\":8300:8304   */\n      0x00\n        /* \"#utility.yul\":8338:8340   */\n      0x20\n        /* \"#utility.yul\":8327:8336   */\n      dup3\n        /* \"#utility.yul\":8323:8341   */\n      add\n        /* \"#utility.yul\":8315:8341   */\n      swap1\n      pop\n        /* \"#utility.yul\":8351:8436   */\n      tag_285\n        /* \"#utility.yul\":8433:8434   */\n      0x00\n        /* \"#utility.yul\":8422:8431   */\n      dup4\n        /* \"#utility.yul\":8418:8435   */\n      add\n        /* \"#utility.yul\":8409:8415   */\n      dup5\n        /* \"#utility.yul\":8351:8436   */\n      tag_226\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":8193:8443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8449:8701   */\n    tag_32:\n        /* \"#utility.yul\":8557:8561   */\n      0x00\n        /* \"#utility.yul\":8595:8597   */\n      0x20\n        /* \"#utility.yul\":8584:8593   */\n      dup3\n        /* \"#utility.yul\":8580:8598   */\n      add\n        /* \"#utility.yul\":8572:8598   */\n      swap1\n      pop\n        /* \"#utility.yul\":8608:8694   */\n      tag_287\n        /* \"#utility.yul\":8691:8692   */\n      0x00\n        /* \"#utility.yul\":8680:8689   */\n      dup4\n        /* \"#utility.yul\":8676:8693   */\n      add\n        /* \"#utility.yul\":8667:8673   */\n      dup5\n        /* \"#utility.yul\":8608:8694   */\n      tag_230\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":8449:8701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8707:9126   */\n    tag_71:\n        /* \"#utility.yul\":8873:8877   */\n      0x00\n        /* \"#utility.yul\":8911:8913   */\n      0x20\n        /* \"#utility.yul\":8900:8909   */\n      dup3\n        /* \"#utility.yul\":8896:8914   */\n      add\n        /* \"#utility.yul\":8888:8914   */\n      swap1\n      pop\n        /* \"#utility.yul\":8960:8969   */\n      dup2\n        /* \"#utility.yul\":8954:8958   */\n      dup2\n        /* \"#utility.yul\":8950:8970   */\n      sub\n        /* \"#utility.yul\":8946:8947   */\n      0x00\n        /* \"#utility.yul\":8935:8944   */\n      dup4\n        /* \"#utility.yul\":8931:8948   */\n      add\n        /* \"#utility.yul\":8924:8971   */\n      mstore\n        /* \"#utility.yul\":8988:9119   */\n      tag_289\n        /* \"#utility.yul\":9114:9118   */\n      dup2\n        /* \"#utility.yul\":8988:9119   */\n      tag_234\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":8980:9119   */\n      swap1\n      pop\n        /* \"#utility.yul\":8707:9126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9132:9551   */\n    tag_133:\n        /* \"#utility.yul\":9298:9302   */\n      0x00\n        /* \"#utility.yul\":9336:9338   */\n      0x20\n        /* \"#utility.yul\":9325:9334   */\n      dup3\n        /* \"#utility.yul\":9321:9339   */\n      add\n        /* \"#utility.yul\":9313:9339   */\n      swap1\n      pop\n        /* \"#utility.yul\":9385:9394   */\n      dup2\n        /* \"#utility.yul\":9379:9383   */\n      dup2\n        /* \"#utility.yul\":9375:9395   */\n      sub\n        /* \"#utility.yul\":9371:9372   */\n      0x00\n        /* \"#utility.yul\":9360:9369   */\n      dup4\n        /* \"#utility.yul\":9356:9373   */\n      add\n        /* \"#utility.yul\":9349:9396   */\n      mstore\n        /* \"#utility.yul\":9413:9544   */\n      tag_291\n        /* \"#utility.yul\":9539:9543   */\n      dup2\n        /* \"#utility.yul\":9413:9544   */\n      tag_240\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":9405:9544   */\n      swap1\n      pop\n        /* \"#utility.yul\":9132:9551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9557:9976   */\n    tag_68:\n        /* \"#utility.yul\":9723:9727   */\n      0x00\n        /* \"#utility.yul\":9761:9763   */\n      0x20\n        /* \"#utility.yul\":9750:9759   */\n      dup3\n        /* \"#utility.yul\":9746:9764   */\n      add\n        /* \"#utility.yul\":9738:9764   */\n      swap1\n      pop\n        /* \"#utility.yul\":9810:9819   */\n      dup2\n        /* \"#utility.yul\":9804:9808   */\n      dup2\n        /* \"#utility.yul\":9800:9820   */\n      sub\n        /* \"#utility.yul\":9796:9797   */\n      0x00\n        /* \"#utility.yul\":9785:9794   */\n      dup4\n        /* \"#utility.yul\":9781:9798   */\n      add\n        /* \"#utility.yul\":9774:9821   */\n      mstore\n        /* \"#utility.yul\":9838:9969   */\n      tag_293\n        /* \"#utility.yul\":9964:9968   */\n      dup2\n        /* \"#utility.yul\":9838:9969   */\n      tag_245\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":9830:9969   */\n      swap1\n      pop\n        /* \"#utility.yul\":9557:9976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9982:10401   */\n    tag_154:\n        /* \"#utility.yul\":10148:10152   */\n      0x00\n        /* \"#utility.yul\":10186:10188   */\n      0x20\n        /* \"#utility.yul\":10175:10184   */\n      dup3\n        /* \"#utility.yul\":10171:10189   */\n      add\n        /* \"#utility.yul\":10163:10189   */\n      swap1\n      pop\n        /* \"#utility.yul\":10235:10244   */\n      dup2\n        /* \"#utility.yul\":10229:10233   */\n      dup2\n        /* \"#utility.yul\":10225:10245   */\n      sub\n        /* \"#utility.yul\":10221:10222   */\n      0x00\n        /* \"#utility.yul\":10210:10219   */\n      dup4\n        /* \"#utility.yul\":10206:10223   */\n      add\n        /* \"#utility.yul\":10199:10246   */\n      mstore\n        /* \"#utility.yul\":10263:10394   */\n      tag_295\n        /* \"#utility.yul\":10389:10393   */\n      dup2\n        /* \"#utility.yul\":10263:10394   */\n      tag_250\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10255:10394   */\n      swap1\n      pop\n        /* \"#utility.yul\":9982:10401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10407:10826   */\n    tag_138:\n        /* \"#utility.yul\":10573:10577   */\n      0x00\n        /* \"#utility.yul\":10611:10613   */\n      0x20\n        /* \"#utility.yul\":10600:10609   */\n      dup3\n        /* \"#utility.yul\":10596:10614   */\n      add\n        /* \"#utility.yul\":10588:10614   */\n      swap1\n      pop\n        /* \"#utility.yul\":10660:10669   */\n      dup2\n        /* \"#utility.yul\":10654:10658   */\n      dup2\n        /* \"#utility.yul\":10650:10670   */\n      sub\n        /* \"#utility.yul\":10646:10647   */\n      0x00\n        /* \"#utility.yul\":10635:10644   */\n      dup4\n        /* \"#utility.yul\":10631:10648   */\n      add\n        /* \"#utility.yul\":10624:10671   */\n      mstore\n        /* \"#utility.yul\":10688:10819   */\n      tag_297\n        /* \"#utility.yul\":10814:10818   */\n      dup2\n        /* \"#utility.yul\":10688:10819   */\n      tag_255\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":10680:10819   */\n      swap1\n      pop\n        /* \"#utility.yul\":10407:10826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10832:11054   */\n    tag_110:\n        /* \"#utility.yul\":10925:10929   */\n      0x00\n        /* \"#utility.yul\":10963:10965   */\n      0x20\n        /* \"#utility.yul\":10952:10961   */\n      dup3\n        /* \"#utility.yul\":10948:10966   */\n      add\n        /* \"#utility.yul\":10940:10966   */\n      swap1\n      pop\n        /* \"#utility.yul\":10976:11047   */\n      tag_299\n        /* \"#utility.yul\":11044:11045   */\n      0x00\n        /* \"#utility.yul\":11033:11042   */\n      dup4\n        /* \"#utility.yul\":11029:11046   */\n      add\n        /* \"#utility.yul\":11020:11026   */\n      dup5\n        /* \"#utility.yul\":10976:11047   */\n      tag_260\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":10832:11054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11060:11502   */\n    tag_44:\n        /* \"#utility.yul\":11209:11213   */\n      0x00\n        /* \"#utility.yul\":11247:11249   */\n      0x60\n        /* \"#utility.yul\":11236:11245   */\n      dup3\n        /* \"#utility.yul\":11232:11250   */\n      add\n        /* \"#utility.yul\":11224:11250   */\n      swap1\n      pop\n        /* \"#utility.yul\":11260:11331   */\n      tag_301\n        /* \"#utility.yul\":11328:11329   */\n      0x00\n        /* \"#utility.yul\":11317:11326   */\n      dup4\n        /* \"#utility.yul\":11313:11330   */\n      add\n        /* \"#utility.yul\":11304:11310   */\n      dup7\n        /* \"#utility.yul\":11260:11331   */\n      tag_260\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":11341:11413   */\n      tag_302\n        /* \"#utility.yul\":11409:11411   */\n      0x20\n        /* \"#utility.yul\":11398:11407   */\n      dup4\n        /* \"#utility.yul\":11394:11412   */\n      add\n        /* \"#utility.yul\":11385:11391   */\n      dup6\n        /* \"#utility.yul\":11341:11413   */\n      tag_260\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":11423:11495   */\n      tag_303\n        /* \"#utility.yul\":11491:11493   */\n      0x40\n        /* \"#utility.yul\":11480:11489   */\n      dup4\n        /* \"#utility.yul\":11476:11494   */\n      add\n        /* \"#utility.yul\":11467:11473   */\n      dup5\n        /* \"#utility.yul\":11423:11495   */\n      tag_260\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":11060:11502   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11589:11736   */\n    tag_223:\n        /* \"#utility.yul\":11690:11701   */\n      0x00\n        /* \"#utility.yul\":11727:11730   */\n      dup2\n        /* \"#utility.yul\":11712:11730   */\n      swap1\n      pop\n        /* \"#utility.yul\":11589:11736   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11742:11911   */\n    tag_237:\n        /* \"#utility.yul\":11826:11837   */\n      0x00\n        /* \"#utility.yul\":11860:11866   */\n      dup3\n        /* \"#utility.yul\":11855:11858   */\n      dup3\n        /* \"#utility.yul\":11848:11867   */\n      mstore\n        /* \"#utility.yul\":11900:11904   */\n      0x20\n        /* \"#utility.yul\":11895:11898   */\n      dup3\n        /* \"#utility.yul\":11891:11905   */\n      add\n        /* \"#utility.yul\":11876:11905   */\n      swap1\n      pop\n        /* \"#utility.yul\":11742:11911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11917:12222   */\n    tag_75:\n        /* \"#utility.yul\":11957:11960   */\n      0x00\n        /* \"#utility.yul\":11976:11996   */\n      tag_309\n        /* \"#utility.yul\":11994:11995   */\n      dup3\n        /* \"#utility.yul\":11976:11996   */\n      tag_263\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":11971:11996   */\n      swap2\n      pop\n        /* \"#utility.yul\":12010:12030   */\n      tag_310\n        /* \"#utility.yul\":12028:12029   */\n      dup4\n        /* \"#utility.yul\":12010:12030   */\n      tag_263\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":12005:12030   */\n      swap3\n      pop\n        /* \"#utility.yul\":12164:12165   */\n      dup3\n        /* \"#utility.yul\":12096:12162   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12092:12166   */\n      sub\n        /* \"#utility.yul\":12089:12090   */\n      dup3\n        /* \"#utility.yul\":12086:12167   */\n      gt\n        /* \"#utility.yul\":12083:12190   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":12170:12188   */\n      tag_312\n      tag_313\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":12083:12190   */\n    tag_311:\n        /* \"#utility.yul\":12214:12215   */\n      dup3\n        /* \"#utility.yul\":12211:12212   */\n      dup3\n        /* \"#utility.yul\":12207:12216   */\n      add\n        /* \"#utility.yul\":12200:12216   */\n      swap1\n      pop\n        /* \"#utility.yul\":11917:12222   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12228:12413   */\n    tag_146:\n        /* \"#utility.yul\":12268:12269   */\n      0x00\n        /* \"#utility.yul\":12285:12305   */\n      tag_315\n        /* \"#utility.yul\":12303:12304   */\n      dup3\n        /* \"#utility.yul\":12285:12305   */\n      tag_263\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":12280:12305   */\n      swap2\n      pop\n        /* \"#utility.yul\":12319:12339   */\n      tag_316\n        /* \"#utility.yul\":12337:12338   */\n      dup4\n        /* \"#utility.yul\":12319:12339   */\n      tag_263\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":12314:12339   */\n      swap3\n      pop\n        /* \"#utility.yul\":12358:12359   */\n      dup3\n        /* \"#utility.yul\":12348:12383   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":12363:12381   */\n      tag_318\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":12348:12383   */\n    tag_317:\n        /* \"#utility.yul\":12405:12406   */\n      dup3\n        /* \"#utility.yul\":12402:12403   */\n      dup3\n        /* \"#utility.yul\":12398:12407   */\n      div\n        /* \"#utility.yul\":12393:12407   */\n      swap1\n      pop\n        /* \"#utility.yul\":12228:12413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12419:12767   */\n    tag_143:\n        /* \"#utility.yul\":12459:12466   */\n      0x00\n        /* \"#utility.yul\":12482:12502   */\n      tag_321\n        /* \"#utility.yul\":12500:12501   */\n      dup3\n        /* \"#utility.yul\":12482:12502   */\n      tag_263\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":12477:12502   */\n      swap2\n      pop\n        /* \"#utility.yul\":12516:12536   */\n      tag_322\n        /* \"#utility.yul\":12534:12535   */\n      dup4\n        /* \"#utility.yul\":12516:12536   */\n      tag_263\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":12511:12536   */\n      swap3\n      pop\n        /* \"#utility.yul\":12704:12705   */\n      dup2\n        /* \"#utility.yul\":12636:12702   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12632:12706   */\n      div\n        /* \"#utility.yul\":12629:12630   */\n      dup4\n        /* \"#utility.yul\":12626:12707   */\n      gt\n        /* \"#utility.yul\":12621:12622   */\n      dup3\n        /* \"#utility.yul\":12614:12623   */\n      iszero\n        /* \"#utility.yul\":12607:12624   */\n      iszero\n        /* \"#utility.yul\":12603:12708   */\n      and\n        /* \"#utility.yul\":12600:12731   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":12711:12729   */\n      tag_324\n      tag_313\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":12600:12731   */\n    tag_323:\n        /* \"#utility.yul\":12759:12760   */\n      dup3\n        /* \"#utility.yul\":12756:12757   */\n      dup3\n        /* \"#utility.yul\":12752:12761   */\n      mul\n        /* \"#utility.yul\":12741:12761   */\n      swap1\n      pop\n        /* \"#utility.yul\":12419:12767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12773:12964   */\n    tag_141:\n        /* \"#utility.yul\":12813:12817   */\n      0x00\n        /* \"#utility.yul\":12833:12853   */\n      tag_326\n        /* \"#utility.yul\":12851:12852   */\n      dup3\n        /* \"#utility.yul\":12833:12853   */\n      tag_263\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":12828:12853   */\n      swap2\n      pop\n        /* \"#utility.yul\":12867:12887   */\n      tag_327\n        /* \"#utility.yul\":12885:12886   */\n      dup4\n        /* \"#utility.yul\":12867:12887   */\n      tag_263\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":12862:12887   */\n      swap3\n      pop\n        /* \"#utility.yul\":12906:12907   */\n      dup3\n        /* \"#utility.yul\":12903:12904   */\n      dup3\n        /* \"#utility.yul\":12900:12908   */\n      lt\n        /* \"#utility.yul\":12897:12931   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":12911:12929   */\n      tag_329\n      tag_313\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":12897:12931   */\n    tag_328:\n        /* \"#utility.yul\":12956:12957   */\n      dup3\n        /* \"#utility.yul\":12953:12954   */\n      dup3\n        /* \"#utility.yul\":12949:12958   */\n      sub\n        /* \"#utility.yul\":12941:12958   */\n      swap1\n      pop\n        /* \"#utility.yul\":12773:12964   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12970:13066   */\n    tag_206:\n        /* \"#utility.yul\":13007:13014   */\n      0x00\n        /* \"#utility.yul\":13036:13060   */\n      tag_331\n        /* \"#utility.yul\":13054:13059   */\n      dup3\n        /* \"#utility.yul\":13036:13060   */\n      tag_332\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":13025:13060   */\n      swap1\n      pop\n        /* \"#utility.yul\":12970:13066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13072:13162   */\n    tag_215:\n        /* \"#utility.yul\":13106:13113   */\n      0x00\n        /* \"#utility.yul\":13149:13154   */\n      dup2\n        /* \"#utility.yul\":13142:13155   */\n      iszero\n        /* \"#utility.yul\":13135:13156   */\n      iszero\n        /* \"#utility.yul\":13124:13156   */\n      swap1\n      pop\n        /* \"#utility.yul\":13072:13162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13168:13317   */\n    tag_219:\n        /* \"#utility.yul\":13204:13211   */\n      0x00\n        /* \"#utility.yul\":13244:13310   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13237:13242   */\n      dup3\n        /* \"#utility.yul\":13233:13311   */\n      and\n        /* \"#utility.yul\":13222:13311   */\n      swap1\n      pop\n        /* \"#utility.yul\":13168:13317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13323:13449   */\n    tag_332:\n        /* \"#utility.yul\":13360:13367   */\n      0x00\n        /* \"#utility.yul\":13400:13442   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13393:13398   */\n      dup3\n        /* \"#utility.yul\":13389:13443   */\n      and\n        /* \"#utility.yul\":13378:13443   */\n      swap1\n      pop\n        /* \"#utility.yul\":13323:13449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13455:13532   */\n    tag_263:\n        /* \"#utility.yul\":13492:13499   */\n      0x00\n        /* \"#utility.yul\":13521:13526   */\n      dup2\n        /* \"#utility.yul\":13510:13526   */\n      swap1\n      pop\n        /* \"#utility.yul\":13455:13532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13538:13678   */\n    tag_229:\n        /* \"#utility.yul\":13602:13611   */\n      0x00\n        /* \"#utility.yul\":13635:13672   */\n      tag_338\n        /* \"#utility.yul\":13666:13671   */\n      dup3\n        /* \"#utility.yul\":13635:13672   */\n      tag_339\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":13622:13672   */\n      swap1\n      pop\n        /* \"#utility.yul\":13538:13678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13684:13825   */\n    tag_233:\n        /* \"#utility.yul\":13749:13758   */\n      0x00\n        /* \"#utility.yul\":13782:13819   */\n      tag_341\n        /* \"#utility.yul\":13813:13818   */\n      dup3\n        /* \"#utility.yul\":13782:13819   */\n      tag_339\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":13769:13819   */\n      swap1\n      pop\n        /* \"#utility.yul\":13684:13825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13831:13957   */\n    tag_339:\n        /* \"#utility.yul\":13881:13890   */\n      0x00\n        /* \"#utility.yul\":13914:13951   */\n      tag_343\n        /* \"#utility.yul\":13945:13950   */\n      dup3\n        /* \"#utility.yul\":13914:13951   */\n      tag_344\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":13901:13951   */\n      swap1\n      pop\n        /* \"#utility.yul\":13831:13957   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13963:14076   */\n    tag_344:\n        /* \"#utility.yul\":14013:14022   */\n      0x00\n        /* \"#utility.yul\":14046:14070   */\n      tag_346\n        /* \"#utility.yul\":14064:14069   */\n      dup3\n        /* \"#utility.yul\":14046:14070   */\n      tag_332\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":14033:14070   */\n      swap1\n      pop\n        /* \"#utility.yul\":13963:14076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14082:14236   */\n    tag_225:\n        /* \"#utility.yul\":14166:14172   */\n      dup3\n        /* \"#utility.yul\":14161:14164   */\n      dup2\n        /* \"#utility.yul\":14156:14159   */\n      dup4\n        /* \"#utility.yul\":14143:14173   */\n      calldatacopy\n        /* \"#utility.yul\":14228:14229   */\n      0x00\n        /* \"#utility.yul\":14219:14225   */\n      dup4\n        /* \"#utility.yul\":14214:14217   */\n      dup4\n        /* \"#utility.yul\":14210:14226   */\n      add\n        /* \"#utility.yul\":14203:14230   */\n      mstore\n        /* \"#utility.yul\":14082:14236   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14242:14413   */\n    tag_90:\n        /* \"#utility.yul\":14281:14284   */\n      0x00\n        /* \"#utility.yul\":14304:14328   */\n      tag_349\n        /* \"#utility.yul\":14322:14327   */\n      dup3\n        /* \"#utility.yul\":14304:14328   */\n      tag_263\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":14295:14328   */\n      swap2\n      pop\n        /* \"#utility.yul\":14350:14354   */\n      0x00\n        /* \"#utility.yul\":14343:14348   */\n      dup3\n        /* \"#utility.yul\":14340:14355   */\n      eq\n        /* \"#utility.yul\":14337:14378   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":14358:14376   */\n      tag_351\n      tag_313\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":14337:14378   */\n    tag_350:\n        /* \"#utility.yul\":14405:14406   */\n      0x01\n        /* \"#utility.yul\":14398:14403   */\n      dup3\n        /* \"#utility.yul\":14394:14407   */\n      sub\n        /* \"#utility.yul\":14387:14407   */\n      swap1\n      pop\n        /* \"#utility.yul\":14242:14413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14419:14652   */\n    tag_85:\n        /* \"#utility.yul\":14458:14461   */\n      0x00\n        /* \"#utility.yul\":14481:14505   */\n      tag_353\n        /* \"#utility.yul\":14499:14504   */\n      dup3\n        /* \"#utility.yul\":14481:14505   */\n      tag_263\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":14472:14505   */\n      swap2\n      pop\n        /* \"#utility.yul\":14527:14593   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14520:14525   */\n      dup3\n        /* \"#utility.yul\":14517:14594   */\n      eq\n        /* \"#utility.yul\":14514:14617   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":14597:14615   */\n      tag_355\n      tag_313\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":14514:14617   */\n    tag_354:\n        /* \"#utility.yul\":14644:14645   */\n      0x01\n        /* \"#utility.yul\":14637:14642   */\n      dup3\n        /* \"#utility.yul\":14633:14646   */\n      add\n        /* \"#utility.yul\":14626:14646   */\n      swap1\n      pop\n        /* \"#utility.yul\":14419:14652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14658:14758   */\n    tag_211:\n        /* \"#utility.yul\":14697:14704   */\n      0x00\n        /* \"#utility.yul\":14726:14752   */\n      tag_357\n        /* \"#utility.yul\":14746:14751   */\n      dup3\n        /* \"#utility.yul\":14726:14752   */\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":14715:14752   */\n      swap1\n      pop\n        /* \"#utility.yul\":14658:14758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14764:14858   */\n    tag_358:\n        /* \"#utility.yul\":14803:14810   */\n      0x00\n        /* \"#utility.yul\":14832:14852   */\n      tag_360\n        /* \"#utility.yul\":14846:14851   */\n      dup3\n        /* \"#utility.yul\":14832:14852   */\n      tag_361\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":14821:14852   */\n      swap1\n      pop\n        /* \"#utility.yul\":14764:14858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14864:14943   */\n    tag_268:\n        /* \"#utility.yul\":14903:14910   */\n      0x00\n        /* \"#utility.yul\":14932:14937   */\n      dup2\n        /* \"#utility.yul\":14921:14937   */\n      swap1\n      pop\n        /* \"#utility.yul\":14864:14943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14949:15129   */\n    tag_313:\n        /* \"#utility.yul\":14997:15074   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14994:14995   */\n      0x00\n        /* \"#utility.yul\":14987:15075   */\n      mstore\n        /* \"#utility.yul\":15094:15098   */\n      0x11\n        /* \"#utility.yul\":15091:15092   */\n      0x04\n        /* \"#utility.yul\":15084:15099   */\n      mstore\n        /* \"#utility.yul\":15118:15122   */\n      0x24\n        /* \"#utility.yul\":15115:15116   */\n      0x00\n        /* \"#utility.yul\":15108:15123   */\n      revert\n        /* \"#utility.yul\":15135:15315   */\n    tag_319:\n        /* \"#utility.yul\":15183:15260   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15180:15181   */\n      0x00\n        /* \"#utility.yul\":15173:15261   */\n      mstore\n        /* \"#utility.yul\":15280:15284   */\n      0x12\n        /* \"#utility.yul\":15277:15278   */\n      0x04\n        /* \"#utility.yul\":15270:15285   */\n      mstore\n        /* \"#utility.yul\":15304:15308   */\n      0x24\n        /* \"#utility.yul\":15301:15302   */\n      0x00\n        /* \"#utility.yul\":15294:15309   */\n      revert\n        /* \"#utility.yul\":15321:15501   */\n    tag_81:\n        /* \"#utility.yul\":15369:15446   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15366:15367   */\n      0x00\n        /* \"#utility.yul\":15359:15447   */\n      mstore\n        /* \"#utility.yul\":15466:15470   */\n      0x32\n        /* \"#utility.yul\":15463:15464   */\n      0x04\n        /* \"#utility.yul\":15456:15471   */\n      mstore\n        /* \"#utility.yul\":15490:15494   */\n      0x24\n        /* \"#utility.yul\":15487:15488   */\n      0x00\n        /* \"#utility.yul\":15480:15495   */\n      revert\n        /* \"#utility.yul\":15507:15624   */\n    tag_172:\n        /* \"#utility.yul\":15616:15617   */\n      0x00\n        /* \"#utility.yul\":15613:15614   */\n      dup1\n        /* \"#utility.yul\":15606:15618   */\n      revert\n        /* \"#utility.yul\":15630:15747   */\n    tag_169:\n        /* \"#utility.yul\":15739:15740   */\n      0x00\n        /* \"#utility.yul\":15736:15737   */\n      dup1\n        /* \"#utility.yul\":15729:15741   */\n      revert\n        /* \"#utility.yul\":15753:15870   */\n    tag_175:\n        /* \"#utility.yul\":15862:15863   */\n      0x00\n        /* \"#utility.yul\":15859:15860   */\n      dup1\n        /* \"#utility.yul\":15852:15864   */\n      revert\n        /* \"#utility.yul\":15876:15993   */\n    tag_197:\n        /* \"#utility.yul\":15985:15986   */\n      0x00\n        /* \"#utility.yul\":15982:15983   */\n      dup1\n        /* \"#utility.yul\":15975:15987   */\n      revert\n        /* \"#utility.yul\":15999:16116   */\n    tag_183:\n        /* \"#utility.yul\":16108:16109   */\n      0x00\n        /* \"#utility.yul\":16105:16106   */\n      dup1\n        /* \"#utility.yul\":16098:16110   */\n      revert\n        /* \"#utility.yul\":16122:16216   */\n    tag_361:\n        /* \"#utility.yul\":16155:16163   */\n      0x00\n        /* \"#utility.yul\":16203:16208   */\n      dup2\n        /* \"#utility.yul\":16199:16201   */\n      0x60\n        /* \"#utility.yul\":16195:16209   */\n      shl\n        /* \"#utility.yul\":16174:16209   */\n      swap1\n      pop\n        /* \"#utility.yul\":16122:16216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16222:16397   */\n    tag_239:\n        /* \"#utility.yul\":16362:16389   */\n      0x596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000\n        /* \"#utility.yul\":16358:16359   */\n      0x00\n        /* \"#utility.yul\":16350:16356   */\n      dup3\n        /* \"#utility.yul\":16346:16360   */\n      add\n        /* \"#utility.yul\":16339:16390   */\n      mstore\n        /* \"#utility.yul\":16222:16397   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16403:16628   */\n    tag_244:\n        /* \"#utility.yul\":16543:16577   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":16539:16540   */\n      0x00\n        /* \"#utility.yul\":16531:16537   */\n      dup3\n        /* \"#utility.yul\":16527:16541   */\n      add\n        /* \"#utility.yul\":16520:16578   */\n      mstore\n        /* \"#utility.yul\":16612:16620   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16607:16609   */\n      0x20\n        /* \"#utility.yul\":16599:16605   */\n      dup3\n        /* \"#utility.yul\":16595:16610   */\n      add\n        /* \"#utility.yul\":16588:16621   */\n      mstore\n        /* \"#utility.yul\":16403:16628   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16634:16809   */\n    tag_249:\n        /* \"#utility.yul\":16774:16801   */\n      0x596f752068617665206e6f20746f6b656e73207374616b656400000000000000\n        /* \"#utility.yul\":16770:16771   */\n      0x00\n        /* \"#utility.yul\":16762:16768   */\n      dup3\n        /* \"#utility.yul\":16758:16772   */\n      add\n        /* \"#utility.yul\":16751:16802   */\n      mstore\n        /* \"#utility.yul\":16634:16809   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16815:16997   */\n    tag_254:\n        /* \"#utility.yul\":16955:16989   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":16951:16952   */\n      0x00\n        /* \"#utility.yul\":16943:16949   */\n      dup3\n        /* \"#utility.yul\":16939:16953   */\n      add\n        /* \"#utility.yul\":16932:16990   */\n      mstore\n        /* \"#utility.yul\":16815:16997   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17003:17184   */\n    tag_259:\n        /* \"#utility.yul\":17143:17176   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":17139:17140   */\n      0x00\n        /* \"#utility.yul\":17131:17137   */\n      dup3\n        /* \"#utility.yul\":17127:17141   */\n      add\n        /* \"#utility.yul\":17120:17177   */\n      mstore\n        /* \"#utility.yul\":17003:17184   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17190:17312   */\n    tag_161:\n        /* \"#utility.yul\":17263:17287   */\n      tag_378\n        /* \"#utility.yul\":17281:17286   */\n      dup2\n        /* \"#utility.yul\":17263:17287   */\n      tag_206\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":17256:17261   */\n      dup2\n        /* \"#utility.yul\":17253:17288   */\n      eq\n        /* \"#utility.yul\":17243:17306   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":17302:17303   */\n      0x00\n        /* \"#utility.yul\":17299:17300   */\n      dup1\n        /* \"#utility.yul\":17292:17304   */\n      revert\n        /* \"#utility.yul\":17243:17306   */\n    tag_379:\n        /* \"#utility.yul\":17190:17312   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17318:17440   */\n    tag_179:\n        /* \"#utility.yul\":17391:17415   */\n      tag_381\n        /* \"#utility.yul\":17409:17414   */\n      dup2\n        /* \"#utility.yul\":17391:17415   */\n      tag_263\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":17384:17389   */\n      dup2\n        /* \"#utility.yul\":17381:17416   */\n      eq\n        /* \"#utility.yul\":17371:17434   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":17430:17431   */\n      0x00\n        /* \"#utility.yul\":17427:17428   */\n      dup1\n        /* \"#utility.yul\":17420:17432   */\n      revert\n        /* \"#utility.yul\":17371:17434   */\n    tag_382:\n        /* \"#utility.yul\":17318:17440   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f4d42088f2c25f90fa883e06a987ec9d7289e8c49f59a406f99b5b363613c66764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1054": {
									"entryPoint": null,
									"id": 1054,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1216": {
									"entryPoint": null,
									"id": 1216,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_496": {
									"entryPoint": null,
									"id": 496,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_593": {
									"entryPoint": null,
									"id": 593,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_463": {
									"entryPoint": 275,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1142": {
									"entryPoint": 283,
									"id": 1142,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$454_fromMemory": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$138_fromMemory": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC721_$138t_contract$_IERC20_$454t_uint256_fromMemory": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$454": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$138": {
									"entryPoint": 679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$454": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$138": {
									"entryPoint": 772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2555:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "94:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "109:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "103:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "103:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "94:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "166:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$454",
																	"nodeType": "YulIdentifier",
																	"src": "125:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "125:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$454_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "62:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "78:5:1",
														"type": ""
													}
												],
												"src": "7:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "272:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "287:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "281:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "281:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "272:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "345:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$138",
																	"nodeType": "YulIdentifier",
																	"src": "303:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "303:48:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$138_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "240:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "248:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "256:5:1",
														"type": ""
													}
												],
												"src": "184:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "426:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "436:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "451:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "445:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "436:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "494:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "467:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "467:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "404:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "412:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "420:5:1",
														"type": ""
													}
												],
												"src": "363:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "652:581:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "698:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "700:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "700:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "700:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "673:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "682:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "669:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "669:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "694:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "665:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:32:1"
															},
															"nodeType": "YulIf",
															"src": "662:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "791:143:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "806:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "820:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "810:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "835:89:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "896:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "907:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "892:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "892:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "916:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$138_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "845:46:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "845:79:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "835:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "944:143:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "959:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "973:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "963:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "989:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1049:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1060:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1045:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1045:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1069:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$454_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "999:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "999:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "989:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1097:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1112:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1126:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1116:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1142:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1188:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1199:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1184:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1208:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1152:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1152:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1142:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721_$138t_contract$_IERC20_$454t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "606:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "617:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "629:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "637:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "645:6:1",
														"type": ""
													}
												],
												"src": "512:721:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1279:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1289:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1305:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1299:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1299:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1289:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1272:6:1",
														"type": ""
													}
												],
												"src": "1239:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1365:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1375:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1404:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1386:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1386:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1375:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1347:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1357:7:1",
														"type": ""
													}
												],
												"src": "1320:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1520:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1502:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1502:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1491:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$454",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1463:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1473:7:1",
														"type": ""
													}
												],
												"src": "1422:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1598:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1608:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1637:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1619:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1619:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1608:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$138",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1580:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1590:7:1",
														"type": ""
													}
												],
												"src": "1538:111:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1700:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1710:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1725:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1732:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1721:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1721:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1710:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1682:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1692:7:1",
														"type": ""
													}
												],
												"src": "1655:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1832:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1842:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1853:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1842:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1814:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1824:7:1",
														"type": ""
													}
												],
												"src": "1787:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1959:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1976:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1979:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1969:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1969:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1870:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2082:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2099:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2102:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2092:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1993:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2173:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2244:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2253:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2256:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2246:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2246:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2246:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2196:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2235:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$454",
																					"nodeType": "YulIdentifier",
																					"src": "2203:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2203:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2193:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2193:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2186:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:57:1"
															},
															"nodeType": "YulIf",
															"src": "2183:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$454",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2166:5:1",
														"type": ""
													}
												],
												"src": "2116:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2330:94:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2402:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2411:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2414:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2404:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2404:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2404:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2353:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2393:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$138",
																					"nodeType": "YulIdentifier",
																					"src": "2360:32:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2360:39:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2350:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2350:50:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2343:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2343:58:1"
															},
															"nodeType": "YulIf",
															"src": "2340:78:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$138",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2323:5:1",
														"type": ""
													}
												],
												"src": "2272:152:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2473:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2530:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2539:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2542:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2532:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2532:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2532:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2496:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2521:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2503:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2503:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2493:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2493:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2486:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2486:43:1"
															},
															"nodeType": "YulIf",
															"src": "2483:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2466:5:1",
														"type": ""
													}
												],
												"src": "2430:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_IERC20_$454_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$454(value)\n    }\n\n    function abi_decode_t_contract$_IERC721_$138_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC721_$138(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$138t_contract$_IERC20_$454t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$138_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$454_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$454(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IERC721_$138(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_IERC20_$454(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$454(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC721_$138(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$138(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052620186a06004553480156200001857600080fd5b5060405162001c1038038062001c1083398181016040528101906200003e919062000223565b60016000819055506000600160006101000a81548160ff02191690831515021790555062000081620000756200011360201b60201c565b6200011b60201b60201c565b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060048190555050505062000338565b600033905090565b600060018054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001ef81620002ea565b92915050565b600081519050620002068162000304565b92915050565b6000815190506200021d816200031e565b92915050565b6000806000606084860312156200023f576200023e620002e5565b5b60006200024f86828701620001f5565b93505060206200026286828701620001de565b925050604062000275868287016200020c565b9150509250925092565b60006200028c82620002bb565b9050919050565b6000620002a0826200027f565b9050919050565b6000620002b4826200027f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b620002f58162000293565b81146200030157600080fd5b50565b6200030f81620002a7565b81146200031b57600080fd5b50565b6200032981620002db565b81146200033557600080fd5b50565b6118c880620003486000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b146101405780639168ae721461015e5780639406704514610190578063a694fc3a146101c0578063d1af0c7d146101dc578063f2fde38b146101fa576100a9565b8063150b7a02146100ae5780632e1a7d4d146100de5780635c975abb146100fa5780636588103b14610118578063715018a614610136575b600080fd5b6100c860048036038101906100c39190611014565b610216565b6040516100d591906112de565b60405180910390f35b6100f860048036038101906100f3919061109c565b610252565b005b6101026106f5565b60405161010f91906112c3565b60405180910390f35b61012061070c565b60405161012d9190611314565b60405180910390f35b61013e610732565b005b610148610746565b6040516101559190611271565b60405180910390f35b61017860048036038101906101739190610fba565b61076e565b604051610187939291906113ea565b60405180910390f35b6101aa60048036038101906101a5919061109c565b610798565b6040516101b79190611271565b60405180910390f35b6101da60048036038101906101d5919061109c565b6107cb565b005b6101e4610c1a565b6040516101f191906112f9565b60405180910390f35b610214600480360381019061020f9190610fba565b610c40565b005b60008585858585604051602001610231959493929190611225565b60405160208183030381529060405280519060200120905095945050505050565b61025a610cc4565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154116102df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d69061136f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610380576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103779061132f565b60405180910390fd5b600061038b33610d14565b905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546103df919061143d565b925050819055506000805b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490508110156104bf5783600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101828154811061048c5761048b61171c565b5b90600052602060002090600202016001015414156104ac578091506104bf565b80806104b790611647565b9150506103ea565b506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010182815481106105165761051561171c565b5b906000526020600020906002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008154809291906105b89061161d565b919050555060006006600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b815260040161066f9392919061128c565b600060405180830381600087803b15801561068957600080fd5b505af115801561069d573d6000803e3d6000fd5b5050505042600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050506106f2610dd2565b50565b6000600160009054906101000a900460ff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61073a610ddc565b6107446000610e5a565b565b600060018054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60056020528060005260406000206000915090508060000154908060020154908060030154905083565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107d3610cc4565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161084591906113cf565b60206040518083038186803b15801561085d57600080fd5b505afa158015610871573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108959190610fe7565b73ffffffffffffffffffffffffffffffffffffffff16146108eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e29061132f565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154111561099e57600061094133610d14565b905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254610995919061143d565b92505081905550505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016109fd9392919061128c565b600060405180830381600087803b158015610a1757600080fd5b505af1158015610a2b573d6000803e3d6000fd5b50505050600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152509050600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000815480929190610b7090611647565b9190505550336006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050610c17610dd2565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c48610ddc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caf9061134f565b60405180910390fd5b610cc181610e5a565b50565b60026000541415610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d01906113af565b60405180910390fd5b6002600081905550565b6000610e10600454600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015442610dad919061151e565b610db791906114c4565b610dc191906114c4565b610dcb9190611493565b9050919050565b6001600081905550565b610de4610f1d565b73ffffffffffffffffffffffffffffffffffffffff16610e02610746565b73ffffffffffffffffffffffffffffffffffffffff1614610e58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4f9061138f565b60405180910390fd5b565b600060018054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081359050610f3481611864565b92915050565b600081519050610f4981611864565b92915050565b60008083601f840112610f6557610f64611750565b5b8235905067ffffffffffffffff811115610f8257610f8161174b565b5b602083019150836001820283011115610f9e57610f9d611755565b5b9250929050565b600081359050610fb48161187b565b92915050565b600060208284031215610fd057610fcf61175f565b5b6000610fde84828501610f25565b91505092915050565b600060208284031215610ffd57610ffc61175f565b5b600061100b84828501610f3a565b91505092915050565b6000806000806000608086880312156110305761102f61175f565b5b600061103e88828901610f25565b955050602061104f88828901610f25565b945050604061106088828901610fa5565b935050606086013567ffffffffffffffff8111156110815761108061175a565b5b61108d88828901610f4f565b92509250509295509295909350565b6000602082840312156110b2576110b161175f565b5b60006110c084828501610fa5565b91505092915050565b6110d281611552565b82525050565b6110e96110e482611552565b611690565b82525050565b6110f881611564565b82525050565b61110781611570565b82525050565b60006111198385611421565b935061112683858461160e565b82840190509392505050565b61113b816115c6565b82525050565b61114a816115d8565b82525050565b600061115d60198361142c565b915061116882611771565b602082019050919050565b600061118060268361142c565b915061118b8261179a565b604082019050919050565b60006111a360198361142c565b91506111ae826117e9565b602082019050919050565b60006111c660208361142c565b91506111d182611812565b602082019050919050565b60006111e9601f8361142c565b91506111f48261183b565b602082019050919050565b611208816115bc565b82525050565b61121f61121a826115bc565b6116b4565b82525050565b600061123182886110d8565b60148201915061124182876110d8565b601482019150611251828661120e565b60208201915061126282848661110d565b91508190509695505050505050565b600060208201905061128660008301846110c9565b92915050565b60006060820190506112a160008301866110c9565b6112ae60208301856110c9565b6112bb60408301846111ff565b949350505050565b60006020820190506112d860008301846110ef565b92915050565b60006020820190506112f360008301846110fe565b92915050565b600060208201905061130e6000830184611132565b92915050565b60006020820190506113296000830184611141565b92915050565b6000602082019050818103600083015261134881611150565b9050919050565b6000602082019050818103600083015261136881611173565b9050919050565b6000602082019050818103600083015261138881611196565b9050919050565b600060208201905081810360008301526113a8816111b9565b9050919050565b600060208201905081810360008301526113c8816111dc565b9050919050565b60006020820190506113e460008301846111ff565b92915050565b60006060820190506113ff60008301866111ff565b61140c60208301856111ff565b61141960408301846111ff565b949350505050565b600081905092915050565b600082825260208201905092915050565b6000611448826115bc565b9150611453836115bc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611488576114876116be565b5b828201905092915050565b600061149e826115bc565b91506114a9836115bc565b9250826114b9576114b86116ed565b5b828204905092915050565b60006114cf826115bc565b91506114da836115bc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611513576115126116be565b5b828202905092915050565b6000611529826115bc565b9150611534836115bc565b925082821015611547576115466116be565b5b828203905092915050565b600061155d8261159c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006115d1826115ea565b9050919050565b60006115e3826115ea565b9050919050565b60006115f5826115fc565b9050919050565b60006116078261159c565b9050919050565b82818337600083830152505050565b6000611628826115bc565b9150600082141561163c5761163b6116be565b5b600182039050919050565b6000611652826115bc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611685576116846116be565b5b600182019050919050565b600061169b826116a2565b9050919050565b60006116ad82611764565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008160601b9050919050565b7f596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f596f752068617665206e6f20746f6b656e73207374616b656400000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61186d81611552565b811461187857600080fd5b50565b611884816115bc565b811461188f57600080fd5b5056fea2646970667358221220f4d42088f2c25f90fa883e06a987ec9d7289e8c49f59a406f99b5b363613c66764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x186A0 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C10 CODESIZE SUB DUP1 PUSH3 0x1C10 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3E SWAP2 SWAP1 PUSH3 0x223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x81 PUSH3 0x75 PUSH3 0x113 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x11B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x338 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1EF DUP2 PUSH3 0x2EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x206 DUP2 PUSH3 0x304 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x21D DUP2 PUSH3 0x31E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x23F JUMPI PUSH3 0x23E PUSH3 0x2E5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x24F DUP7 DUP3 DUP8 ADD PUSH3 0x1F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x262 DUP7 DUP3 DUP8 ADD PUSH3 0x1DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x275 DUP7 DUP3 DUP8 ADD PUSH3 0x20C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x28C DUP3 PUSH3 0x2BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2A0 DUP3 PUSH3 0x27F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2B4 DUP3 PUSH3 0x27F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2F5 DUP2 PUSH3 0x293 JUMP JUMPDEST DUP2 EQ PUSH3 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x30F DUP2 PUSH3 0x2A7 JUMP JUMPDEST DUP2 EQ PUSH3 0x31B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x329 DUP2 PUSH3 0x2DB JUMP JUMPDEST DUP2 EQ PUSH3 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18C8 DUP1 PUSH3 0x348 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x94067045 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FA JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6588103B EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH2 0x732 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x148 PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E4 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0xC40 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x231 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x25A PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT PUSH2 0x2DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D6 SWAP1 PUSH2 0x136F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x380 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x377 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38B CALLER PUSH2 0xD14 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x143D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x4BF JUMPI DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x48C JUMPI PUSH2 0x48B PUSH2 0x171C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x4AC JUMPI DUP1 SWAP2 POP PUSH2 0x4BF JUMP JUMPDEST DUP1 DUP1 PUSH2 0x4B7 SWAP1 PUSH2 0x1647 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3EA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x516 JUMPI PUSH2 0x515 PUSH2 0x171C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5B8 SWAP1 PUSH2 0x161D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x69D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x6F2 PUSH2 0xDD2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x73A PUSH2 0xDDC JUMP JUMPDEST PUSH2 0x744 PUSH1 0x0 PUSH2 0xE5A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x7D3 PUSH2 0xCC4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x85D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x871 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x895 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x99E JUMPI PUSH1 0x0 PUSH2 0x941 CALLER PUSH2 0xD14 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x143D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB70 SWAP1 PUSH2 0x1647 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0xC17 PUSH2 0xDD2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC48 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAF SWAP1 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC1 DUP2 PUSH2 0xE5A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD01 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xDAD SWAP2 SWAP1 PUSH2 0x151E JUMP JUMPDEST PUSH2 0xDB7 SWAP2 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0xDC1 SWAP2 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0xDCB SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xDE4 PUSH2 0xF1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE02 PUSH2 0x746 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4F SWAP1 PUSH2 0x138F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF34 DUP2 PUSH2 0x1864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF49 DUP2 PUSH2 0x1864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xF65 JUMPI PUSH2 0xF64 PUSH2 0x1750 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF82 JUMPI PUSH2 0xF81 PUSH2 0x174B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xF9E JUMPI PUSH2 0xF9D PUSH2 0x1755 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB4 DUP2 PUSH2 0x187B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD0 JUMPI PUSH2 0xFCF PUSH2 0x175F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFDE DUP5 DUP3 DUP6 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFD JUMPI PUSH2 0xFFC PUSH2 0x175F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100B DUP5 DUP3 DUP6 ADD PUSH2 0xF3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1030 JUMPI PUSH2 0x102F PUSH2 0x175F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x103E DUP9 DUP3 DUP10 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x104F DUP9 DUP3 DUP10 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1060 DUP9 DUP3 DUP10 ADD PUSH2 0xFA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1081 JUMPI PUSH2 0x1080 PUSH2 0x175A JUMP JUMPDEST JUMPDEST PUSH2 0x108D DUP9 DUP3 DUP10 ADD PUSH2 0xF4F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B2 JUMPI PUSH2 0x10B1 PUSH2 0x175F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10C0 DUP5 DUP3 DUP6 ADD PUSH2 0xFA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10D2 DUP2 PUSH2 0x1552 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x10E9 PUSH2 0x10E4 DUP3 PUSH2 0x1552 JUMP JUMPDEST PUSH2 0x1690 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x10F8 DUP2 PUSH2 0x1564 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1107 DUP2 PUSH2 0x1570 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1119 DUP4 DUP6 PUSH2 0x1421 JUMP JUMPDEST SWAP4 POP PUSH2 0x1126 DUP4 DUP6 DUP5 PUSH2 0x160E JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x113B DUP2 PUSH2 0x15C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x114A DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115D PUSH1 0x19 DUP4 PUSH2 0x142C JUMP JUMPDEST SWAP2 POP PUSH2 0x1168 DUP3 PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1180 PUSH1 0x26 DUP4 PUSH2 0x142C JUMP JUMPDEST SWAP2 POP PUSH2 0x118B DUP3 PUSH2 0x179A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A3 PUSH1 0x19 DUP4 PUSH2 0x142C JUMP JUMPDEST SWAP2 POP PUSH2 0x11AE DUP3 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C6 PUSH1 0x20 DUP4 PUSH2 0x142C JUMP JUMPDEST SWAP2 POP PUSH2 0x11D1 DUP3 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E9 PUSH1 0x1F DUP4 PUSH2 0x142C JUMP JUMPDEST SWAP2 POP PUSH2 0x11F4 DUP3 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1208 DUP2 PUSH2 0x15BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x121F PUSH2 0x121A DUP3 PUSH2 0x15BC JUMP JUMPDEST PUSH2 0x16B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1231 DUP3 DUP9 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1241 DUP3 DUP8 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1251 DUP3 DUP7 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1262 DUP3 DUP5 DUP7 PUSH2 0x110D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1286 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12A1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x12AE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x12BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11FF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x130E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1132 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1329 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1141 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1348 DUP2 PUSH2 0x1150 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1368 DUP2 PUSH2 0x1173 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1388 DUP2 PUSH2 0x1196 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13A8 DUP2 PUSH2 0x11B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13C8 DUP2 PUSH2 0x11DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13FF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x140C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x1419 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11FF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1448 DUP3 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1453 DUP4 PUSH2 0x15BC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x16BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149E DUP3 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP PUSH2 0x14A9 DUP4 PUSH2 0x15BC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14B9 JUMPI PUSH2 0x14B8 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CF DUP3 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP PUSH2 0x14DA DUP4 PUSH2 0x15BC JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1513 JUMPI PUSH2 0x1512 PUSH2 0x16BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1529 DUP3 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1534 DUP4 PUSH2 0x15BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1547 JUMPI PUSH2 0x1546 PUSH2 0x16BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155D DUP3 PUSH2 0x159C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D1 DUP3 PUSH2 0x15EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E3 DUP3 PUSH2 0x15EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F5 DUP3 PUSH2 0x15FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1607 DUP3 PUSH2 0x159C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1628 DUP3 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x163C JUMPI PUSH2 0x163B PUSH2 0x16BE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1652 DUP3 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1685 JUMPI PUSH2 0x1684 PUSH2 0x16BE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x169B DUP3 PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16AD DUP3 PUSH2 0x1764 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F20746F6B656E73207374616B656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x186D DUP2 PUSH2 0x1552 JUMP JUMPDEST DUP2 EQ PUSH2 0x1878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1884 DUP2 PUSH2 0x15BC JUMP JUMPDEST DUP2 EQ PUSH2 0x188F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xD4 KECCAK256 DUP9 CALLCODE 0xC2 0x5F SWAP1 STATICCALL DUP9 RETURNDATACOPY MOD 0xA9 DUP8 0xEC SWAP14 PUSH19 0x89E8C49F59A406F99B5B363613C66764736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "29748:3414:0:-:0;;;30317:6;30284:39;;30520:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18664:1;18775:7;:22;;;;16203:5;16193:7;;:15;;;;;;;;;;;;;;;;;;28002:32;28021:12;:10;;;:12;;:::i;:::-;28002:18;;;:32;;:::i;:::-;30630:14;30614:13;;:30;;;;;;;;;;;;;;;;;;30670:13;30655:12;;:28;;;;;;;;;;;;;;;;;;30711:15;30694:14;:32;;;;30520:214;;;29748:3414;;15568:98;15621:7;15648:10;15641:17;;15568:98;:::o;29548:191::-;29622:16;29641:6;;;;;;;;;;29622:25;;29667:8;29658:6;;:17;;;;;;;;;;;;;;;;;;29722:8;29691:40;;29712:8;29691:40;;;;;;;;;;;;29611:128;29548:191;:::o;7:171:1:-;78:5;109:6;103:13;94:22;;125:47;166:5;125:47;:::i;:::-;7:171;;;;:::o;184:173::-;256:5;287:6;281:13;272:22;;303:48;345:5;303:48;:::i;:::-;184:173;;;;:::o;363:143::-;420:5;451:6;445:13;436:22;;467:33;494:5;467:33;:::i;:::-;363:143;;;;:::o;512:721::-;629:6;637;645;694:2;682:9;673:7;669:23;665:32;662:119;;;700:79;;:::i;:::-;662:119;820:1;845:79;916:7;907:6;896:9;892:22;845:79;:::i;:::-;835:89;;791:143;973:2;999:78;1069:7;1060:6;1049:9;1045:22;999:78;:::i;:::-;989:88;;944:143;1126:2;1152:64;1208:7;1199:6;1188:9;1184:22;1152:64;:::i;:::-;1142:74;;1097:129;512:721;;;;;:::o;1320:96::-;1357:7;1386:24;1404:5;1386:24;:::i;:::-;1375:35;;1320:96;;;:::o;1422:110::-;1473:7;1502:24;1520:5;1502:24;:::i;:::-;1491:35;;1422:110;;;:::o;1538:111::-;1590:7;1619:24;1637:5;1619:24;:::i;:::-;1608:35;;1538:111;;;:::o;1655:126::-;1692:7;1732:42;1725:5;1721:54;1710:65;;1655:126;;;:::o;1787:77::-;1824:7;1853:5;1842:16;;1787:77;;;:::o;1993:117::-;2102:1;2099;2092:12;2116:150;2203:38;2235:5;2203:38;:::i;:::-;2196:5;2193:49;2183:77;;2256:1;2253;2246:12;2183:77;2116:150;:::o;2272:152::-;2360:39;2393:5;2360:39;:::i;:::-;2353:5;2350:50;2340:78;;2414:1;2411;2404:12;2340:78;2272:152;:::o;2430:122::-;2503:24;2521:5;2503:24;:::i;:::-;2496:5;2493:35;2483:63;;2542:1;2539;2532:12;2483:63;2430:122;:::o;29748:3414:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_1085": {
									"entryPoint": 3548,
									"id": 1085,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_463": {
									"entryPoint": 3869,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_627": {
									"entryPoint": 3538,
									"id": 627,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_619": {
									"entryPoint": 3268,
									"id": 619,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_1142": {
									"entryPoint": 3674,
									"id": 1142,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateRewards_1503": {
									"entryPoint": 3348,
									"id": 1503,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nftCollection_1180": {
									"entryPoint": 1804,
									"id": 1180,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onERC721Received_1244": {
									"entryPoint": 534,
									"id": 1244,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@owner_1071": {
									"entryPoint": 1862,
									"id": 1071,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_521": {
									"entryPoint": 1781,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1099": {
									"entryPoint": 1842,
									"id": 1099,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_1177": {
									"entryPoint": 3098,
									"id": 1177,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1340": {
									"entryPoint": 1995,
									"id": 1340,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakerAddress_1192": {
									"entryPoint": 1944,
									"id": 1192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakers_1188": {
									"entryPoint": 1902,
									"id": 1188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1122": {
									"entryPoint": 3136,
									"id": 1122,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1473": {
									"entryPoint": 594,
									"id": 1473,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 3898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 4071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 4116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 4350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4365,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$454_to_t_address_fromStack": {
									"entryPoint": 4402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$138_to_t_address_fromStack": {
									"entryPoint": 4417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 4622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4645,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4748,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 4830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$454__to_t_address__fromStack_reversed": {
									"entryPoint": 4857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$138__to_t_address__fromStack_reversed": {
									"entryPoint": 4884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5098,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$454_to_t_address": {
									"entryPoint": 5574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$138_to_t_address": {
									"entryPoint": 5592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5646,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 5661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 5776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 5794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 5812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5869,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5916,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 5963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5968,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5973,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5978,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5983,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 5988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9": {
									"entryPoint": 6001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139": {
									"entryPoint": 6121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17443:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "215:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "225:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "240:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "234:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "283:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "256:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "256:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "193:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "201:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "209:5:1",
														"type": ""
													}
												],
												"src": "152:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "388:478:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "437:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "439:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "439:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "439:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "416:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "424:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "412:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "412:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "431:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "408:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "408:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "401:35:1"
															},
															"nodeType": "YulIf",
															"src": "398:122:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "529:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "552:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "539:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:20:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "602:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "604:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "604:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "604:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "574:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "582:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "571:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:30:1"
															},
															"nodeType": "YulIf",
															"src": "568:117:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "694:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "710:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "718:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "706:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "706:17:1"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "694:8:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "777:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "779:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "779:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "779:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "742:8:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "756:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "764:4:1",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "752:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "752:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "738:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "738:32:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "772:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "735:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:41:1"
															},
															"nodeType": "YulIf",
															"src": "732:128:1"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "355:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "363:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "371:8:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "381:6:1",
														"type": ""
													}
												],
												"src": "314:552:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "924:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "934:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "943:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "934:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "972:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "972:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "902:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "910:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "918:5:1",
														"type": ""
													}
												],
												"src": "872:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1083:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1129:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1131:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1131:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1131:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1104:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1113:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1100:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1125:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1096:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1096:32:1"
															},
															"nodeType": "YulIf",
															"src": "1093:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1222:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1237:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1251:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1241:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1266:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1301:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1312:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1297:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1297:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1321:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1276:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1266:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1053:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1064:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1076:6:1",
														"type": ""
													}
												],
												"src": "1017:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1429:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1475:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1477:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1477:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1477:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1459:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1471:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:32:1"
															},
															"nodeType": "YulIf",
															"src": "1439:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1568:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1583:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1597:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1587:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1612:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1658:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1669:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1654:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1654:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1678:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1622:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1622:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1612:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1399:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1410:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1422:6:1",
														"type": ""
													}
												],
												"src": "1352:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1845:827:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1894:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1866:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1875:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1862:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1862:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1887:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1858:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1858:33:1"
															},
															"nodeType": "YulIf",
															"src": "1855:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1985:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2000:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2014:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2004:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2029:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2064:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2075:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2060:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2060:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2084:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2039:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2039:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2029:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2112:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2127:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2141:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2131:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2157:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2192:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2203:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2188:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2188:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2212:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2167:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2167:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2157:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2240:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2255:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2259:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2285:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2320:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2331:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2316:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2316:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2340:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2295:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2295:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2285:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2368:297:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2383:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2414:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2410:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2410:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2397:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2397:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2387:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2476:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2478:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2478:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2478:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2448:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2456:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2445:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2445:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2442:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2573:82:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2627:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2638:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2623:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2623:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2647:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2591:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2573:6:1"
																		},
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "2581:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1783:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1794:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1806:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1814:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1822:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1830:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1838:6:1",
														"type": ""
													}
												],
												"src": "1709:963:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2744:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2790:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2792:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2792:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2792:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2765:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2774:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2761:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2786:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2757:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2757:32:1"
															},
															"nodeType": "YulIf",
															"src": "2754:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2883:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2898:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2912:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2902:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2927:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2962:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2973:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2958:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2958:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2982:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2937:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2937:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2927:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2714:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2725:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2737:6:1",
														"type": ""
													}
												],
												"src": "2678:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3078:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3095:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3118:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3100:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3100:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3088:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3088:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3066:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3073:3:1",
														"type": ""
													}
												],
												"src": "3013:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3220:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3237:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3280:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3262:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3262:24:1"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3242:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3242:45:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3230:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3230:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3230:58:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3208:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3215:3:1",
														"type": ""
													}
												],
												"src": "3137:157:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3359:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3376:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3396:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3381:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3381:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3369:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3369:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3369:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3347:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3354:3:1",
														"type": ""
													}
												],
												"src": "3300:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3478:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3495:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3517:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "3500:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3500:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3488:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3488:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3466:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3473:3:1",
														"type": ""
													}
												],
												"src": "3415:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3676:196:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3686:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3769:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3774:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3693:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3693:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3815:5:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3822:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3827:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3791:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3791:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3791:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3843:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3854:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3859:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3850:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3843:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "3649:5:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3656:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3664:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3672:3:1",
														"type": ""
													}
												],
												"src": "3558:314:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3957:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3974:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4024:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$454_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3979:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3979:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3967:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3967:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3967:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$454_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3945:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3952:3:1",
														"type": ""
													}
												],
												"src": "3878:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4123:81:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4140:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4191:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$138_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4145:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4145:52:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4133:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4133:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4133:65:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$138_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4111:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4118:3:1",
														"type": ""
													}
												],
												"src": "4043:161:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4366:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4432:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4437:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4373:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4373:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4366:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4538:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																	"nodeType": "YulIdentifier",
																	"src": "4449:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4449:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4449:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4551:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4562:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4567:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4558:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4551:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4344:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4352:3:1",
														"type": ""
													}
												],
												"src": "4210:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4728:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4738:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4804:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4809:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4745:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4738:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4910:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4821:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4821:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4923:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4934:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4939:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4930:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4930:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4923:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4716:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4724:3:1",
														"type": ""
													}
												],
												"src": "4582:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5100:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5110:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5176:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5181:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5117:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5117:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5110:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5282:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139",
																	"nodeType": "YulIdentifier",
																	"src": "5193:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5193:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5193:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5295:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5306:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5311:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5302:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5295:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5088:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5096:3:1",
														"type": ""
													}
												],
												"src": "4954:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5482:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5548:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5553:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5489:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5489:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5482:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5654:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5565:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5565:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5565:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5667:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5678:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5683:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5674:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5667:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5460:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5468:3:1",
														"type": ""
													}
												],
												"src": "5326:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5844:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5854:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5920:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5925:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5861:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5861:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5854:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6026:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "5937:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5937:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5937:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6039:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6050:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6055:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6046:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6046:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6039:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5832:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5840:3:1",
														"type": ""
													}
												],
												"src": "5698:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6135:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6152:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6175:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6157:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6157:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6145:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6145:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6145:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6123:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6130:3:1",
														"type": ""
													}
												],
												"src": "6070:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6277:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6294:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6337:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6319:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6319:24:1"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6299:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6299:45:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6287:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6287:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6287:58:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6265:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6272:3:1",
														"type": ""
													}
												],
												"src": "6194:157:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6585:486:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6658:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6667:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6596:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6596:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6596:75:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6680:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6691:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6696:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6687:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6687:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6680:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6771:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6780:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6709:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6709:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6709:75:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6793:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6804:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6809:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6800:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6800:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6793:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6884:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6893:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6822:61:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6822:75:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6822:75:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6906:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6917:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6922:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6913:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6913:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6906:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6935:110:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7024:6:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7032:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7041:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6942:81:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6942:103:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6935:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7055:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7062:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7055:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6532:3:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6538:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6546:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6554:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6562:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6570:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6581:3:1",
														"type": ""
													}
												],
												"src": "6357:714:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7175:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7185:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7197:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7208:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7193:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7193:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7185:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7265:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7289:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7274:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7221:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7147:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7159:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7170:4:1",
														"type": ""
													}
												],
												"src": "7077:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7459:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7469:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7481:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7492:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7477:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7477:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7469:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7549:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7562:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7573:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7558:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7505:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7505:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7630:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7643:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7654:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7639:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7639:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7586:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7586:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7586:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7712:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7725:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7736:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7721:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7721:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7668:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7668:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7668:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7415:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7427:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7435:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7443:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7454:4:1",
														"type": ""
													}
												],
												"src": "7305:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7845:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7855:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7867:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7878:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7863:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7863:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7855:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7929:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7942:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7953:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7938:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7938:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7891:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7891:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7891:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7817:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7829:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7840:4:1",
														"type": ""
													}
												],
												"src": "7753:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8065:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8075:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8087:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8098:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8083:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8083:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8075:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8153:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8166:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8177:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8162:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8162:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8111:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8111:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8111:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8037:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8049:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8060:4:1",
														"type": ""
													}
												],
												"src": "7969:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8305:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8315:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8327:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8338:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8323:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8323:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8315:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8409:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8422:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8433:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8418:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8418:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$454_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8351:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8351:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8351:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$454__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8277:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8289:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8300:4:1",
														"type": ""
													}
												],
												"src": "8193:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8562:139:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8572:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8584:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8595:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8580:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8580:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8572:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8667:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8680:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8691:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8676:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8676:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$138_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8608:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8608:86:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8608:86:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$138__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8534:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8546:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8557:4:1",
														"type": ""
													}
												],
												"src": "8449:252:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8878:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8888:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8900:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8911:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8896:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8896:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8888:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8935:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8946:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8931:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8931:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8954:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8960:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8950:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8950:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8924:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8924:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8924:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8980:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9114:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8988:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8988:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8980:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8858:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8873:4:1",
														"type": ""
													}
												],
												"src": "8707:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9303:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9313:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9325:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9336:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9321:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9321:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9313:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9360:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9371:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9356:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9356:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9379:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9385:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9375:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9349:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9349:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9349:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9405:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9539:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9413:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9413:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9405:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9283:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9298:4:1",
														"type": ""
													}
												],
												"src": "9132:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9728:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9738:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9750:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9761:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9746:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9746:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9738:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9785:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9796:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9781:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9781:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9804:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9810:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9800:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9774:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9774:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9774:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9830:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9964:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9838:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9838:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9830:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9708:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9723:4:1",
														"type": ""
													}
												],
												"src": "9557:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10153:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10163:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10175:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10186:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10171:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10171:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10163:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10210:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10221:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10206:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10229:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10235:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10225:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10225:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10199:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10199:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10199:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10255:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10389:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10263:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10263:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10255:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10133:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10148:4:1",
														"type": ""
													}
												],
												"src": "9982:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10578:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10588:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10600:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10611:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10596:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10596:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10588:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10635:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10646:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10631:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10631:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10654:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10660:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10650:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10624:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10624:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10680:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10814:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10688:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10688:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10680:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10558:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10573:4:1",
														"type": ""
													}
												],
												"src": "10407:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10930:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10940:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10952:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10963:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10948:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10948:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10940:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11020:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11033:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11044:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11029:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11029:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10976:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10976:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10976:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10902:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10914:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10925:4:1",
														"type": ""
													}
												],
												"src": "10832:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11214:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11224:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11236:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11247:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11232:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11224:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11304:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11328:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11313:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11260:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11260:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11260:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11385:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11398:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11409:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11394:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11394:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11341:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11341:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11341:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11467:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11480:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11491:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11476:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11423:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11423:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11423:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11170:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11182:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11190:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11198:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11209:4:1",
														"type": ""
													}
												],
												"src": "11060:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11548:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11558:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11574:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11568:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11568:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "11558:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11541:6:1",
														"type": ""
													}
												],
												"src": "11508:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11702:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11712:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11727:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11712:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11674:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11679:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11690:11:1",
														"type": ""
													}
												],
												"src": "11589:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11838:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11855:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11860:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11848:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11848:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11848:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11876:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11895:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11900:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11891:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11891:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11876:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11810:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11815:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11826:11:1",
														"type": ""
													}
												],
												"src": "11742:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11961:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11971:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11994:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11976:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11976:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11971:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12005:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12028:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12010:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12010:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12005:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12168:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12170:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12170:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12170:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12089:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12096:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12164:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12092:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12086:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12086:81:1"
															},
															"nodeType": "YulIf",
															"src": "12083:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12200:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12211:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12214:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12207:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12207:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12200:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11948:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11951:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11957:3:1",
														"type": ""
													}
												],
												"src": "11917:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12270:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12280:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12303:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12285:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12285:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12280:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12314:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12337:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12319:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12319:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12314:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12361:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12363:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12363:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12363:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12358:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12351:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12351:9:1"
															},
															"nodeType": "YulIf",
															"src": "12348:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12393:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12402:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12405:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12398:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12398:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12393:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12259:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12262:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12268:1:1",
														"type": ""
													}
												],
												"src": "12228:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12467:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12477:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12500:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12482:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12482:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12477:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12511:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12534:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12516:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12516:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12511:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12709:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12711:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12711:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12711:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12621:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12614:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12614:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12607:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12607:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12629:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12636:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12704:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12632:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12632:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12626:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12626:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12603:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12603:105:1"
															},
															"nodeType": "YulIf",
															"src": "12600:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12741:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12756:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12759:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12752:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12752:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12741:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12450:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12453:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12459:7:1",
														"type": ""
													}
												],
												"src": "12419:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12818:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12828:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12851:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12833:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12833:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12828:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12862:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12885:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12867:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12867:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12862:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12909:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12911:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12911:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12911:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12903:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12906:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12900:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12900:8:1"
															},
															"nodeType": "YulIf",
															"src": "12897:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12941:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12953:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12956:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12949:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12949:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12941:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12804:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12807:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12813:4:1",
														"type": ""
													}
												],
												"src": "12773:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13015:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13025:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13054:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13036:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13036:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13025:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12997:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13007:7:1",
														"type": ""
													}
												],
												"src": "12970:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13114:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13124:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13149:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13142:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13142:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13135:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13135:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13124:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13096:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13106:7:1",
														"type": ""
													}
												],
												"src": "13072:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13212:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13222:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13237:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13244:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13233:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13233:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13222:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13194:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13204:7:1",
														"type": ""
													}
												],
												"src": "13168:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13368:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13378:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13393:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13400:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13389:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13389:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13378:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13350:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13360:7:1",
														"type": ""
													}
												],
												"src": "13323:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13500:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13510:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13521:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13510:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13482:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "13492:7:1",
														"type": ""
													}
												],
												"src": "13455:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13612:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13622:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13666:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "13635:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13635:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13622:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$454_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13592:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13602:9:1",
														"type": ""
													}
												],
												"src": "13538:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13759:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13769:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13813:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "13782:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13782:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13769:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$138_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13739:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13749:9:1",
														"type": ""
													}
												],
												"src": "13684:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13891:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13901:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13945:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13914:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13914:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13901:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13871:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13881:9:1",
														"type": ""
													}
												],
												"src": "13831:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14023:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14033:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14064:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14046:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14046:24:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "14033:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14003:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "14013:9:1",
														"type": ""
													}
												],
												"src": "13963:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14133:103:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "14156:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "14161:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14166:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "14143:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14143:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14143:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "14214:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14219:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14210:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14228:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14203:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14203:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14115:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14120:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14125:6:1",
														"type": ""
													}
												],
												"src": "14082:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14285:128:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14295:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14322:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14304:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14304:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14295:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14356:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14358:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14358:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14358:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14343:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14350:4:1",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14340:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14340:15:1"
															},
															"nodeType": "YulIf",
															"src": "14337:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14387:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14398:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14405:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14394:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14394:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14387:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14271:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14281:3:1",
														"type": ""
													}
												],
												"src": "14242:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14462:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14472:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14499:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14481:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14481:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14472:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14595:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14597:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14597:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14597:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14520:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14527:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14517:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14517:77:1"
															},
															"nodeType": "YulIf",
															"src": "14514:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14626:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14637:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14644:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14633:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14633:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14626:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14448:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14458:3:1",
														"type": ""
													}
												],
												"src": "14419:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14705:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14715:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14746:5:1"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14726:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14726:26:1"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "14715:7:1"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14687:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "14697:7:1",
														"type": ""
													}
												],
												"src": "14658:100:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14811:47:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14821:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14846:5:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nodeType": "YulIdentifier",
																	"src": "14832:13:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14832:20:1"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "14821:7:1"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14793:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "14803:7:1",
														"type": ""
													}
												],
												"src": "14764:94:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14911:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14921:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14932:5:1"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "14921:7:1"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14893:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "14903:7:1",
														"type": ""
													}
												],
												"src": "14864:79:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14977:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14994:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14997:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14987:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14987:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14987:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15091:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15094:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15084:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15084:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15084:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15115:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15118:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15108:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15108:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15108:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14949:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15163:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15180:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15183:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15173:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15173:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15173:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15277:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15280:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15270:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15270:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15270:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15301:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15304:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15294:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15294:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15294:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "15135:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15349:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15366:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15369:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15359:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15359:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15359:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15463:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15466:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15456:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15456:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15487:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15490:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15480:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15480:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15480:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15321:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15596:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15613:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15616:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15606:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15606:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15606:12:1"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "15507:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15719:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15736:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15739:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15729:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15729:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15729:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "15630:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15842:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15859:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15862:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15852:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15852:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15852:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "15753:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15965:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15982:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15985:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15975:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15975:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15975:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "15876:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16088:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16105:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16108:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16098:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16098:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16098:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "15999:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16164:52:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16174:35:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16199:2:1",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16203:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "16195:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16195:14:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "16174:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16145:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "16155:8:1",
														"type": ""
													}
												],
												"src": "16122:94:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16328:69:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16350:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16358:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16346:14:1"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16362:27:1",
																		"type": "",
																		"value": "You don't own this token!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16339:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16339:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16339:51:1"
														}
													]
												},
												"name": "store_literal_in_memory_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16320:6:1",
														"type": ""
													}
												],
												"src": "16222:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16509:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16531:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16539:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16527:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16527:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16543:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16520:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16520:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16599:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16607:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16595:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16595:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16612:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16588:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16588:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16501:6:1",
														"type": ""
													}
												],
												"src": "16403:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16740:69:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16762:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16770:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16758:14:1"
																	},
																	{
																		"hexValue": "596f752068617665206e6f20746f6b656e73207374616b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16774:27:1",
																		"type": "",
																		"value": "You have no tokens staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16751:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16751:51:1"
														}
													]
												},
												"name": "store_literal_in_memory_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16732:6:1",
														"type": ""
													}
												],
												"src": "16634:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16921:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16943:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16951:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16939:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16955:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16932:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16932:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16913:6:1",
														"type": ""
													}
												],
												"src": "16815:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17109:75:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17131:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17139:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17127:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17127:14:1"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17143:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17120:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17120:57:1"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17101:6:1",
														"type": ""
													}
												],
												"src": "17003:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17233:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17290:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17299:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17302:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17292:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17292:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17292:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17256:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17281:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "17263:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17263:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17253:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17253:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17246:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17246:43:1"
															},
															"nodeType": "YulIf",
															"src": "17243:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17226:5:1",
														"type": ""
													}
												],
												"src": "17190:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17361:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17418:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17427:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17430:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17420:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17420:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17420:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17384:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17409:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "17391:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17391:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17381:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17381:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17374:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17374:43:1"
															},
															"nodeType": "YulIf",
															"src": "17371:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17354:5:1",
														"type": ""
													}
												],
												"src": "17318:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IERC20_$454_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$454_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$138_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$138_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value4, value3, value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value3, value4,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$454__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$454_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$138__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$138_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$454_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC721_$138_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function store_literal_in_memory_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9(memPtr) {\n\n        mstore(add(memPtr, 0), \"You don't own this token!\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have no tokens staked\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b146101405780639168ae721461015e5780639406704514610190578063a694fc3a146101c0578063d1af0c7d146101dc578063f2fde38b146101fa576100a9565b8063150b7a02146100ae5780632e1a7d4d146100de5780635c975abb146100fa5780636588103b14610118578063715018a614610136575b600080fd5b6100c860048036038101906100c39190611014565b610216565b6040516100d591906112de565b60405180910390f35b6100f860048036038101906100f3919061109c565b610252565b005b6101026106f5565b60405161010f91906112c3565b60405180910390f35b61012061070c565b60405161012d9190611314565b60405180910390f35b61013e610732565b005b610148610746565b6040516101559190611271565b60405180910390f35b61017860048036038101906101739190610fba565b61076e565b604051610187939291906113ea565b60405180910390f35b6101aa60048036038101906101a5919061109c565b610798565b6040516101b79190611271565b60405180910390f35b6101da60048036038101906101d5919061109c565b6107cb565b005b6101e4610c1a565b6040516101f191906112f9565b60405180910390f35b610214600480360381019061020f9190610fba565b610c40565b005b60008585858585604051602001610231959493929190611225565b60405160208183030381529060405280519060200120905095945050505050565b61025a610cc4565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154116102df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d69061136f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610380576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103779061132f565b60405180910390fd5b600061038b33610d14565b905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160008282546103df919061143d565b925050819055506000805b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490508110156104bf5783600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101828154811061048c5761048b61171c565b5b90600052602060002090600202016001015414156104ac578091506104bf565b80806104b790611647565b9150506103ea565b506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010182815481106105165761051561171c565b5b906000526020600020906002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008154809291906105b89061161d565b919050555060006006600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b815260040161066f9392919061128c565b600060405180830381600087803b15801561068957600080fd5b505af115801561069d573d6000803e3d6000fd5b5050505042600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050506106f2610dd2565b50565b6000600160009054906101000a900460ff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61073a610ddc565b6107446000610e5a565b565b600060018054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60056020528060005260406000206000915090508060000154908060020154908060030154905083565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6107d3610cc4565b3373ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161084591906113cf565b60206040518083038186803b15801561085d57600080fd5b505afa158015610871573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108959190610fe7565b73ffffffffffffffffffffffffffffffffffffffff16146108eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e29061132f565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154111561099e57600061094133610d14565b905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000828254610995919061143d565b92505081905550505b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016109fd9392919061128c565b600060405180830381600087803b158015610a1757600080fd5b505af1158015610a2b573d6000803e3d6000fd5b50505050600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152509050600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000815480929190610b7090611647565b9190505550336006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050610c17610dd2565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c48610ddc565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caf9061134f565b60405180910390fd5b610cc181610e5a565b50565b60026000541415610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d01906113af565b60405180910390fd5b6002600081905550565b6000610e10600454600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015442610dad919061151e565b610db791906114c4565b610dc191906114c4565b610dcb9190611493565b9050919050565b6001600081905550565b610de4610f1d565b73ffffffffffffffffffffffffffffffffffffffff16610e02610746565b73ffffffffffffffffffffffffffffffffffffffff1614610e58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4f9061138f565b60405180910390fd5b565b600060018054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081359050610f3481611864565b92915050565b600081519050610f4981611864565b92915050565b60008083601f840112610f6557610f64611750565b5b8235905067ffffffffffffffff811115610f8257610f8161174b565b5b602083019150836001820283011115610f9e57610f9d611755565b5b9250929050565b600081359050610fb48161187b565b92915050565b600060208284031215610fd057610fcf61175f565b5b6000610fde84828501610f25565b91505092915050565b600060208284031215610ffd57610ffc61175f565b5b600061100b84828501610f3a565b91505092915050565b6000806000806000608086880312156110305761102f61175f565b5b600061103e88828901610f25565b955050602061104f88828901610f25565b945050604061106088828901610fa5565b935050606086013567ffffffffffffffff8111156110815761108061175a565b5b61108d88828901610f4f565b92509250509295509295909350565b6000602082840312156110b2576110b161175f565b5b60006110c084828501610fa5565b91505092915050565b6110d281611552565b82525050565b6110e96110e482611552565b611690565b82525050565b6110f881611564565b82525050565b61110781611570565b82525050565b60006111198385611421565b935061112683858461160e565b82840190509392505050565b61113b816115c6565b82525050565b61114a816115d8565b82525050565b600061115d60198361142c565b915061116882611771565b602082019050919050565b600061118060268361142c565b915061118b8261179a565b604082019050919050565b60006111a360198361142c565b91506111ae826117e9565b602082019050919050565b60006111c660208361142c565b91506111d182611812565b602082019050919050565b60006111e9601f8361142c565b91506111f48261183b565b602082019050919050565b611208816115bc565b82525050565b61121f61121a826115bc565b6116b4565b82525050565b600061123182886110d8565b60148201915061124182876110d8565b601482019150611251828661120e565b60208201915061126282848661110d565b91508190509695505050505050565b600060208201905061128660008301846110c9565b92915050565b60006060820190506112a160008301866110c9565b6112ae60208301856110c9565b6112bb60408301846111ff565b949350505050565b60006020820190506112d860008301846110ef565b92915050565b60006020820190506112f360008301846110fe565b92915050565b600060208201905061130e6000830184611132565b92915050565b60006020820190506113296000830184611141565b92915050565b6000602082019050818103600083015261134881611150565b9050919050565b6000602082019050818103600083015261136881611173565b9050919050565b6000602082019050818103600083015261138881611196565b9050919050565b600060208201905081810360008301526113a8816111b9565b9050919050565b600060208201905081810360008301526113c8816111dc565b9050919050565b60006020820190506113e460008301846111ff565b92915050565b60006060820190506113ff60008301866111ff565b61140c60208301856111ff565b61141960408301846111ff565b949350505050565b600081905092915050565b600082825260208201905092915050565b6000611448826115bc565b9150611453836115bc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611488576114876116be565b5b828201905092915050565b600061149e826115bc565b91506114a9836115bc565b9250826114b9576114b86116ed565b5b828204905092915050565b60006114cf826115bc565b91506114da836115bc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611513576115126116be565b5b828202905092915050565b6000611529826115bc565b9150611534836115bc565b925082821015611547576115466116be565b5b828203905092915050565b600061155d8261159c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006115d1826115ea565b9050919050565b60006115e3826115ea565b9050919050565b60006115f5826115fc565b9050919050565b60006116078261159c565b9050919050565b82818337600083830152505050565b6000611628826115bc565b9150600082141561163c5761163b6116be565b5b600182039050919050565b6000611652826115bc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611685576116846116be565b5b600182019050919050565b600061169b826116a2565b9050919050565b60006116ad82611764565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008160601b9050919050565b7f596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f596f752068617665206e6f20746f6b656e73207374616b656400000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61186d81611552565b811461187857600080fd5b50565b611884816115bc565b811461188f57600080fd5b5056fea2646970667358221220f4d42088f2c25f90fa883e06a987ec9d7289e8c49f59a406f99b5b363613c66764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x94067045 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FA JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x6588103B EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x1014 JUMP JUMPDEST PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD5 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x252 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x102 PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x12C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13E PUSH2 0x732 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x148 PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E4 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH2 0xC40 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x231 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x25A PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT PUSH2 0x2DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D6 SWAP1 PUSH2 0x136F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x380 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x377 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38B CALLER PUSH2 0xD14 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x143D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x4BF JUMPI DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x48C JUMPI PUSH2 0x48B PUSH2 0x171C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x4AC JUMPI DUP1 SWAP2 POP PUSH2 0x4BF JUMP JUMPDEST DUP1 DUP1 PUSH2 0x4B7 SWAP1 PUSH2 0x1647 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3EA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x516 JUMPI PUSH2 0x515 PUSH2 0x171C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5B8 SWAP1 PUSH2 0x161D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x69D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x6F2 PUSH2 0xDD2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x73A PUSH2 0xDDC JUMP JUMPDEST PUSH2 0x744 PUSH1 0x0 PUSH2 0xE5A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x7D3 PUSH2 0xCC4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x845 SWAP2 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x85D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x871 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x895 SWAP2 SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E2 SWAP1 PUSH2 0x132F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x99E JUMPI PUSH1 0x0 PUSH2 0x941 CALLER PUSH2 0xD14 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x143D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB70 SWAP1 PUSH2 0x1647 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0xC17 PUSH2 0xDD2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC48 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAF SWAP1 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC1 DUP2 PUSH2 0xE5A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD01 SWAP1 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xDAD SWAP2 SWAP1 PUSH2 0x151E JUMP JUMPDEST PUSH2 0xDB7 SWAP2 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0xDC1 SWAP2 SWAP1 PUSH2 0x14C4 JUMP JUMPDEST PUSH2 0xDCB SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xDE4 PUSH2 0xF1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE02 PUSH2 0x746 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4F SWAP1 PUSH2 0x138F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF34 DUP2 PUSH2 0x1864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF49 DUP2 PUSH2 0x1864 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xF65 JUMPI PUSH2 0xF64 PUSH2 0x1750 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF82 JUMPI PUSH2 0xF81 PUSH2 0x174B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xF9E JUMPI PUSH2 0xF9D PUSH2 0x1755 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB4 DUP2 PUSH2 0x187B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD0 JUMPI PUSH2 0xFCF PUSH2 0x175F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFDE DUP5 DUP3 DUP6 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFD JUMPI PUSH2 0xFFC PUSH2 0x175F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100B DUP5 DUP3 DUP6 ADD PUSH2 0xF3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1030 JUMPI PUSH2 0x102F PUSH2 0x175F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x103E DUP9 DUP3 DUP10 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x104F DUP9 DUP3 DUP10 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1060 DUP9 DUP3 DUP10 ADD PUSH2 0xFA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1081 JUMPI PUSH2 0x1080 PUSH2 0x175A JUMP JUMPDEST JUMPDEST PUSH2 0x108D DUP9 DUP3 DUP10 ADD PUSH2 0xF4F JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B2 JUMPI PUSH2 0x10B1 PUSH2 0x175F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10C0 DUP5 DUP3 DUP6 ADD PUSH2 0xFA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10D2 DUP2 PUSH2 0x1552 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x10E9 PUSH2 0x10E4 DUP3 PUSH2 0x1552 JUMP JUMPDEST PUSH2 0x1690 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x10F8 DUP2 PUSH2 0x1564 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1107 DUP2 PUSH2 0x1570 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1119 DUP4 DUP6 PUSH2 0x1421 JUMP JUMPDEST SWAP4 POP PUSH2 0x1126 DUP4 DUP6 DUP5 PUSH2 0x160E JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x113B DUP2 PUSH2 0x15C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x114A DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115D PUSH1 0x19 DUP4 PUSH2 0x142C JUMP JUMPDEST SWAP2 POP PUSH2 0x1168 DUP3 PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1180 PUSH1 0x26 DUP4 PUSH2 0x142C JUMP JUMPDEST SWAP2 POP PUSH2 0x118B DUP3 PUSH2 0x179A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A3 PUSH1 0x19 DUP4 PUSH2 0x142C JUMP JUMPDEST SWAP2 POP PUSH2 0x11AE DUP3 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C6 PUSH1 0x20 DUP4 PUSH2 0x142C JUMP JUMPDEST SWAP2 POP PUSH2 0x11D1 DUP3 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E9 PUSH1 0x1F DUP4 PUSH2 0x142C JUMP JUMPDEST SWAP2 POP PUSH2 0x11F4 DUP3 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1208 DUP2 PUSH2 0x15BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x121F PUSH2 0x121A DUP3 PUSH2 0x15BC JUMP JUMPDEST PUSH2 0x16B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1231 DUP3 DUP9 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1241 DUP3 DUP8 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1251 DUP3 DUP7 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1262 DUP3 DUP5 DUP7 PUSH2 0x110D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1286 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12A1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x12AE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x12BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11FF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x130E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1132 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1329 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1141 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1348 DUP2 PUSH2 0x1150 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1368 DUP2 PUSH2 0x1173 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1388 DUP2 PUSH2 0x1196 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13A8 DUP2 PUSH2 0x11B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13C8 DUP2 PUSH2 0x11DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13FF PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x140C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x1419 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x11FF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1448 DUP3 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1453 DUP4 PUSH2 0x15BC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x16BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149E DUP3 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP PUSH2 0x14A9 DUP4 PUSH2 0x15BC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14B9 JUMPI PUSH2 0x14B8 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CF DUP3 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP PUSH2 0x14DA DUP4 PUSH2 0x15BC JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1513 JUMPI PUSH2 0x1512 PUSH2 0x16BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1529 DUP3 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1534 DUP4 PUSH2 0x15BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1547 JUMPI PUSH2 0x1546 PUSH2 0x16BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155D DUP3 PUSH2 0x159C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D1 DUP3 PUSH2 0x15EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E3 DUP3 PUSH2 0x15EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F5 DUP3 PUSH2 0x15FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1607 DUP3 PUSH2 0x159C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1628 DUP3 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x163C JUMPI PUSH2 0x163B PUSH2 0x16BE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1652 DUP3 PUSH2 0x15BC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1685 JUMPI PUSH2 0x1684 PUSH2 0x16BE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x169B DUP3 PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16AD DUP3 PUSH2 0x1764 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F20746F6B656E73207374616B656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x186D DUP2 PUSH2 0x1552 JUMP JUMPDEST DUP2 EQ PUSH2 0x1878 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1884 DUP2 PUSH2 0x15BC JUMP JUMPDEST DUP2 EQ PUSH2 0x188F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xD4 KECCAK256 DUP9 CALLCODE 0xC2 0x5F SWAP1 STATICCALL DUP9 RETURNDATACOPY MOD 0xA9 DUP8 0xEC SWAP14 PUSH19 0x89E8C49F59A406F99B5B363613C66764736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "29748:3414:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30742:271;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31785:1064;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;16842:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30197:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28929:103;;;:::i;:::-;;28281:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30336:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;30463:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31021:756;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30164:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29187:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30742:271;30913:6;30973:8;30983:4;30989:7;30998:4;;30956:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;30946:58;;;;;;30932:73;;30742:271;;;;;;;:::o;31785:1064::-;19226:21;:19;:21::i;:::-;31911:1:::1;31876:7;:19;31884:10;31876:19;;;;;;;;;;;;;;;:32;;;:36;31854:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;32011:10;31984:37;;:13;:23;31998:8;31984:23;;;;;;;;;;;;;;;;;;;;;:37;;;31976:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;32163:15;32181:28;32198:10;32181:16;:28::i;:::-;32163:46;;32260:7;32220;:19;32228:10;32220:19;;;;;;;;;;;;;;;:36;;;:47;;;;;;;:::i;:::-;;;;;;;;32282:13;32315:9:::0;32310:225:::1;32334:7;:19;32342:10;32334:19;;;;;;;;;;;;;;;:32;;:39;;;;32330:1;:43;32310:225;;;32446:8;32399:7;:19;32407:10;32399:19;;;;;;;;;;;;;;;:32;;32432:1;32399:35;;;;;;;;:::i;:::-;;;;;;;;;;;;:43;;;:55;32395:129;;;32483:1;32475:9;;32503:5;;32395:129;32375:3;;;;;:::i;:::-;;;;32310:225;;;;32606:1;32549:7;:19;32557:10;32549:19;;;;;;;;;;;;;;;:32;;32582:5;32549:39;;;;;;;;:::i;:::-;;;;;;;;;;;;:46;;;:59;;;;;;;;;;;;;;;;;;32619:7;:19;32627:10;32619:19;;;;;;;;;;;;;;;:32;;;:34;;;;;;;;;:::i;:::-;;;;;;32698:1;32664:13;:23;32678:8;32664:23;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;32713:13;;;;;;;;;;;:26;;;32748:4;32755:10;32767:8;32713:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;32826:15;32787:7;:19;32795:10;32787:19;;;;;;;;;;;;;;;:36;;:54;;;;31843:1006;;19270:20:::0;:18;:20::i;:::-;31785:1064;:::o;16842:86::-;16889:4;16913:7;;;;;;;;;;;16906:14;;16842:86;:::o;30197:28::-;;;;;;;;;;;;;:::o;28929:103::-;28167:13;:11;:13::i;:::-;28994:30:::1;29021:1;28994:18;:30::i;:::-;28929:103::o:0;28281:87::-;28327:7;28354:6;;;;;;;;;;28347:13;;28281:87;:::o;30336:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;30463:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;31021:756::-;19226:21;:19;:21::i;:::-;31144:10:::1;31109:45;;:13;;;;;;;;;;;:21;;;31131:8;31109:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;;31087:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;31259:1;31224:7;:19;31232:10;31224:19;;;;;;;;;;;;;;;:32;;;:36;31220:177;;;31277:15;31295:28;31312:10;31295:16;:28::i;:::-;31277:46;;31378:7;31338;:19;31346:10;31338:19;;;;;;;;;;;;;;;:36;;;:47;;;;;;;:::i;:::-;;;;;;;;31262:135;31220:177;31409:13;;;;;;;;;;;:26;;;31436:10;31456:4;31463:8;31409:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;31485:30;31518:33;;;;;;;;31530:10;31518:33;;;;;;31542:8;31518:33;;::::0;31485:66:::1;;31562:7;:19;31570:10;31562:19;;;;;;;;;;;;;;;:32;;31600:11;31562:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31623:7;:19;31631:10;31623:19;;;;;;;;;;;;;;;:32;;;:34;;;;;;;;;:::i;:::-;;;;;;31694:10;31668:13;:23;31682:8;31668:23;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;31754:15;31715:7;:19;31723:10;31715:19;;;;;;;;;;;;;;;:36;;:54;;;;31076:701;19270:20:::0;:18;:20::i;:::-;31021:756;:::o;30164:26::-;;;;;;;;;;;;;:::o;29187:201::-;28167:13;:11;:13::i;:::-;29296:1:::1;29276:22;;:8;:22;;;;29268:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;29352:28;29371:8;29352:18;:28::i;:::-;29187:201:::0;:::o;19306:289::-;18708:1;19436:7;;:19;;19428:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;18708:1;19569:7;:18;;;;19306:289::o;32857:300::-;32950:16;33144:4;33126:14;;33082:7;:16;33090:7;33082:16;;;;;;;;;;;;;;;:29;;;33028:7;:16;33036:7;33028:16;;;;;;;;;;;;;;;:33;;;33010:15;:51;;;;:::i;:::-;33009:102;;;;:::i;:::-;32993:147;;;;:::i;:::-;32992:156;;;;:::i;:::-;32984:165;;32857:300;;;:::o;19603:213::-;18664:1;19786:7;:22;;;;19603:213::o;28446:132::-;28521:12;:10;:12::i;:::-;28510:23;;:7;:5;:7::i;:::-;:23;;;28502:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;28446:132::o;29548:191::-;29622:16;29641:6;;;;;;;;;;29622:25;;29667:8;29658:6;;:17;;;;;;;;;;;;;;;;;;29722:8;29691:40;;29712:8;29691:40;;;;;;;;;;;;29611:128;29548:191;:::o;15568:98::-;15621:7;15648:10;15641:17;;15568:98;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;152:143;;;;:::o;314:552::-;371:8;381:6;431:3;424:4;416:6;412:17;408:27;398:122;;439:79;;:::i;:::-;398:122;552:6;539:20;529:30;;582:18;574:6;571:30;568:117;;;604:79;;:::i;:::-;568:117;718:4;710:6;706:17;694:29;;772:3;764:4;756:6;752:17;742:8;738:32;735:41;732:128;;;779:79;;:::i;:::-;732:128;314:552;;;;;:::o;872:139::-;918:5;956:6;943:20;934:29;;972:33;999:5;972:33;:::i;:::-;872:139;;;;:::o;1017:329::-;1076:6;1125:2;1113:9;1104:7;1100:23;1096:32;1093:119;;;1131:79;;:::i;:::-;1093:119;1251:1;1276:53;1321:7;1312:6;1301:9;1297:22;1276:53;:::i;:::-;1266:63;;1222:117;1017:329;;;;:::o;1352:351::-;1422:6;1471:2;1459:9;1450:7;1446:23;1442:32;1439:119;;;1477:79;;:::i;:::-;1439:119;1597:1;1622:64;1678:7;1669:6;1658:9;1654:22;1622:64;:::i;:::-;1612:74;;1568:128;1352:351;;;;:::o;1709:963::-;1806:6;1814;1822;1830;1838;1887:3;1875:9;1866:7;1862:23;1858:33;1855:120;;;1894:79;;:::i;:::-;1855:120;2014:1;2039:53;2084:7;2075:6;2064:9;2060:22;2039:53;:::i;:::-;2029:63;;1985:117;2141:2;2167:53;2212:7;2203:6;2192:9;2188:22;2167:53;:::i;:::-;2157:63;;2112:118;2269:2;2295:53;2340:7;2331:6;2320:9;2316:22;2295:53;:::i;:::-;2285:63;;2240:118;2425:2;2414:9;2410:18;2397:32;2456:18;2448:6;2445:30;2442:117;;;2478:79;;:::i;:::-;2442:117;2591:64;2647:7;2638:6;2627:9;2623:22;2591:64;:::i;:::-;2573:82;;;;2368:297;1709:963;;;;;;;;:::o;2678:329::-;2737:6;2786:2;2774:9;2765:7;2761:23;2757:32;2754:119;;;2792:79;;:::i;:::-;2754:119;2912:1;2937:53;2982:7;2973:6;2962:9;2958:22;2937:53;:::i;:::-;2927:63;;2883:117;2678:329;;;;:::o;3013:118::-;3100:24;3118:5;3100:24;:::i;:::-;3095:3;3088:37;3013:118;;:::o;3137:157::-;3242:45;3262:24;3280:5;3262:24;:::i;:::-;3242:45;:::i;:::-;3237:3;3230:58;3137:157;;:::o;3300:109::-;3381:21;3396:5;3381:21;:::i;:::-;3376:3;3369:34;3300:109;;:::o;3415:115::-;3500:23;3517:5;3500:23;:::i;:::-;3495:3;3488:36;3415:115;;:::o;3558:314::-;3672:3;3693:88;3774:6;3769:3;3693:88;:::i;:::-;3686:95;;3791:43;3827:6;3822:3;3815:5;3791:43;:::i;:::-;3859:6;3854:3;3850:16;3843:23;;3558:314;;;;;:::o;3878:159::-;3979:51;4024:5;3979:51;:::i;:::-;3974:3;3967:64;3878:159;;:::o;4043:161::-;4145:52;4191:5;4145:52;:::i;:::-;4140:3;4133:65;4043:161;;:::o;4210:366::-;4352:3;4373:67;4437:2;4432:3;4373:67;:::i;:::-;4366:74;;4449:93;4538:3;4449:93;:::i;:::-;4567:2;4562:3;4558:12;4551:19;;4210:366;;;:::o;4582:::-;4724:3;4745:67;4809:2;4804:3;4745:67;:::i;:::-;4738:74;;4821:93;4910:3;4821:93;:::i;:::-;4939:2;4934:3;4930:12;4923:19;;4582:366;;;:::o;4954:::-;5096:3;5117:67;5181:2;5176:3;5117:67;:::i;:::-;5110:74;;5193:93;5282:3;5193:93;:::i;:::-;5311:2;5306:3;5302:12;5295:19;;4954:366;;;:::o;5326:::-;5468:3;5489:67;5553:2;5548:3;5489:67;:::i;:::-;5482:74;;5565:93;5654:3;5565:93;:::i;:::-;5683:2;5678:3;5674:12;5667:19;;5326:366;;;:::o;5698:::-;5840:3;5861:67;5925:2;5920:3;5861:67;:::i;:::-;5854:74;;5937:93;6026:3;5937:93;:::i;:::-;6055:2;6050:3;6046:12;6039:19;;5698:366;;;:::o;6070:118::-;6157:24;6175:5;6157:24;:::i;:::-;6152:3;6145:37;6070:118;;:::o;6194:157::-;6299:45;6319:24;6337:5;6319:24;:::i;:::-;6299:45;:::i;:::-;6294:3;6287:58;6194:157;;:::o;6357:714::-;6581:3;6596:75;6667:3;6658:6;6596:75;:::i;:::-;6696:2;6691:3;6687:12;6680:19;;6709:75;6780:3;6771:6;6709:75;:::i;:::-;6809:2;6804:3;6800:12;6793:19;;6822:75;6893:3;6884:6;6822:75;:::i;:::-;6922:2;6917:3;6913:12;6906:19;;6942:103;7041:3;7032:6;7024;6942:103;:::i;:::-;6935:110;;7062:3;7055:10;;6357:714;;;;;;;;:::o;7077:222::-;7170:4;7208:2;7197:9;7193:18;7185:26;;7221:71;7289:1;7278:9;7274:17;7265:6;7221:71;:::i;:::-;7077:222;;;;:::o;7305:442::-;7454:4;7492:2;7481:9;7477:18;7469:26;;7505:71;7573:1;7562:9;7558:17;7549:6;7505:71;:::i;:::-;7586:72;7654:2;7643:9;7639:18;7630:6;7586:72;:::i;:::-;7668;7736:2;7725:9;7721:18;7712:6;7668:72;:::i;:::-;7305:442;;;;;;:::o;7753:210::-;7840:4;7878:2;7867:9;7863:18;7855:26;;7891:65;7953:1;7942:9;7938:17;7929:6;7891:65;:::i;:::-;7753:210;;;;:::o;7969:218::-;8060:4;8098:2;8087:9;8083:18;8075:26;;8111:69;8177:1;8166:9;8162:17;8153:6;8111:69;:::i;:::-;7969:218;;;;:::o;8193:250::-;8300:4;8338:2;8327:9;8323:18;8315:26;;8351:85;8433:1;8422:9;8418:17;8409:6;8351:85;:::i;:::-;8193:250;;;;:::o;8449:252::-;8557:4;8595:2;8584:9;8580:18;8572:26;;8608:86;8691:1;8680:9;8676:17;8667:6;8608:86;:::i;:::-;8449:252;;;;:::o;8707:419::-;8873:4;8911:2;8900:9;8896:18;8888:26;;8960:9;8954:4;8950:20;8946:1;8935:9;8931:17;8924:47;8988:131;9114:4;8988:131;:::i;:::-;8980:139;;8707:419;;;:::o;9132:::-;9298:4;9336:2;9325:9;9321:18;9313:26;;9385:9;9379:4;9375:20;9371:1;9360:9;9356:17;9349:47;9413:131;9539:4;9413:131;:::i;:::-;9405:139;;9132:419;;;:::o;9557:::-;9723:4;9761:2;9750:9;9746:18;9738:26;;9810:9;9804:4;9800:20;9796:1;9785:9;9781:17;9774:47;9838:131;9964:4;9838:131;:::i;:::-;9830:139;;9557:419;;;:::o;9982:::-;10148:4;10186:2;10175:9;10171:18;10163:26;;10235:9;10229:4;10225:20;10221:1;10210:9;10206:17;10199:47;10263:131;10389:4;10263:131;:::i;:::-;10255:139;;9982:419;;;:::o;10407:::-;10573:4;10611:2;10600:9;10596:18;10588:26;;10660:9;10654:4;10650:20;10646:1;10635:9;10631:17;10624:47;10688:131;10814:4;10688:131;:::i;:::-;10680:139;;10407:419;;;:::o;10832:222::-;10925:4;10963:2;10952:9;10948:18;10940:26;;10976:71;11044:1;11033:9;11029:17;11020:6;10976:71;:::i;:::-;10832:222;;;;:::o;11060:442::-;11209:4;11247:2;11236:9;11232:18;11224:26;;11260:71;11328:1;11317:9;11313:17;11304:6;11260:71;:::i;:::-;11341:72;11409:2;11398:9;11394:18;11385:6;11341:72;:::i;:::-;11423;11491:2;11480:9;11476:18;11467:6;11423:72;:::i;:::-;11060:442;;;;;;:::o;11589:147::-;11690:11;11727:3;11712:18;;11589:147;;;;:::o;11742:169::-;11826:11;11860:6;11855:3;11848:19;11900:4;11895:3;11891:14;11876:29;;11742:169;;;;:::o;11917:305::-;11957:3;11976:20;11994:1;11976:20;:::i;:::-;11971:25;;12010:20;12028:1;12010:20;:::i;:::-;12005:25;;12164:1;12096:66;12092:74;12089:1;12086:81;12083:107;;;12170:18;;:::i;:::-;12083:107;12214:1;12211;12207:9;12200:16;;11917:305;;;;:::o;12228:185::-;12268:1;12285:20;12303:1;12285:20;:::i;:::-;12280:25;;12319:20;12337:1;12319:20;:::i;:::-;12314:25;;12358:1;12348:35;;12363:18;;:::i;:::-;12348:35;12405:1;12402;12398:9;12393:14;;12228:185;;;;:::o;12419:348::-;12459:7;12482:20;12500:1;12482:20;:::i;:::-;12477:25;;12516:20;12534:1;12516:20;:::i;:::-;12511:25;;12704:1;12636:66;12632:74;12629:1;12626:81;12621:1;12614:9;12607:17;12603:105;12600:131;;;12711:18;;:::i;:::-;12600:131;12759:1;12756;12752:9;12741:20;;12419:348;;;;:::o;12773:191::-;12813:4;12833:20;12851:1;12833:20;:::i;:::-;12828:25;;12867:20;12885:1;12867:20;:::i;:::-;12862:25;;12906:1;12903;12900:8;12897:34;;;12911:18;;:::i;:::-;12897:34;12956:1;12953;12949:9;12941:17;;12773:191;;;;:::o;12970:96::-;13007:7;13036:24;13054:5;13036:24;:::i;:::-;13025:35;;12970:96;;;:::o;13072:90::-;13106:7;13149:5;13142:13;13135:21;13124:32;;13072:90;;;:::o;13168:149::-;13204:7;13244:66;13237:5;13233:78;13222:89;;13168:149;;;:::o;13323:126::-;13360:7;13400:42;13393:5;13389:54;13378:65;;13323:126;;;:::o;13455:77::-;13492:7;13521:5;13510:16;;13455:77;;;:::o;13538:140::-;13602:9;13635:37;13666:5;13635:37;:::i;:::-;13622:50;;13538:140;;;:::o;13684:141::-;13749:9;13782:37;13813:5;13782:37;:::i;:::-;13769:50;;13684:141;;;:::o;13831:126::-;13881:9;13914:37;13945:5;13914:37;:::i;:::-;13901:50;;13831:126;;;:::o;13963:113::-;14013:9;14046:24;14064:5;14046:24;:::i;:::-;14033:37;;13963:113;;;:::o;14082:154::-;14166:6;14161:3;14156;14143:30;14228:1;14219:6;14214:3;14210:16;14203:27;14082:154;;;:::o;14242:171::-;14281:3;14304:24;14322:5;14304:24;:::i;:::-;14295:33;;14350:4;14343:5;14340:15;14337:41;;;14358:18;;:::i;:::-;14337:41;14405:1;14398:5;14394:13;14387:20;;14242:171;;;:::o;14419:233::-;14458:3;14481:24;14499:5;14481:24;:::i;:::-;14472:33;;14527:66;14520:5;14517:77;14514:103;;;14597:18;;:::i;:::-;14514:103;14644:1;14637:5;14633:13;14626:20;;14419:233;;;:::o;14658:100::-;14697:7;14726:26;14746:5;14726:26;:::i;:::-;14715:37;;14658:100;;;:::o;14764:94::-;14803:7;14832:20;14846:5;14832:20;:::i;:::-;14821:31;;14764:94;;;:::o;14864:79::-;14903:7;14932:5;14921:16;;14864:79;;;:::o;14949:180::-;14997:77;14994:1;14987:88;15094:4;15091:1;15084:15;15118:4;15115:1;15108:15;15135:180;15183:77;15180:1;15173:88;15280:4;15277:1;15270:15;15304:4;15301:1;15294:15;15321:180;15369:77;15366:1;15359:88;15466:4;15463:1;15456:15;15490:4;15487:1;15480:15;15507:117;15616:1;15613;15606:12;15630:117;15739:1;15736;15729:12;15753:117;15862:1;15859;15852:12;15876:117;15985:1;15982;15975:12;15999:117;16108:1;16105;16098:12;16122:94;16155:8;16203:5;16199:2;16195:14;16174:35;;16122:94;;;:::o;16222:175::-;16362:27;16358:1;16350:6;16346:14;16339:51;16222:175;:::o;16403:225::-;16543:34;16539:1;16531:6;16527:14;16520:58;16612:8;16607:2;16599:6;16595:15;16588:33;16403:225;:::o;16634:175::-;16774:27;16770:1;16762:6;16758:14;16751:51;16634:175;:::o;16815:182::-;16955:34;16951:1;16943:6;16939:14;16932:58;16815:182;:::o;17003:181::-;17143:33;17139:1;17131:6;17127:14;17120:57;17003:181;:::o;17190:122::-;17263:24;17281:5;17263:24;:::i;:::-;17256:5;17253:35;17243:63;;17302:1;17299;17292:12;17243:63;17190:122;:::o;17318:::-;17391:24;17409:5;17391:24;:::i;:::-;17384:5;17381:35;17371:63;;17430:1;17427;17420:12;17371:63;17318:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1268800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"nftCollection()": "2667",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2569",
								"paused()": "2524",
								"renounceOwnership()": "30631",
								"rewardsToken()": "2688",
								"stake(uint256)": "infinite",
								"stakerAddress(uint256)": "2883",
								"stakers(address)": "infinite",
								"transferOwnership(address)": "31001",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"calculateRewards(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29748,
									"end": 33162,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 29748,
									"end": 33162,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29748,
									"end": 33162,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30317,
									"end": 30323,
									"name": "PUSH",
									"source": 0,
									"value": "186A0"
								},
								{
									"begin": 30284,
									"end": 30323,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30284,
									"end": 30323,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18664,
									"end": 18665,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18775,
									"end": 18782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 18797,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 18797,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 18797,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 18797,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16203,
									"end": 16208,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16193,
									"end": 16200,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16193,
									"end": 16200,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28002,
									"end": 28034,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 28021,
									"end": 28033,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28021,
									"end": 28031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 28021,
									"end": 28031,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28021,
									"end": 28031,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 28021,
									"end": 28033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28021,
									"end": 28033,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 28021,
									"end": 28033,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 28021,
									"end": 28033,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28021,
									"end": 28033,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28002,
									"end": 28020,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 28002,
									"end": 28020,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28002,
									"end": 28020,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 28002,
									"end": 28034,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28002,
									"end": 28034,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 28002,
									"end": 28034,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 28002,
									"end": 28034,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 28002,
									"end": 28034,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30630,
									"end": 30644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30627,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30614,
									"end": 30627,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30670,
									"end": 30683,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30667,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30655,
									"end": 30667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 30726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30694,
									"end": 30708,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30694,
									"end": 30726,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30694,
									"end": 30726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30694,
									"end": 30726,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30694,
									"end": 30726,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29748,
									"end": 33162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 29748,
									"end": 33162,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 15568,
									"end": 15666,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 15568,
									"end": 15666,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15621,
									"end": 15628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15648,
									"end": 15658,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 15641,
									"end": 15658,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15641,
									"end": 15658,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15568,
									"end": 15666,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15568,
									"end": 15666,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 29548,
									"end": 29739,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 29548,
									"end": 29739,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29622,
									"end": 29638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29622,
									"end": 29647,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29622,
									"end": 29647,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29667,
									"end": 29675,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29664,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29658,
									"end": 29664,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29722,
									"end": 29730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29712,
									"end": 29720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 29611,
									"end": 29739,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29548,
									"end": 29739,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29548,
									"end": 29739,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 178,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7,
									"end": 178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 78,
									"end": 83,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 115,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 103,
									"end": 116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 94,
									"end": 116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 94,
									"end": 116,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 125,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 166,
									"end": 171,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 357,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 357,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 256,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 281,
									"end": 294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 272,
									"end": 294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 272,
									"end": 294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 303,
									"end": 351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 345,
									"end": 350,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 303,
									"end": 351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 303,
									"end": 351,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 303,
									"end": 351,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 303,
									"end": 351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 184,
									"end": 357,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 184,
									"end": 357,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 184,
									"end": 357,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 184,
									"end": 357,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 184,
									"end": 357,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 363,
									"end": 506,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 363,
									"end": 506,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 420,
									"end": 425,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 457,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 445,
									"end": 458,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 436,
									"end": 458,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 436,
									"end": 458,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 467,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 494,
									"end": 499,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 467,
									"end": 500,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 467,
									"end": 500,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 467,
									"end": 500,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 363,
									"end": 506,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 363,
									"end": 506,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 363,
									"end": 506,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 363,
									"end": 506,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 363,
									"end": 506,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 512,
									"end": 1233,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 512,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 629,
									"end": 635,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 643,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 645,
									"end": 651,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 694,
									"end": 696,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 682,
									"end": 691,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 673,
									"end": 680,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 669,
									"end": 692,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 665,
									"end": 697,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 662,
									"end": 781,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 662,
									"end": 781,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 662,
									"end": 781,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 700,
									"end": 779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 700,
									"end": 779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 700,
									"end": 779,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 700,
									"end": 779,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 700,
									"end": 779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 662,
									"end": 781,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 662,
									"end": 781,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 820,
									"end": 821,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 845,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 916,
									"end": 923,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 907,
									"end": 913,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 896,
									"end": 905,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 892,
									"end": 914,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 845,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 845,
									"end": 924,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 845,
									"end": 924,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 845,
									"end": 924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 835,
									"end": 924,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 835,
									"end": 924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 791,
									"end": 934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 973,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 999,
									"end": 1077,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1069,
									"end": 1076,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1060,
									"end": 1066,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1058,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1045,
									"end": 1067,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1077,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 999,
									"end": 1077,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 999,
									"end": 1077,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 999,
									"end": 1077,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 989,
									"end": 1077,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 989,
									"end": 1077,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1087,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1126,
									"end": 1128,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1152,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1208,
									"end": 1215,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1205,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1188,
									"end": 1197,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1184,
									"end": 1206,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1152,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1152,
									"end": 1216,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1152,
									"end": 1216,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1152,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1142,
									"end": 1216,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1142,
									"end": 1216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1097,
									"end": 1226,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 512,
									"end": 1233,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 512,
									"end": 1233,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 512,
									"end": 1233,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 512,
									"end": 1233,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 512,
									"end": 1233,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 512,
									"end": 1233,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1320,
									"end": 1416,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1320,
									"end": 1416,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1357,
									"end": 1364,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1386,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1404,
									"end": 1409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1386,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1386,
									"end": 1410,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1386,
									"end": 1410,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1386,
									"end": 1410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1375,
									"end": 1410,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1375,
									"end": 1410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1320,
									"end": 1416,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1320,
									"end": 1416,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1320,
									"end": 1416,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1320,
									"end": 1416,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1422,
									"end": 1532,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1422,
									"end": 1532,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1473,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1502,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1520,
									"end": 1525,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1502,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1502,
									"end": 1526,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1502,
									"end": 1526,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1502,
									"end": 1526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1491,
									"end": 1526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1422,
									"end": 1532,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1422,
									"end": 1532,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1422,
									"end": 1532,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1422,
									"end": 1532,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1538,
									"end": 1649,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1538,
									"end": 1649,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1590,
									"end": 1597,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1619,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1637,
									"end": 1642,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1619,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1619,
									"end": 1643,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1619,
									"end": 1643,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1619,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1608,
									"end": 1643,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1608,
									"end": 1643,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1538,
									"end": 1649,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1538,
									"end": 1649,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1538,
									"end": 1649,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1538,
									"end": 1649,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1655,
									"end": 1781,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1655,
									"end": 1781,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1692,
									"end": 1699,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1732,
									"end": 1774,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1725,
									"end": 1730,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1775,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1775,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1655,
									"end": 1781,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1655,
									"end": 1781,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1655,
									"end": 1781,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1655,
									"end": 1781,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1787,
									"end": 1864,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1787,
									"end": 1864,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1824,
									"end": 1831,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1853,
									"end": 1858,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1858,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1858,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1864,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1864,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1864,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1864,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1993,
									"end": 2110,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1993,
									"end": 2110,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2102,
									"end": 2103,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2099,
									"end": 2100,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2092,
									"end": 2104,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2116,
									"end": 2266,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2116,
									"end": 2266,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2203,
									"end": 2241,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2235,
									"end": 2240,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2203,
									"end": 2241,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2203,
									"end": 2241,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2203,
									"end": 2241,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2203,
									"end": 2241,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2196,
									"end": 2201,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2193,
									"end": 2242,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2183,
									"end": 2260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2183,
									"end": 2260,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2256,
									"end": 2257,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2253,
									"end": 2254,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2246,
									"end": 2258,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2183,
									"end": 2260,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2183,
									"end": 2260,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2116,
									"end": 2266,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2116,
									"end": 2266,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2272,
									"end": 2424,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2272,
									"end": 2424,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2399,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2393,
									"end": 2398,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2399,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2360,
									"end": 2399,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2360,
									"end": 2399,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2360,
									"end": 2399,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2358,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2350,
									"end": 2400,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2418,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2340,
									"end": 2418,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2411,
									"end": 2412,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2404,
									"end": 2416,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2418,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2340,
									"end": 2418,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2272,
									"end": 2424,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2272,
									"end": 2424,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2430,
									"end": 2552,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2430,
									"end": 2552,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2503,
									"end": 2527,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2521,
									"end": 2526,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2503,
									"end": 2527,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2503,
									"end": 2527,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2503,
									"end": 2527,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2503,
									"end": 2527,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2496,
									"end": 2501,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2493,
									"end": 2528,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2546,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2483,
									"end": 2546,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2542,
									"end": 2543,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2539,
									"end": 2540,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2532,
									"end": 2544,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2546,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2483,
									"end": 2546,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2430,
									"end": 2552,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2430,
									"end": 2552,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 29748,
									"end": 33162,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 29748,
									"end": 33162,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29748,
									"end": 33162,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29748,
									"end": 33162,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29748,
									"end": 33162,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29748,
									"end": 33162,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29748,
									"end": 33162,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29748,
									"end": 33162,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29748,
									"end": 33162,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f4d42088f2c25f90fa883e06a987ec9d7289e8c49f59a406f99b5b363613c66764736f6c63430008070033",
									".code": [
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "9168AE72"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "94067045"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "D1AF0C7D"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "6588103B"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 33162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30913,
											"end": 30919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30973,
											"end": 30981,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30983,
											"end": 30987,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30989,
											"end": 30996,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30998,
											"end": 31002,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30998,
											"end": 31002,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30956,
											"end": 31003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30946,
											"end": 31004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30946,
											"end": 31004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30946,
											"end": 31004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30946,
											"end": 31004,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30946,
											"end": 31004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30946,
											"end": 31004,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30932,
											"end": 31005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30932,
											"end": 31005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31013,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 19226,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31911,
											"end": 31912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31876,
											"end": 31883,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31884,
											"end": 31894,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31876,
											"end": 31908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31912,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 31854,
											"end": 31965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32011,
											"end": 32021,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31984,
											"end": 32021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 31997,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31998,
											"end": 32006,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31984,
											"end": 32007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31984,
											"end": 32021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 32021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 31976,
											"end": 32051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32163,
											"end": 32178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32181,
											"end": 32209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 32198,
											"end": 32208,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32181,
											"end": 32197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 32181,
											"end": 32209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32181,
											"end": 32209,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 32181,
											"end": 32209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32163,
											"end": 32209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32163,
											"end": 32209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32260,
											"end": 32267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32227,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32228,
											"end": 32238,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32220,
											"end": 32239,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32256,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32220,
											"end": 32256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32220,
											"end": 32267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32282,
											"end": 32295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32315,
											"end": 32324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32310,
											"end": 32535,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 32310,
											"end": 32535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32341,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32342,
											"end": 32352,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32334,
											"end": 32353,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32366,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32334,
											"end": 32366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32334,
											"end": 32373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32330,
											"end": 32373,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32310,
											"end": 32535,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32310,
											"end": 32535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 32310,
											"end": 32535,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32446,
											"end": 32454,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32406,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32407,
											"end": 32417,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32399,
											"end": 32418,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32431,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32399,
											"end": 32431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32432,
											"end": 32433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32442,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32399,
											"end": 32442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32395,
											"end": 32524,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32395,
											"end": 32524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 32395,
											"end": 32524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32483,
											"end": 32484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32475,
											"end": 32484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32475,
											"end": 32484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32503,
											"end": 32508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 32503,
											"end": 32508,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32395,
											"end": 32524,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 32395,
											"end": 32524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32375,
											"end": 32378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32375,
											"end": 32378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32375,
											"end": 32378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 32375,
											"end": 32378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32375,
											"end": 32378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 32375,
											"end": 32378,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32375,
											"end": 32378,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 32375,
											"end": 32378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32375,
											"end": 32378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32375,
											"end": 32378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32375,
											"end": 32378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32310,
											"end": 32535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 32310,
											"end": 32535,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32310,
											"end": 32535,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 32310,
											"end": 32535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32310,
											"end": 32535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32606,
											"end": 32607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32549,
											"end": 32556,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32557,
											"end": 32567,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32549,
											"end": 32568,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32549,
											"end": 32581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32582,
											"end": 32587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32549,
											"end": 32595,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32549,
											"end": 32608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32626,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32627,
											"end": 32637,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32619,
											"end": 32638,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32619,
											"end": 32651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32619,
											"end": 32653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32698,
											"end": 32699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32664,
											"end": 32677,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32664,
											"end": 32687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32678,
											"end": 32686,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32664,
											"end": 32687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32664,
											"end": 32687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32664,
											"end": 32687,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32664,
											"end": 32700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32726,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32713,
											"end": 32726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32713,
											"end": 32726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32726,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32713,
											"end": 32726,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32726,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32713,
											"end": 32726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32739,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32713,
											"end": 32739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32739,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 32748,
											"end": 32752,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32765,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32767,
											"end": 32775,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32713,
											"end": 32776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32841,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32794,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32795,
											"end": 32805,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32787,
											"end": 32806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32823,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32787,
											"end": 32823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32841,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32787,
											"end": 32841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31843,
											"end": 32849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31843,
											"end": 32849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 19270,
											"end": 19288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 32849,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16906,
											"end": 16920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16906,
											"end": 16920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28167,
											"end": 28178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28994,
											"end": 29024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 29021,
											"end": 29022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28994,
											"end": 29012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 28994,
											"end": 29024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28994,
											"end": 29024,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 28994,
											"end": 29024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28327,
											"end": 28334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 19226,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31144,
											"end": 31154,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31109,
											"end": 31154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31122,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31109,
											"end": 31122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31109,
											"end": 31122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31122,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31109,
											"end": 31122,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31122,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31109,
											"end": 31122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31130,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31109,
											"end": 31130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31130,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 31131,
											"end": 31139,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 31109,
											"end": 31140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31109,
											"end": 31154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31154,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 31087,
											"end": 31207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31259,
											"end": 31260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31224,
											"end": 31231,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31232,
											"end": 31242,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31224,
											"end": 31243,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31224,
											"end": 31256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31224,
											"end": 31256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31224,
											"end": 31256,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31224,
											"end": 31260,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31220,
											"end": 31397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31220,
											"end": 31397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 31220,
											"end": 31397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31277,
											"end": 31292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31295,
											"end": 31323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 31312,
											"end": 31322,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31295,
											"end": 31311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 31295,
											"end": 31323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31295,
											"end": 31323,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 31295,
											"end": 31323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31277,
											"end": 31323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31277,
											"end": 31323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31378,
											"end": 31385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31345,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31346,
											"end": 31356,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31338,
											"end": 31357,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31374,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31338,
											"end": 31374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31338,
											"end": 31385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31262,
											"end": 31397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31220,
											"end": 31397,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 31220,
											"end": 31397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31422,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31409,
											"end": 31422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31409,
											"end": 31422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31422,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31422,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31409,
											"end": 31422,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31422,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31422,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31409,
											"end": 31422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31409,
											"end": 31435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31435,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 31436,
											"end": 31446,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31456,
											"end": 31460,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31463,
											"end": 31471,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31409,
											"end": 31472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31485,
											"end": 31515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31530,
											"end": 31540,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31542,
											"end": 31550,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31518,
											"end": 31551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31485,
											"end": 31551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31485,
											"end": 31551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31569,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31570,
											"end": 31580,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31562,
											"end": 31581,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31594,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31562,
											"end": 31594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31600,
											"end": 31611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31562,
											"end": 31612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31630,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31631,
											"end": 31641,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31623,
											"end": 31642,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31623,
											"end": 31655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31623,
											"end": 31657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31694,
											"end": 31704,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31681,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31668,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31682,
											"end": 31690,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31668,
											"end": 31691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31668,
											"end": 31691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31668,
											"end": 31691,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31668,
											"end": 31704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31754,
											"end": 31769,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31722,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31723,
											"end": 31733,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31715,
											"end": 31734,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31751,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31715,
											"end": 31751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31769,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31715,
											"end": 31769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 19270,
											"end": 19288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31021,
											"end": 31777,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 28167,
											"end": 28178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29296,
											"end": 29297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29276,
											"end": 29298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29276,
											"end": 29298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 29284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 29298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29276,
											"end": 29298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 29298,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 29298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29352,
											"end": 29380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 29371,
											"end": 29379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29352,
											"end": 29370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29352,
											"end": 29380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29352,
											"end": 29380,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 29352,
											"end": 29380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19306,
											"end": 19595,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19306,
											"end": 19595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18708,
											"end": 18709,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19436,
											"end": 19443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19436,
											"end": 19443,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 19455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 19455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18708,
											"end": 18709,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19569,
											"end": 19576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19569,
											"end": 19587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19569,
											"end": 19587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19569,
											"end": 19587,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19569,
											"end": 19587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19306,
											"end": 19595,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32857,
											"end": 33157,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 32857,
											"end": 33157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32950,
											"end": 32966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33144,
											"end": 33148,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 33126,
											"end": 33140,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33126,
											"end": 33140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33082,
											"end": 33089,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33090,
											"end": 33097,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33082,
											"end": 33098,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33082,
											"end": 33111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33082,
											"end": 33111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33082,
											"end": 33111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33028,
											"end": 33035,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33036,
											"end": 33043,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33028,
											"end": 33044,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33028,
											"end": 33061,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33028,
											"end": 33061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33028,
											"end": 33061,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33010,
											"end": 33025,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 33010,
											"end": 33061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 33010,
											"end": 33061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33010,
											"end": 33061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33010,
											"end": 33061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 33010,
											"end": 33061,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33010,
											"end": 33061,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 33010,
											"end": 33061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33009,
											"end": 33111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 33009,
											"end": 33111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33009,
											"end": 33111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33009,
											"end": 33111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 33009,
											"end": 33111,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33009,
											"end": 33111,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 33009,
											"end": 33111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32993,
											"end": 33140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 32993,
											"end": 33140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32993,
											"end": 33140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32993,
											"end": 33140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 32993,
											"end": 33140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32993,
											"end": 33140,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 32993,
											"end": 33140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 32992,
											"end": 33148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 32992,
											"end": 33148,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32992,
											"end": 33148,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 32992,
											"end": 33148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32984,
											"end": 33149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32984,
											"end": 33149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32857,
											"end": 33157,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19603,
											"end": 19816,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 19603,
											"end": 19816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18664,
											"end": 18665,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19786,
											"end": 19793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19786,
											"end": 19808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19786,
											"end": 19808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19786,
											"end": 19808,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19786,
											"end": 19808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19816,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28446,
											"end": 28578,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 28446,
											"end": 28578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28521,
											"end": 28533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 28521,
											"end": 28531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 28521,
											"end": 28533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28521,
											"end": 28533,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 28521,
											"end": 28533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28510,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28510,
											"end": 28533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28510,
											"end": 28517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 28510,
											"end": 28515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 28510,
											"end": 28517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28510,
											"end": 28517,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 28510,
											"end": 28517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28510,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28510,
											"end": 28533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28510,
											"end": 28533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28446,
											"end": 28578,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29548,
											"end": 29739,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29548,
											"end": 29739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29622,
											"end": 29638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29622,
											"end": 29647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29622,
											"end": 29647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29667,
											"end": 29675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29664,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29658,
											"end": 29664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29712,
											"end": 29720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 29611,
											"end": 29739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29548,
											"end": 29739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29548,
											"end": 29739,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15568,
											"end": 15666,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 15568,
											"end": 15666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15621,
											"end": 15628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15648,
											"end": 15658,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15641,
											"end": 15658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15641,
											"end": 15658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15666,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 246,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 234,
											"end": 247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 225,
											"end": 247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 225,
											"end": 247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 283,
											"end": 288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 314,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 314,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 387,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 431,
											"end": 434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 424,
											"end": 428,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 416,
											"end": 422,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 412,
											"end": 429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 435,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 398,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 398,
											"end": 520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 439,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 439,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 439,
											"end": 518,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 439,
											"end": 518,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 439,
											"end": 518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 398,
											"end": 520,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 398,
											"end": 520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 552,
											"end": 558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 539,
											"end": 559,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 529,
											"end": 559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 529,
											"end": 559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 574,
											"end": 580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 571,
											"end": 601,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 568,
											"end": 685,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 568,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 568,
											"end": 685,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 604,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 604,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 604,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 604,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 604,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 685,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 568,
											"end": 685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 718,
											"end": 722,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 716,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 706,
											"end": 723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 694,
											"end": 723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 694,
											"end": 723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 764,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 752,
											"end": 769,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 742,
											"end": 750,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 738,
											"end": 770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 735,
											"end": 776,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 732,
											"end": 860,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 732,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 732,
											"end": 860,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 779,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 779,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 779,
											"end": 858,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 779,
											"end": 858,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 779,
											"end": 858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 732,
											"end": 860,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 732,
											"end": 860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 314,
											"end": 866,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 314,
											"end": 866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 314,
											"end": 866,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 314,
											"end": 866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 314,
											"end": 866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 314,
											"end": 866,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 872,
											"end": 1011,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 872,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 918,
											"end": 923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 943,
											"end": 963,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 934,
											"end": 963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 934,
											"end": 963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 999,
											"end": 1004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 972,
											"end": 1005,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 1005,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 972,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 872,
											"end": 1011,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 872,
											"end": 1011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 872,
											"end": 1011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 872,
											"end": 1011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 872,
											"end": 1011,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1017,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1017,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1127,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1113,
											"end": 1122,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1128,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1212,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1093,
											"end": 1212,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1131,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1131,
											"end": 1210,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1131,
											"end": 1210,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1131,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1093,
											"end": 1212,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1093,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1321,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1310,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1276,
											"end": 1329,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1276,
											"end": 1329,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1276,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1346,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1346,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1352,
											"end": 1703,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1352,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1459,
											"end": 1468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1469,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1474,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1558,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1439,
											"end": 1558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1477,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1477,
											"end": 1556,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1477,
											"end": 1556,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1477,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1558,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1439,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1678,
											"end": 1685,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1667,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1622,
											"end": 1686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1622,
											"end": 1686,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1622,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1686,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1686,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1568,
											"end": 1696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1703,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1703,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1709,
											"end": 2672,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1709,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1890,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1873,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1885,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1891,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1975,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1855,
											"end": 1975,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1894,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1894,
											"end": 1973,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 1973,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1894,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1975,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1855,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2084,
											"end": 2091,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2073,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2039,
											"end": 2092,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2092,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2039,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2092,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2212,
											"end": 2219,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2167,
											"end": 2220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2167,
											"end": 2220,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2167,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2220,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2295,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2340,
											"end": 2347,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2329,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2295,
											"end": 2348,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2295,
											"end": 2348,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2295,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2348,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2429,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2474,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2448,
											"end": 2454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2475,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2559,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2442,
											"end": 2559,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2442,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 2647,
											"end": 2654,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 2644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2636,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2591,
											"end": 2655,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2591,
											"end": 2655,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 2591,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2655,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2655,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 2672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 2672,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 2672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 2672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 2672,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 2672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 2672,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 2672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 2672,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2678,
											"end": 3007,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2678,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2788,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2774,
											"end": 2783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2772,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2784,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2789,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2873,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2754,
											"end": 2873,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2792,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2792,
											"end": 2871,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2792,
											"end": 2871,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2792,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2873,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2754,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2982,
											"end": 2989,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 2979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2971,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 2980,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2937,
											"end": 2990,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2937,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2937,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 3000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 3007,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 3007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 3007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 3007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 3007,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3013,
											"end": 3131,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3013,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3118,
											"end": 3123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3131,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3137,
											"end": 3294,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3137,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3262,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3280,
											"end": 3285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3262,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3262,
											"end": 3286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3262,
											"end": 3286,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3262,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3242,
											"end": 3287,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3242,
											"end": 3287,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3242,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3237,
											"end": 3240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3294,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3300,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3300,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3396,
											"end": 3401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3381,
											"end": 3402,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3381,
											"end": 3402,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3381,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3409,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3415,
											"end": 3530,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3415,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3500,
											"end": 3523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3500,
											"end": 3523,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3500,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3498,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3530,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3558,
											"end": 3872,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3558,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3774,
											"end": 3780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3769,
											"end": 3772,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3693,
											"end": 3781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3693,
											"end": 3781,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3693,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3781,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3791,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3827,
											"end": 3833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3825,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3791,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3791,
											"end": 3834,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3791,
											"end": 3834,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3791,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3857,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3843,
											"end": 3866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3843,
											"end": 3866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3872,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3872,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3872,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3878,
											"end": 4037,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3878,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 4024,
											"end": 4029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3979,
											"end": 4030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3979,
											"end": 4030,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3979,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3967,
											"end": 4031,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 4037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 4037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3878,
											"end": 4037,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4043,
											"end": 4204,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4043,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 4191,
											"end": 4196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4145,
											"end": 4197,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4145,
											"end": 4197,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 4145,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4133,
											"end": 4198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4204,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4210,
											"end": 4576,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4210,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4373,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4437,
											"end": 4439,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4432,
											"end": 4435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4373,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4373,
											"end": 4440,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4373,
											"end": 4440,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4373,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4538,
											"end": 4541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4449,
											"end": 4542,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4449,
											"end": 4542,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4449,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4567,
											"end": 4569,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4562,
											"end": 4565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4570,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4576,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4582,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 4582,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 4809,
											"end": 4811,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4804,
											"end": 4807,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4745,
											"end": 4812,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4745,
											"end": 4812,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 4745,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4738,
											"end": 4812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4738,
											"end": 4812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4910,
											"end": 4913,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 4821,
											"end": 4914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4821,
											"end": 4914,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4821,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4939,
											"end": 4941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4934,
											"end": 4937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4948,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4954,
											"end": 5320,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 4954,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 5181,
											"end": 5183,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5176,
											"end": 5179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5117,
											"end": 5184,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5117,
											"end": 5184,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 5117,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5110,
											"end": 5184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 5282,
											"end": 5285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5193,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 5193,
											"end": 5286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5193,
											"end": 5286,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 5193,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5306,
											"end": 5309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5314,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4954,
											"end": 5320,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4954,
											"end": 5320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4954,
											"end": 5320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4954,
											"end": 5320,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5326,
											"end": 5692,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 5326,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5548,
											"end": 5551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5489,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5489,
											"end": 5556,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5489,
											"end": 5556,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 5489,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5482,
											"end": 5556,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5482,
											"end": 5556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5565,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 5654,
											"end": 5657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5565,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 5565,
											"end": 5658,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5565,
											"end": 5658,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 5565,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5683,
											"end": 5685,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5678,
											"end": 5681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5692,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5692,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5698,
											"end": 6064,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 5698,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5840,
											"end": 5843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5861,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 5925,
											"end": 5927,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5920,
											"end": 5923,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5861,
											"end": 5928,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5861,
											"end": 5928,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 5861,
											"end": 5928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 5928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 5928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5937,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6026,
											"end": 6029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5937,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 5937,
											"end": 6030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5937,
											"end": 6030,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 5937,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6055,
											"end": 6057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6050,
											"end": 6053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6039,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6039,
											"end": 6058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 6064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 6064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 6064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 6064,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6070,
											"end": 6188,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 6070,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 6175,
											"end": 6180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 6157,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6145,
											"end": 6182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6188,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6194,
											"end": 6351,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 6194,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6299,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 6319,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 6337,
											"end": 6342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 6319,
											"end": 6343,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6319,
											"end": 6343,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 6319,
											"end": 6343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6299,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 6299,
											"end": 6344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6299,
											"end": 6344,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 6299,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6351,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6357,
											"end": 7071,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6357,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6596,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 6667,
											"end": 6670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6658,
											"end": 6664,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6596,
											"end": 6671,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6596,
											"end": 6671,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 6596,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6696,
											"end": 6698,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6691,
											"end": 6694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6777,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 6709,
											"end": 6784,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6709,
											"end": 6784,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 6709,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6811,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6804,
											"end": 6807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6793,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6822,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 6893,
											"end": 6896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6884,
											"end": 6890,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6822,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 6822,
											"end": 6897,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6822,
											"end": 6897,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 6822,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6917,
											"end": 6920,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6913,
											"end": 6925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 6925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 6925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6942,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 7041,
											"end": 7044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7032,
											"end": 7038,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7030,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6942,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6942,
											"end": 7045,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6942,
											"end": 7045,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 6942,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6935,
											"end": 7045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6935,
											"end": 7045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7062,
											"end": 7065,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7055,
											"end": 7065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 7071,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 7071,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 7071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 7071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 7071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 7071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 7071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 7071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 7071,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7077,
											"end": 7299,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 7077,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7208,
											"end": 7210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7197,
											"end": 7206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 7289,
											"end": 7290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7278,
											"end": 7287,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7274,
											"end": 7291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7221,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 7221,
											"end": 7292,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7221,
											"end": 7292,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 7221,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7299,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7299,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7454,
											"end": 7458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7494,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7481,
											"end": 7490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7469,
											"end": 7495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7469,
											"end": 7495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 7573,
											"end": 7574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7571,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7558,
											"end": 7575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 7505,
											"end": 7576,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7505,
											"end": 7576,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 7505,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 7654,
											"end": 7656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7643,
											"end": 7652,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7639,
											"end": 7657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 7586,
											"end": 7658,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7586,
											"end": 7658,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 7586,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7668,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 7736,
											"end": 7738,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7725,
											"end": 7734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7721,
											"end": 7739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7712,
											"end": 7718,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7668,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7668,
											"end": 7740,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7668,
											"end": 7740,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 7668,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7747,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7753,
											"end": 7963,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 7753,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 7953,
											"end": 7954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7951,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7938,
											"end": 7955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 7891,
											"end": 7956,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7891,
											"end": 7956,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 7891,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7753,
											"end": 7963,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7753,
											"end": 7963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7753,
											"end": 7963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7753,
											"end": 7963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7753,
											"end": 7963,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7969,
											"end": 8187,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7969,
											"end": 8187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8087,
											"end": 8096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8083,
											"end": 8101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8075,
											"end": 8101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8075,
											"end": 8101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8111,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 8177,
											"end": 8178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8175,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8162,
											"end": 8179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8153,
											"end": 8159,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8111,
											"end": 8180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8111,
											"end": 8180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8111,
											"end": 8180,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 8111,
											"end": 8180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7969,
											"end": 8187,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7969,
											"end": 8187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7969,
											"end": 8187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7969,
											"end": 8187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7969,
											"end": 8187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8193,
											"end": 8443,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 8193,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8300,
											"end": 8304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 8340,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8327,
											"end": 8336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8323,
											"end": 8341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8315,
											"end": 8341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8315,
											"end": 8341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8433,
											"end": 8434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8422,
											"end": 8431,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8409,
											"end": 8415,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 8351,
											"end": 8436,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8351,
											"end": 8436,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8351,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8193,
											"end": 8443,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8193,
											"end": 8443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8193,
											"end": 8443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8193,
											"end": 8443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8193,
											"end": 8443,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8449,
											"end": 8701,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 8449,
											"end": 8701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8595,
											"end": 8597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8584,
											"end": 8593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8580,
											"end": 8598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8572,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8572,
											"end": 8598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 8691,
											"end": 8692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8680,
											"end": 8689,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8676,
											"end": 8693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 8608,
											"end": 8694,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8608,
											"end": 8694,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 8608,
											"end": 8694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8449,
											"end": 8701,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8449,
											"end": 8701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8449,
											"end": 8701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8449,
											"end": 8701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8449,
											"end": 8701,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8707,
											"end": 9126,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 8707,
											"end": 9126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8873,
											"end": 8877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8911,
											"end": 8913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8900,
											"end": 8909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8896,
											"end": 8914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8888,
											"end": 8914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8888,
											"end": 8914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8960,
											"end": 8969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8954,
											"end": 8958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8950,
											"end": 8970,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8935,
											"end": 8944,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8931,
											"end": 8948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8924,
											"end": 8971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8988,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 9114,
											"end": 9118,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8988,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 8988,
											"end": 9119,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8988,
											"end": 9119,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 8988,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8980,
											"end": 9119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8980,
											"end": 9119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 9126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 9126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 9126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 9126,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9132,
											"end": 9551,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 9132,
											"end": 9551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9298,
											"end": 9302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9336,
											"end": 9338,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9325,
											"end": 9334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9321,
											"end": 9339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9313,
											"end": 9339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9313,
											"end": 9339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9385,
											"end": 9394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9379,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9395,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9371,
											"end": 9372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9360,
											"end": 9369,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 9539,
											"end": 9543,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9413,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 9413,
											"end": 9544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9413,
											"end": 9544,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 9413,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9405,
											"end": 9544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9405,
											"end": 9544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 9551,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 9551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 9551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 9551,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9557,
											"end": 9976,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 9557,
											"end": 9976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9723,
											"end": 9727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9761,
											"end": 9763,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9738,
											"end": 9764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9738,
											"end": 9764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9810,
											"end": 9819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9804,
											"end": 9808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9800,
											"end": 9820,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9796,
											"end": 9797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9785,
											"end": 9794,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9774,
											"end": 9821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9838,
											"end": 9969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 9964,
											"end": 9968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9838,
											"end": 9969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 9838,
											"end": 9969,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9838,
											"end": 9969,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 9838,
											"end": 9969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9557,
											"end": 9976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9557,
											"end": 9976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9557,
											"end": 9976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9557,
											"end": 9976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9982,
											"end": 10401,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 9982,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10148,
											"end": 10152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10188,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10175,
											"end": 10184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10171,
											"end": 10189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10163,
											"end": 10189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10235,
											"end": 10244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10229,
											"end": 10233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10221,
											"end": 10222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10210,
											"end": 10219,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10206,
											"end": 10223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10263,
											"end": 10394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 10389,
											"end": 10393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10263,
											"end": 10394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 10263,
											"end": 10394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10263,
											"end": 10394,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 10263,
											"end": 10394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9982,
											"end": 10401,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9982,
											"end": 10401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9982,
											"end": 10401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9982,
											"end": 10401,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10407,
											"end": 10826,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 10407,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10573,
											"end": 10577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10611,
											"end": 10613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10600,
											"end": 10609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10596,
											"end": 10614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10588,
											"end": 10614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10588,
											"end": 10614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10660,
											"end": 10669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10654,
											"end": 10658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10650,
											"end": 10670,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10646,
											"end": 10647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10644,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10631,
											"end": 10648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10624,
											"end": 10671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 10814,
											"end": 10818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 10688,
											"end": 10819,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10688,
											"end": 10819,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 10688,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10407,
											"end": 10826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10407,
											"end": 10826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10407,
											"end": 10826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10407,
											"end": 10826,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10832,
											"end": 11054,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10832,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10925,
											"end": 10929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 10965,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10952,
											"end": 10961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10948,
											"end": 10966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10940,
											"end": 10966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10940,
											"end": 10966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10976,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 11044,
											"end": 11045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11033,
											"end": 11042,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11029,
											"end": 11046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11026,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10976,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 10976,
											"end": 11047,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10976,
											"end": 11047,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 10976,
											"end": 11047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 11054,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 11054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 11054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 11054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 11054,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11060,
											"end": 11502,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11060,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11209,
											"end": 11213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11247,
											"end": 11249,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11236,
											"end": 11245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11232,
											"end": 11250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11224,
											"end": 11250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11224,
											"end": 11250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11260,
											"end": 11331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 11328,
											"end": 11329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11317,
											"end": 11326,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11313,
											"end": 11330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11304,
											"end": 11310,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11260,
											"end": 11331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 11260,
											"end": 11331,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11260,
											"end": 11331,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 11260,
											"end": 11331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11341,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 11409,
											"end": 11411,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11398,
											"end": 11407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11394,
											"end": 11412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11385,
											"end": 11391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11341,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 11341,
											"end": 11413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11341,
											"end": 11413,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 11341,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 11491,
											"end": 11493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11480,
											"end": 11489,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11467,
											"end": 11473,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 11423,
											"end": 11495,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11423,
											"end": 11495,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 11423,
											"end": 11495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11502,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11502,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11502,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11589,
											"end": 11736,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 11589,
											"end": 11736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11690,
											"end": 11701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11727,
											"end": 11730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11712,
											"end": 11730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11736,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11589,
											"end": 11736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11742,
											"end": 11911,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 11742,
											"end": 11911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11826,
											"end": 11837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11860,
											"end": 11866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11855,
											"end": 11858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11848,
											"end": 11867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11900,
											"end": 11904,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11895,
											"end": 11898,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11891,
											"end": 11905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11876,
											"end": 11905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11876,
											"end": 11905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11911,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11911,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11917,
											"end": 12222,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 11917,
											"end": 12222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11957,
											"end": 11960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11976,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 11994,
											"end": 11995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11976,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 11976,
											"end": 11996,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11976,
											"end": 11996,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 11976,
											"end": 11996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11971,
											"end": 11996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11971,
											"end": 11996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12010,
											"end": 12030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 12028,
											"end": 12029,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12010,
											"end": 12030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 12010,
											"end": 12030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12010,
											"end": 12030,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 12010,
											"end": 12030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12030,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12096,
											"end": 12162,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12092,
											"end": 12166,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12089,
											"end": 12090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12086,
											"end": 12167,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12083,
											"end": 12190,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12083,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12083,
											"end": 12190,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 12170,
											"end": 12188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12083,
											"end": 12190,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 12083,
											"end": 12190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 12215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12211,
											"end": 12212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12207,
											"end": 12216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12200,
											"end": 12216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12200,
											"end": 12216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11917,
											"end": 12222,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11917,
											"end": 12222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11917,
											"end": 12222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11917,
											"end": 12222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11917,
											"end": 12222,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12228,
											"end": 12413,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 12228,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12268,
											"end": 12269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12285,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12285,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 12285,
											"end": 12305,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12285,
											"end": 12305,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 12285,
											"end": 12305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12280,
											"end": 12305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12280,
											"end": 12305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12319,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 12337,
											"end": 12338,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12319,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 12319,
											"end": 12339,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12319,
											"end": 12339,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 12319,
											"end": 12339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12339,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12314,
											"end": 12339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12358,
											"end": 12359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12348,
											"end": 12383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 12348,
											"end": 12383,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12363,
											"end": 12381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 12363,
											"end": 12381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 12363,
											"end": 12381,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12363,
											"end": 12381,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 12363,
											"end": 12381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12348,
											"end": 12383,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 12348,
											"end": 12383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12405,
											"end": 12406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12402,
											"end": 12403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12398,
											"end": 12407,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12413,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12413,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12419,
											"end": 12767,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 12419,
											"end": 12767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12459,
											"end": 12466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12482,
											"end": 12502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 12500,
											"end": 12501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12482,
											"end": 12502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 12482,
											"end": 12502,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12482,
											"end": 12502,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 12482,
											"end": 12502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12477,
											"end": 12502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12477,
											"end": 12502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12516,
											"end": 12536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 12534,
											"end": 12535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12516,
											"end": 12536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 12516,
											"end": 12536,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12516,
											"end": 12536,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 12516,
											"end": 12536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12704,
											"end": 12705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12636,
											"end": 12702,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12632,
											"end": 12706,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12629,
											"end": 12630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12626,
											"end": 12707,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12621,
											"end": 12622,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12614,
											"end": 12623,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12607,
											"end": 12624,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12603,
											"end": 12708,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12600,
											"end": 12731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12600,
											"end": 12731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 12600,
											"end": 12731,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12711,
											"end": 12729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 12711,
											"end": 12729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 12711,
											"end": 12729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12711,
											"end": 12729,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 12711,
											"end": 12729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12600,
											"end": 12731,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 12600,
											"end": 12731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12759,
											"end": 12760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12756,
											"end": 12757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12752,
											"end": 12761,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 12761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12741,
											"end": 12761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12419,
											"end": 12767,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12419,
											"end": 12767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12419,
											"end": 12767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12419,
											"end": 12767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12419,
											"end": 12767,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12773,
											"end": 12964,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 12773,
											"end": 12964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12813,
											"end": 12817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 12851,
											"end": 12852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12828,
											"end": 12853,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12828,
											"end": 12853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12867,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 12885,
											"end": 12886,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12867,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 12867,
											"end": 12887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12867,
											"end": 12887,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 12867,
											"end": 12887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12862,
											"end": 12887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12862,
											"end": 12887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12903,
											"end": 12904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12900,
											"end": 12908,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12897,
											"end": 12931,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12897,
											"end": 12931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 12897,
											"end": 12931,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 12911,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12897,
											"end": 12931,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 12897,
											"end": 12931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12956,
											"end": 12957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12953,
											"end": 12954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12949,
											"end": 12958,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12941,
											"end": 12958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12941,
											"end": 12958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 12964,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 12964,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 12964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 12964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12773,
											"end": 12964,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12970,
											"end": 13066,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 12970,
											"end": 13066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13007,
											"end": 13014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13036,
											"end": 13060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 13054,
											"end": 13059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13036,
											"end": 13060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 13036,
											"end": 13060,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13036,
											"end": 13060,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 13036,
											"end": 13060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13025,
											"end": 13060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13025,
											"end": 13060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12970,
											"end": 13066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12970,
											"end": 13066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12970,
											"end": 13066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12970,
											"end": 13066,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13072,
											"end": 13162,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 13072,
											"end": 13162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13106,
											"end": 13113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13149,
											"end": 13154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13142,
											"end": 13155,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13135,
											"end": 13156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13124,
											"end": 13156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13124,
											"end": 13156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13072,
											"end": 13162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13072,
											"end": 13162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13072,
											"end": 13162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13072,
											"end": 13162,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13168,
											"end": 13317,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 13168,
											"end": 13317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13204,
											"end": 13211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13244,
											"end": 13310,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13237,
											"end": 13242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13233,
											"end": 13311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13222,
											"end": 13311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13222,
											"end": 13311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13168,
											"end": 13317,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13168,
											"end": 13317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13168,
											"end": 13317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13168,
											"end": 13317,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13323,
											"end": 13449,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 13323,
											"end": 13449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13360,
											"end": 13367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13400,
											"end": 13442,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13393,
											"end": 13398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13389,
											"end": 13443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13378,
											"end": 13443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13378,
											"end": 13443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13323,
											"end": 13449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13323,
											"end": 13449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13323,
											"end": 13449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13323,
											"end": 13449,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13455,
											"end": 13532,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 13455,
											"end": 13532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13492,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13521,
											"end": 13526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13455,
											"end": 13532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13455,
											"end": 13532,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13455,
											"end": 13532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13455,
											"end": 13532,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13538,
											"end": 13678,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 13538,
											"end": 13678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13602,
											"end": 13611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13635,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 13666,
											"end": 13671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 13635,
											"end": 13672,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13635,
											"end": 13672,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 13635,
											"end": 13672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13622,
											"end": 13672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13622,
											"end": 13672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13538,
											"end": 13678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13538,
											"end": 13678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13538,
											"end": 13678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13538,
											"end": 13678,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13684,
											"end": 13825,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 13684,
											"end": 13825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13749,
											"end": 13758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13782,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 13813,
											"end": 13818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13782,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 13782,
											"end": 13819,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13782,
											"end": 13819,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 13782,
											"end": 13819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13769,
											"end": 13819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13769,
											"end": 13819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13825,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13831,
											"end": 13957,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 13831,
											"end": 13957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13881,
											"end": 13890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13914,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 13945,
											"end": 13950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 13914,
											"end": 13951,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13914,
											"end": 13951,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 13914,
											"end": 13951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13901,
											"end": 13951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13901,
											"end": 13951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13831,
											"end": 13957,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13831,
											"end": 13957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13831,
											"end": 13957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13831,
											"end": 13957,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13963,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 13963,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14013,
											"end": 14022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14046,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14046,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 14046,
											"end": 14070,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14046,
											"end": 14070,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 14046,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14033,
											"end": 14070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14033,
											"end": 14070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14076,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14082,
											"end": 14236,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 14082,
											"end": 14236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14166,
											"end": 14172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14161,
											"end": 14164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14156,
											"end": 14159,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14173,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 14228,
											"end": 14229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14219,
											"end": 14225,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14214,
											"end": 14217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14210,
											"end": 14226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14203,
											"end": 14230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14082,
											"end": 14236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14082,
											"end": 14236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14082,
											"end": 14236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14082,
											"end": 14236,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14242,
											"end": 14413,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 14242,
											"end": 14413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14281,
											"end": 14284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14304,
											"end": 14328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 14322,
											"end": 14327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14304,
											"end": 14328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 14304,
											"end": 14328,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14304,
											"end": 14328,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 14304,
											"end": 14328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14295,
											"end": 14328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14295,
											"end": 14328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14350,
											"end": 14354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14343,
											"end": 14348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14340,
											"end": 14355,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14337,
											"end": 14378,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14337,
											"end": 14378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 14337,
											"end": 14378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14358,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 14358,
											"end": 14376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 14358,
											"end": 14376,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14358,
											"end": 14376,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 14358,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14337,
											"end": 14378,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 14337,
											"end": 14378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14405,
											"end": 14406,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14398,
											"end": 14403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14394,
											"end": 14407,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14387,
											"end": 14407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14387,
											"end": 14407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14242,
											"end": 14413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14242,
											"end": 14413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14242,
											"end": 14413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14242,
											"end": 14413,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14419,
											"end": 14652,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 14419,
											"end": 14652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14458,
											"end": 14461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14481,
											"end": 14505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 14499,
											"end": 14504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14481,
											"end": 14505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 14481,
											"end": 14505,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14481,
											"end": 14505,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 14481,
											"end": 14505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14472,
											"end": 14505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14472,
											"end": 14505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14527,
											"end": 14593,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14520,
											"end": 14525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14517,
											"end": 14594,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14514,
											"end": 14617,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14514,
											"end": 14617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 14514,
											"end": 14617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14597,
											"end": 14615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 14597,
											"end": 14615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 14597,
											"end": 14615,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14597,
											"end": 14615,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 14597,
											"end": 14615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14514,
											"end": 14617,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 14514,
											"end": 14617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14644,
											"end": 14645,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14637,
											"end": 14642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14633,
											"end": 14646,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14626,
											"end": 14646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14626,
											"end": 14646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14419,
											"end": 14652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14419,
											"end": 14652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14419,
											"end": 14652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14419,
											"end": 14652,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14658,
											"end": 14758,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 14658,
											"end": 14758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14697,
											"end": 14704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14726,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 14746,
											"end": 14751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14726,
											"end": 14752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 14726,
											"end": 14752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14726,
											"end": 14752,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 14726,
											"end": 14752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14715,
											"end": 14752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14715,
											"end": 14752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14658,
											"end": 14758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14658,
											"end": 14758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14658,
											"end": 14758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14658,
											"end": 14758,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14764,
											"end": 14858,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 14764,
											"end": 14858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14803,
											"end": 14810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14832,
											"end": 14852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 14846,
											"end": 14851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14832,
											"end": 14852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 14832,
											"end": 14852,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14832,
											"end": 14852,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 14832,
											"end": 14852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14821,
											"end": 14852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14821,
											"end": 14852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14764,
											"end": 14858,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14764,
											"end": 14858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14764,
											"end": 14858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14764,
											"end": 14858,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14903,
											"end": 14910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14932,
											"end": 14937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14921,
											"end": 14937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14921,
											"end": 14937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 14943,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14949,
											"end": 15129,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 14949,
											"end": 15129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14997,
											"end": 15074,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14994,
											"end": 14995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14987,
											"end": 15075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15094,
											"end": 15098,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 15091,
											"end": 15092,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15084,
											"end": 15099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15118,
											"end": 15122,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15115,
											"end": 15116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15108,
											"end": 15123,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15135,
											"end": 15315,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 15135,
											"end": 15315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15183,
											"end": 15260,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15180,
											"end": 15181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15173,
											"end": 15261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15280,
											"end": 15284,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 15277,
											"end": 15278,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15270,
											"end": 15285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15304,
											"end": 15308,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15301,
											"end": 15302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15294,
											"end": 15309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15321,
											"end": 15501,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 15321,
											"end": 15501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15369,
											"end": 15446,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15366,
											"end": 15367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15359,
											"end": 15447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15466,
											"end": 15470,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 15463,
											"end": 15464,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15456,
											"end": 15471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15490,
											"end": 15494,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15487,
											"end": 15488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15480,
											"end": 15495,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15507,
											"end": 15624,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 15507,
											"end": 15624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 15617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15613,
											"end": 15614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15606,
											"end": 15618,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15630,
											"end": 15747,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 15630,
											"end": 15747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15739,
											"end": 15740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15736,
											"end": 15737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15729,
											"end": 15741,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15753,
											"end": 15870,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 15753,
											"end": 15870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15862,
											"end": 15863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15859,
											"end": 15860,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15852,
											"end": 15864,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 15993,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 15876,
											"end": 15993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15985,
											"end": 15986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15982,
											"end": 15983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15975,
											"end": 15987,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15999,
											"end": 16116,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 15999,
											"end": 16116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16108,
											"end": 16109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16105,
											"end": 16106,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16098,
											"end": 16110,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16122,
											"end": 16216,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 16122,
											"end": 16216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16155,
											"end": 16163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16203,
											"end": 16208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16199,
											"end": 16201,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16195,
											"end": 16209,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 16174,
											"end": 16209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16174,
											"end": 16209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16122,
											"end": 16216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16122,
											"end": 16216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16122,
											"end": 16216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16122,
											"end": 16216,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16222,
											"end": 16397,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 16222,
											"end": 16397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16362,
											"end": 16389,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000"
										},
										{
											"begin": 16358,
											"end": 16359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16350,
											"end": 16356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16346,
											"end": 16360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16339,
											"end": 16390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16222,
											"end": 16397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16222,
											"end": 16397,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16403,
											"end": 16628,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 16403,
											"end": 16628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16577,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 16539,
											"end": 16540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16531,
											"end": 16537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16527,
											"end": 16541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16520,
											"end": 16578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16612,
											"end": 16620,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16607,
											"end": 16609,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16599,
											"end": 16605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16595,
											"end": 16610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16588,
											"end": 16621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16403,
											"end": 16628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16403,
											"end": 16628,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16634,
											"end": 16809,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 16634,
											"end": 16809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16774,
											"end": 16801,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F20746F6B656E73207374616B656400000000000000"
										},
										{
											"begin": 16770,
											"end": 16771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16762,
											"end": 16768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16758,
											"end": 16772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16751,
											"end": 16802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16634,
											"end": 16809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16634,
											"end": 16809,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16815,
											"end": 16997,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 16815,
											"end": 16997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16955,
											"end": 16989,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 16951,
											"end": 16952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16943,
											"end": 16949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16939,
											"end": 16953,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16932,
											"end": 16990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16815,
											"end": 16997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16815,
											"end": 16997,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17003,
											"end": 17184,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 17003,
											"end": 17184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17143,
											"end": 17176,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 17139,
											"end": 17140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17131,
											"end": 17137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17127,
											"end": 17141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17120,
											"end": 17177,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17003,
											"end": 17184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17003,
											"end": 17184,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17190,
											"end": 17312,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 17190,
											"end": 17312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 17281,
											"end": 17286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17263,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 17263,
											"end": 17287,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17263,
											"end": 17287,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 17263,
											"end": 17287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17256,
											"end": 17261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17253,
											"end": 17288,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17243,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 17243,
											"end": 17306,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17302,
											"end": 17303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17299,
											"end": 17300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17292,
											"end": 17304,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17243,
											"end": 17306,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 17243,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17312,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17318,
											"end": 17440,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 17318,
											"end": 17440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17391,
											"end": 17415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 17409,
											"end": 17414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17391,
											"end": 17415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 17391,
											"end": 17415,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17391,
											"end": 17415,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 17391,
											"end": 17415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17384,
											"end": 17389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17416,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17371,
											"end": 17434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 17371,
											"end": 17434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17427,
											"end": 17428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17420,
											"end": 17432,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17371,
											"end": 17434,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 17371,
											"end": 17434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17318,
											"end": 17440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17318,
											"end": 17440,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"nftCollection()": "6588103b",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"rewardsToken()": "d1af0c7d",
							"stake(uint256)": "a694fc3a",
							"stakerAddress(uint256)": "94067045",
							"stakers(address)": "9168ae72",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_nftCollection\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsPerHour\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"nftCollection\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"Farm\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0x7d053ca7093ca1c4a4bc4733a112fe2677b17015df67aeca0fc9844ff731e2b7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7d7e603016d38044798ac40ccdf7caf6507d98524f09af3fd0c7f7f0b23333cb\",\"dweb:/ipfs/QmPaF8Md1RPY3wcetPQseLKYpfEsgYtbADAaacfmBR8KN6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 585,
								"contract": "Farm.sol:Farm",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 487,
								"contract": "Farm.sol:Farm",
								"label": "_paused",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 1038,
								"contract": "Farm.sol:Farm",
								"label": "_owner",
								"offset": 1,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1177,
								"contract": "Farm.sol:Farm",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)454"
							},
							{
								"astId": 1180,
								"contract": "Farm.sol:Farm",
								"label": "nftCollection",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC721)138"
							},
							{
								"astId": 1183,
								"contract": "Farm.sol:Farm",
								"label": "rewardsPerHour",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1188,
								"contract": "Farm.sol:Farm",
								"label": "stakers",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Staker)1174_storage)"
							},
							{
								"astId": 1192,
								"contract": "Farm.sol:Farm",
								"label": "stakerAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(StakedToken)1163_storage)dyn_storage": {
								"base": "t_struct(StakedToken)1163_storage",
								"encoding": "dynamic_array",
								"label": "struct Farm.StakedToken[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)454": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)138": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Staker)1174_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Farm.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)1174_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_struct(StakedToken)1163_storage": {
								"encoding": "inplace",
								"label": "struct Farm.StakedToken",
								"members": [
									{
										"astId": 1160,
										"contract": "Farm.sol:Farm",
										"label": "staker",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1162,
										"contract": "Farm.sol:Farm",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Staker)1174_storage": {
								"encoding": "inplace",
								"label": "struct Farm.Staker",
								"members": [
									{
										"astId": 1165,
										"contract": "Farm.sol:Farm",
										"label": "amountStaked",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1169,
										"contract": "Farm.sol:Farm",
										"label": "stakedTokens",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(StakedToken)1163_storage)dyn_storage"
									},
									{
										"astId": 1171,
										"contract": "Farm.sol:Farm",
										"label": "timeOfLastUpdate",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1173,
										"contract": "Farm.sol:Farm",
										"label": "unclaimedRewards",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0x7d053ca7093ca1c4a4bc4733a112fe2677b17015df67aeca0fc9844ff731e2b7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7d7e603016d38044798ac40ccdf7caf6507d98524f09af3fd0c7f7f0b23333cb\",\"dweb:/ipfs/QmPaF8Md1RPY3wcetPQseLKYpfEsgYtbADAaacfmBR8KN6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0x7d053ca7093ca1c4a4bc4733a112fe2677b17015df67aeca0fc9844ff731e2b7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7d7e603016d38044798ac40ccdf7caf6507d98524f09af3fd0c7f7f0b23333cb\",\"dweb:/ipfs/QmPaF8Md1RPY3wcetPQseLKYpfEsgYtbADAaacfmBR8KN6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0x7d053ca7093ca1c4a4bc4733a112fe2677b17015df67aeca0fc9844ff731e2b7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7d7e603016d38044798ac40ccdf7caf6507d98524f09af3fd0c7f7f0b23333cb\",\"dweb:/ipfs/QmPaF8Md1RPY3wcetPQseLKYpfEsgYtbADAaacfmBR8KN6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0x7d053ca7093ca1c4a4bc4733a112fe2677b17015df67aeca0fc9844ff731e2b7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7d7e603016d38044798ac40ccdf7caf6507d98524f09af3fd0c7f7f0b23333cb\",\"dweb:/ipfs/QmPaF8Md1RPY3wcetPQseLKYpfEsgYtbADAaacfmBR8KN6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0x7d053ca7093ca1c4a4bc4733a112fe2677b17015df67aeca0fc9844ff731e2b7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7d7e603016d38044798ac40ccdf7caf6507d98524f09af3fd0c7f7f0b23333cb\",\"dweb:/ipfs/QmPaF8Md1RPY3wcetPQseLKYpfEsgYtbADAaacfmBR8KN6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1038,
								"contract": "Farm.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0x7d053ca7093ca1c4a4bc4733a112fe2677b17015df67aeca0fc9844ff731e2b7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7d7e603016d38044798ac40ccdf7caf6507d98524f09af3fd0c7f7f0b23333cb\",\"dweb:/ipfs/QmPaF8Md1RPY3wcetPQseLKYpfEsgYtbADAaacfmBR8KN6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 487,
								"contract": "Farm.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0x7d053ca7093ca1c4a4bc4733a112fe2677b17015df67aeca0fc9844ff731e2b7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7d7e603016d38044798ac40ccdf7caf6507d98524f09af3fd0c7f7f0b23333cb\",\"dweb:/ipfs/QmPaF8Md1RPY3wcetPQseLKYpfEsgYtbADAaacfmBR8KN6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 585,
								"contract": "Farm.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Farm.sol\":24546:27707  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Farm.sol\":24546:27707  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204eabd2388e95cc6917253f30011114e041e0df4c9241b80a3e17b007eb5d7de264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204eabd2388e95cc6917253f30011114e041e0df4c9241b80a3e17b007eb5d7de264736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xAB 0xD2 CODESIZE DUP15 SWAP6 0xCC PUSH10 0x17253F30011114E041E0 0xDF 0x4C SWAP3 COINBASE 0xB8 EXP RETURNDATACOPY OR 0xB0 SMOD 0xEB 0x5D PUSH30 0xE264736F6C63430008070033000000000000000000000000000000000000 ",
							"sourceMap": "24546:3161:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204eabd2388e95cc6917253f30011114e041e0df4c9241b80a3e17b007eb5d7de264736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xAB 0xD2 CODESIZE DUP15 SWAP6 0xCC PUSH10 0x17253F30011114E041E0 0xDF 0x4C SWAP3 COINBASE 0xB8 EXP RETURNDATACOPY OR 0xB0 SMOD 0xEB 0x5D PUSH30 0xE264736F6C63430008070033000000000000000000000000000000000000 ",
							"sourceMap": "24546:3161:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204eabd2388e95cc6917253f30011114e041e0df4c9241b80a3e17b007eb5d7de264736f6c63430008070033",
									".code": [
										{
											"begin": 24546,
											"end": 27707,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0x7d053ca7093ca1c4a4bc4733a112fe2677b17015df67aeca0fc9844ff731e2b7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7d7e603016d38044798ac40ccdf7caf6507d98524f09af3fd0c7f7f0b23333cb\",\"dweb:/ipfs/QmPaF8Md1RPY3wcetPQseLKYpfEsgYtbADAaacfmBR8KN6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Farm.sol\":19823:24542  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Farm.sol\":19823:24542  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208262e25d98236f2b9a68abbf9e7f04b52f3a3b3752cdea849c8bc082d19c997964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208262e25d98236f2b9a68abbf9e7f04b52f3a3b3752cdea849c8bc082d19c997964736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PUSH3 0xE25D98 0x23 PUSH16 0x2B9A68ABBF9E7F04B52F3A3B3752CDEA DUP5 SWAP13 DUP12 0xC0 DUP3 0xD1 SWAP13 SWAP10 PUSH26 0x64736F6C63430008070033000000000000000000000000000000 ",
							"sourceMap": "19823:4719:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208262e25d98236f2b9a68abbf9e7f04b52f3a3b3752cdea849c8bc082d19c997964736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PUSH3 0xE25D98 0x23 PUSH16 0x2B9A68ABBF9E7F04B52F3A3B3752CDEA DUP5 SWAP13 DUP12 0xC0 DUP3 0xD1 SWAP13 SWAP10 PUSH26 0x64736F6C63430008070033000000000000000000000000000000 ",
							"sourceMap": "19823:4719:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208262e25d98236f2b9a68abbf9e7f04b52f3a3b3752cdea849c8bc082d19c997964736f6c63430008070033",
									".code": [
										{
											"begin": 19823,
											"end": 24542,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0x7d053ca7093ca1c4a4bc4733a112fe2677b17015df67aeca0fc9844ff731e2b7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7d7e603016d38044798ac40ccdf7caf6507d98524f09af3fd0c7f7f0b23333cb\",\"dweb:/ipfs/QmPaF8Md1RPY3wcetPQseLKYpfEsgYtbADAaacfmBR8KN6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Farm.sol": {
				"ast": {
					"absolutePath": "Farm.sol",
					"exportedSymbols": {
						"Address": [
							379
						],
						"Context": [
							473
						],
						"Farm": [
							1504
						],
						"IERC165": [
							26
						],
						"IERC20": [
							454
						],
						"IERC721": [
							138
						],
						"IERC721Receiver": [
							17
						],
						"Ownable": [
							1143
						],
						"Pausable": [
							577
						],
						"ReentrancyGuard": [
							628
						],
						"SafeERC20": [
							1034
						],
						"SafeMath": [
							821
						]
					},
					"id": 1505,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "65:156:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "IERC721Receiver",
							"nameLocation": "233:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "256:501:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "772:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "807:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "799:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "834:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "826:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "857:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "849:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "890:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "875:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "875:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:113:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "920:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 13,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "920:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "919:8:0"
									},
									"scope": 17,
									"src": "763:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1505,
							"src": "223:708:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "IERC165",
							"nameLocation": "945:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "960:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1322:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1347:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1340:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 19,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1340:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:20:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1383:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1383:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:6:0"
									},
									"scope": 26,
									"src": "1313:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1505,
							"src": "935:457:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 27,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 26,
										"src": "1417:7:0"
									},
									"id": 28,
									"nodeType": "InheritanceSpecifier",
									"src": "1417:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 138,
							"linearizedBaseContracts": [
								138,
								26
							],
							"name": "IERC721",
							"nameLocation": "1406:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1432:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 37,
									"name": "Transfer",
									"nameLocation": "1534:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1559:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1543:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1581:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1565:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1601:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1585:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:67:0"
									},
									"src": "1528:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1618:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 46,
									"name": "Approval",
									"nameLocation": "1726:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1751:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1735:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1774:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1758:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1800:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1784:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1734:74:0"
									},
									"src": "1720:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1817:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 55,
									"name": "ApprovalForAll",
									"nameLocation": "1948:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1979:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1963:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2002:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1986:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2017:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "2012:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2012:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:64:0"
									},
									"src": "1942:85:0"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "2035:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 63,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2128:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2146:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2138:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:15:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "2184:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2176:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2175:17:0"
									},
									"scope": 138,
									"src": "2119:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2201:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2353:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2369:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2361:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:17:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2409:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2401:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2400:15:0"
									},
									"scope": 138,
									"src": "2344:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "2424:568:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 83,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3007:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3042:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3034:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3065:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3057:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3086:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3078:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3119:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3104:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3023:107:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:0"
									},
									"scope": 138,
									"src": "2998:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "3148:700:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3863:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3898:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3890:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3921:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3913:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3942:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3934:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3879:77:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3965:0:0"
									},
									"scope": 138,
									"src": "3854:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3974:517:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4506:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4537:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4529:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4560:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4552:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4581:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4573:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4518:77:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4604:0:0"
									},
									"scope": 138,
									"src": "4497:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "4613:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5092:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5108:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5100:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5120:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5112:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5099:29:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5137:0:0"
									},
									"scope": 138,
									"src": "5083:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5146:318:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5479:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5505:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5497:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "5520:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5515:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5515:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5496:34:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5539:0:0"
									},
									"scope": 138,
									"src": "5470:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "5548:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5708:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5728:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "5720:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:17:0"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "5760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:18:0"
									},
									"scope": 138,
									"src": "5699:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "5786:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5943:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5968:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "5960:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5983:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "5975:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:33:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "6016:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6016:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6015:6:0"
									},
									"scope": 138,
									"src": "5934:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1505,
							"src": "1396:4629:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "Address",
							"nameLocation": "6037:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "6705:356:0",
										"statements": [
											{
												"assignments": [
													147
												],
												"declarations": [
													{
														"constant": false,
														"id": 147,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "6915:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 154,
														"src": "6907:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6907:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6996:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6998:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "7018:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "7006:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7006:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6998:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 141,
														"isOffset": false,
														"isSlot": false,
														"src": "7018:7:0",
														"valueSize": 1
													},
													{
														"declaration": 147,
														"isOffset": false,
														"isSlot": false,
														"src": "6998:4:0",
														"valueSize": 1
													}
												],
												"id": 149,
												"nodeType": "InlineAssembly",
												"src": "6987:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 150,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "7045:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7052:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7045:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 145,
												"id": 153,
												"nodeType": "Return",
												"src": "7038:15:0"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "6052:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "6648:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6667:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "6659:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6658:17:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "6699:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 143,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6699:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6698:6:0"
									},
									"scope": 379,
									"src": "6639:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "8067:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 166,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8094:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$379",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$379",
																				"typeString": "library Address"
																			}
																		],
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8086:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 164,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8086:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8086:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "8086:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 169,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "8111:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8086:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8119:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8078:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8078:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "8078:73:0"
											},
											{
												"assignments": [
													175,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 175,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8248:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 188,
														"src": "8243:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 174,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8243:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 182,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8293:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 176,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "8261:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "8261:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 178,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "8284:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8261:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8261:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8242:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "8315:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8307:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8307:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "8307:78:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "7069:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "8005:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8031:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "8015:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8015:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8050:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "8042:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8014:43:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8067:0:0"
									},
									"scope": 379,
									"src": "7996:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "9243:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "9272:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 201,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "9280:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9286:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 199,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															206,
															226
														],
														"referencedDeclaration": 226,
														"src": "9259:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9259:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 198,
												"id": 204,
												"nodeType": "Return",
												"src": "9252:67:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "8401:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "9163:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9184:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "9176:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9205:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "9192:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 193,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9175:35:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "9229:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9229:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9228:14:0"
									},
									"scope": 379,
									"src": "9154:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "9674:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 219,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "9714:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 220,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "9722:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9728:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 222,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "9731:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 218,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															246,
															296
														],
														"referencedDeclaration": 296,
														"src": "9692:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9692:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 217,
												"id": 224,
												"nodeType": "Return",
												"src": "9685:59:0"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "9335:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "9566:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9587:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "9579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9579:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9608:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "9595:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 210,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9595:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9628:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "9614:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 212,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9614:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9578:63:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "9660:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 215,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9660:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9659:14:0"
									},
									"scope": 379,
									"src": "9557:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "10240:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "10280:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 240,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "10288:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 241,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "10294:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10301:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 238,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															246,
															296
														],
														"referencedDeclaration": 296,
														"src": "10258:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10258:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 237,
												"id": 244,
												"nodeType": "Return",
												"src": "10251:94:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "9760:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "10136:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10166:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "10158:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10187:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "10174:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10174:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10201:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "10193:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10157:50:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "10226:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10226:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10225:14:0"
									},
									"scope": 379,
									"src": "10127:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "10750:389:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 263,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10777:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$379",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$379",
																				"typeString": "library Address"
																			}
																		],
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10769:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 261,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10769:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10769:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "10769:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 266,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "10794:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10769:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10801:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10761:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "10761:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 273,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "10872:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 272,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "10861:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10861:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10881:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10853:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10853:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "10853:60:0"
											},
											{
												"assignments": [
													279,
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 279,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10992:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 295,
														"src": "10987:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 278,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10987:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "11014:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 295,
														"src": "11001:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 280,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11001:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"arguments": [
														{
															"id": 286,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "11056:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 282,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "11028:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "11028:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 284,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "11048:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "11028:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11028:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10986:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "11097:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 291,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "11106:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 292,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "11118:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 289,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "11079:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11079:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 259,
												"id": 294,
												"nodeType": "Return",
												"src": "11072:59:0"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "10361:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "10618:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10648:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "10640:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10669:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "10656:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10656:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10683:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "10675:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10704:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "10690:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 254,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10690:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10639:78:0"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "10736:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 257,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10736:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10735:14:0"
									},
									"scope": 379,
									"src": "10609:530:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "11424:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "11461:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "11469:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11475:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 306,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															313,
															348
														],
														"referencedDeclaration": 348,
														"src": "11442:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11442:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 305,
												"id": 311,
												"nodeType": "Return",
												"src": "11435:80:0"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "11147:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "11333:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "11352:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11381:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "11368:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11368:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:35:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "11410:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11410:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11409:14:0"
									},
									"scope": 379,
									"src": "11324:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "11843:294:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 327,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "11873:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 326,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "11862:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11862:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11882:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 325,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11854:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11854:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "11854:67:0"
											},
											{
												"assignments": [
													333,
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 333,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12000:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "11995:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 332,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11995:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "12022:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "12009:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 334,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "12009:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"arguments": [
														{
															"id": 338,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "12054:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 336,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "12036:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "12036:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12036:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11994:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 342,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "12095:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 343,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "12104:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 344,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "12116:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 341,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "12077:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12077:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 324,
												"id": 346,
												"nodeType": "Return",
												"src": "12070:59:0"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "11531:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "11724:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11751:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11743:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11772:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11759:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11759:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11792:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11778:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11778:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11742:63:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11829:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11829:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11828:14:0"
									},
									"scope": 379,
									"src": "11715:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "12274:613:0",
										"statements": [
											{
												"condition": {
													"id": 359,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 350,
													"src": "12289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 375,
													"nodeType": "Block",
													"src": "12348:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 363,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "12434:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "12434:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12454:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12434:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 373,
																"nodeType": "Block",
																"src": "12814:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 370,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 354,
																					"src": "12840:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 369,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "12833:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12833:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 372,
																		"nodeType": "ExpressionStatement",
																		"src": "12833:20:0"
																	}
																]
															},
															"id": 374,
															"nodeType": "IfStatement",
															"src": "12430:439:0",
															"trueBody": {
																"id": 368,
																"nodeType": "Block",
																"src": "12457:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "12645:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "12668:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "12697:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "12691:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12691:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "12672:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12741:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "12745:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12737:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12737:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "12758:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "12730:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12730:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12730:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 352,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12697:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 352,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12745:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 367,
																		"nodeType": "InlineAssembly",
																		"src": "12636:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 376,
												"nodeType": "IfStatement",
												"src": "12285:595:0",
												"trueBody": {
													"id": 362,
													"nodeType": "Block",
													"src": "12298:44:0",
													"statements": [
														{
															"expression": {
																"id": 360,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "12320:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 358,
															"id": 361,
															"nodeType": "Return",
															"src": "12313:17:0"
														}
													]
												}
											}
										]
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "12154:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "12177:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "12172:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12172:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "12199:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "12186:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12186:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12225:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "12211:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 353,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12211:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12171:67:0"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "12260:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12260:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12259:14:0"
									},
									"scope": 379,
									"src": "12145:742:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1505,
							"src": "6029:6861:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 454,
							"linearizedBaseContracts": [
								454
							],
							"name": "IERC20",
							"nameLocation": "12904:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "12918:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13001:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13012:2:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "13038:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13037:9:0"
									},
									"scope": 454,
									"src": "12992:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "13055:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13144:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13162:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "13154:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13153:17:0"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "13194:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13193:9:0"
									},
									"scope": 454,
									"src": "13135:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "13211:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "13441:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "13458:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "13450:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13477:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "13469:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13449:35:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "13503:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13503:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13502:6:0"
									},
									"scope": 454,
									"src": "13432:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "13517:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "13802:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13820:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "13812:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13835:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "13827:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13811:32:0"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "13867:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13866:9:0"
									},
									"scope": 454,
									"src": "13793:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "13884:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14554:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14570:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "14562:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14587:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "14579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14561:33:0"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "14613:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14613:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14612:6:0"
									},
									"scope": 454,
									"src": "14545:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "14627:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "14946:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "14967:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "14959:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "14983:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "14975:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15002:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "14994:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14958:51:0"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "15028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15027:6:0"
									},
									"scope": 454,
									"src": "14937:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "15042:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 444,
									"name": "Transfer",
									"nameLocation": "15217:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15242:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "15226:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15264:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "15248:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15276:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "15268:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15225:57:0"
									},
									"src": "15211:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "15291:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 453,
									"name": "Approval",
									"nameLocation": "15454:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15479:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "15463:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15502:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "15486:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "15511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15462:63:0"
									},
									"src": "15448:78:0"
								}
							],
							"scope": 1505,
							"src": "12894:2635:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 473,
							"linearizedBaseContracts": [
								473
							],
							"name": "Context",
							"nameLocation": "15553:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "15630:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 459,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "15648:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "15648:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 458,
												"id": 461,
												"nodeType": "Return",
												"src": "15641:17:0"
											}
										]
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "15577:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15587:2:0"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "15621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15620:9:0"
									},
									"scope": 473,
									"src": "15568:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "15741:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 468,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "15759:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "15759:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 467,
												"id": 470,
												"nodeType": "Return",
												"src": "15752:15:0"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "15683:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15691:2:0"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "15725:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15725:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15724:16:0"
									},
									"scope": 473,
									"src": "15674:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1505,
							"src": "15535:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 474,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 473,
										"src": "15812:7:0"
									},
									"id": 475,
									"nodeType": "InheritanceSpecifier",
									"src": "15812:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 577,
							"linearizedBaseContracts": [
								577,
								473
							],
							"name": "Pausable",
							"nameLocation": "15800:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "15827:75:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 480,
									"name": "Paused",
									"nameLocation": "15914:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15929:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "15921:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15920:17:0"
									},
									"src": "15908:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "15946:72:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 485,
									"name": "Unpaused",
									"nameLocation": "16030:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16047:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "16039:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16038:17:0"
									},
									"src": "16024:32:0"
								},
								{
									"constant": false,
									"id": 487,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "16077:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 577,
									"src": "16064:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 486,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "16064:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "16182:34:0",
										"statements": [
											{
												"expression": {
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 491,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "16193:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16203:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "16193:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "16193:15:0"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "16093:69:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 496,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16179:2:0"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16182:0:0"
									},
									"scope": 577,
									"src": "16168:48:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "16436:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 499,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "16447:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16447:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "16447:19:0"
											},
											{
												"id": 502,
												"nodeType": "PlaceholderStatement",
												"src": "16477:1:0"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "16224:181:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 504,
									"name": "whenNotPaused",
									"nameLocation": "16420:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16433:2:0"
									},
									"src": "16411:75:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "16695:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 507,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "16706:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16706:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "16706:16:0"
											},
											{
												"id": 510,
												"nodeType": "PlaceholderStatement",
												"src": "16733:1:0"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "16494:173:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 512,
									"name": "whenPaused",
									"nameLocation": "16682:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16692:2:0"
									},
									"src": "16673:69:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "16895:33:0",
										"statements": [
											{
												"expression": {
													"id": 518,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 487,
													"src": "16913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "16906:14:0"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "16750:86:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "16851:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16857:2:0"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "16889:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16889:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16888:6:0"
									},
									"scope": 577,
									"src": "16842:86:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "17052:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "17071:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 526,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "17072:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17082:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17063:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17063:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "17063:38:0"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "16936:59:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "17010:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17027:2:0"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17052:0:0"
									},
									"scope": 577,
									"src": "17001:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "17234:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 538,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "17253:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17253:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17263:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17245:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17245:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "17245:41:0"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "17117:63:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "17195:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17209:2:0"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17234:0:0"
									},
									"scope": 577,
									"src": "17186:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "17487:69:0",
										"statements": [
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "17498:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17508:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "17498:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "17498:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 555,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "17535:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17535:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 554,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "17528:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17528:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "EmitStatement",
												"src": "17523:25:0"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "17302:130:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 547,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "17473:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "17473:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "17447:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17453:2:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17487:0:0"
									},
									"scope": 577,
									"src": "17438:118:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "17745:72:0",
										"statements": [
											{
												"expression": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 566,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "17756:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17766:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "17756:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "17756:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 571,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "17796:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17796:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 570,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "17787:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17787:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "EmitStatement",
												"src": "17782:27:0"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "17564:127:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 564,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 563,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "17734:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "17734:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "17706:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17714:2:0"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17745:0:0"
									},
									"scope": 577,
									"src": "17697:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1505,
							"src": "15782:2038:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 628,
							"linearizedBaseContracts": [
								628
							],
							"name": "ReentrancyGuard",
							"nameLocation": "17842:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 580,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "18649:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "18624:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 578,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18624:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 579,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18664:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 583,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "18697:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "18672:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 581,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18672:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 582,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18708:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 585,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "18734:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "18718:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 584,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18718:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "18764:41:0",
										"statements": [
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 588,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "18775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "18785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18775:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "18775:22:0"
											}
										]
									},
									"id": 593,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18761:2:0"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18764:0:0"
									},
									"scope": 628,
									"src": "18750:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "19215:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 596,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "19226:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19226:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "19226:21:0"
											},
											{
												"id": 599,
												"nodeType": "PlaceholderStatement",
												"src": "19258:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 600,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "19270:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19270:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "19270:20:0"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "18813:372:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 604,
									"name": "nonReentrant",
									"nameLocation": "19200:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19212:2:0"
									},
									"src": "19191:107:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "19345:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 608,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "19436:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 609,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "19447:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19436:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19457:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19428:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19428:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "19428:63:0"
											},
											{
												"expression": {
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 614,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "19569:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 615,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "19579:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19569:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "19569:18:0"
											}
										]
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "19315:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19334:2:0"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19345:0:0"
									},
									"scope": 628,
									"src": "19306:289:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "19641:175:0",
										"statements": [
											{
												"expression": {
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 622,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "19786:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 623,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "19796:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19786:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "19786:22:0"
											}
										]
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "19612:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19630:2:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19641:0:0"
									},
									"scope": 628,
									"src": "19603:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1505,
							"src": "17824:1995:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 821,
							"linearizedBaseContracts": [
								821
							],
							"name": "SafeMath",
							"nameLocation": "19831:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "20153:114:0",
										"statements": [
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "20172:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "20164:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20164:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 643,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 640,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "20176:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 641,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "20180:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20176:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20164:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 645,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "20200:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 646,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "20205:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20200:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20208:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20192:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "20192:46:0"
											},
											{
												"expression": {
													"id": 651,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 639,
													"src": "20258:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 637,
												"id": 652,
												"nodeType": "Return",
												"src": "20251:8:0"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "19847:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "20095:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20107:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "20099:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "20118:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "20110:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20098:22:0"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "20144:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20143:9:0"
									},
									"scope": 821,
									"src": "20086:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "20617:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "20639:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 666,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "20642:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20645:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 664,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															671,
															699
														],
														"referencedDeclaration": 699,
														"src": "20635:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20635:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 663,
												"id": 669,
												"nodeType": "Return",
												"src": "20628:50:0"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "20275:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "20559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20571:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "20563:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "20582:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "20574:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20562:22:0"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "20608:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20607:9:0"
									},
									"scope": 821,
									"src": "20550:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "21084:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 684,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "21103:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 685,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "21108:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21103:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 687,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "21111:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 683,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21095:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21095:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "21095:29:0"
											},
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "21143:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 698,
														"src": "21135:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21135:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 692,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "21147:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 693,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "21151:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21147:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21135:17:0"
											},
											{
												"expression": {
													"id": 696,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 691,
													"src": "21172:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 682,
												"id": 697,
												"nodeType": "Return",
												"src": "21165:8:0"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "20694:289:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "20998:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "21010:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "21002:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "21021:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "21013:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "21038:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "21024:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 677,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21001:50:0"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "21075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21074:9:0"
									},
									"scope": 821,
									"src": "20989:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "21507:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 709,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "21743:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21748:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21743:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 715,
												"nodeType": "IfStatement",
												"src": "21739:47:0",
												"trueBody": {
													"id": 714,
													"nodeType": "Block",
													"src": "21751:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21773:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 708,
															"id": 713,
															"nodeType": "Return",
															"src": "21766:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "21806:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 733,
														"src": "21798:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 716,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21798:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 721,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 718,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "21810:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 719,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "21814:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21810:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21798:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 723,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 717,
																	"src": "21834:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 724,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "21838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21834:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 726,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "21843:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21834:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21846:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21826:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "21826:56:0"
											},
											{
												"expression": {
													"id": 731,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 717,
													"src": "21902:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 708,
												"id": 732,
												"nodeType": "Return",
												"src": "21895:8:0"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "21189:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "21449:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "21461:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "21453:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "21472:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "21464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21452:22:0"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "21498:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21497:9:0"
									},
									"scope": 821,
									"src": "21440:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "22454:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 745,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "22476:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 746,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "22479:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22482:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 744,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															751,
															779
														],
														"referencedDeclaration": 779,
														"src": "22472:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22472:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 743,
												"id": 749,
												"nodeType": "Return",
												"src": "22465:46:0"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "21919:462:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "22396:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22408:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "22400:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "22419:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "22411:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22399:22:0"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "22445:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22444:9:0"
									},
									"scope": 821,
									"src": "22387:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "23110:183:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 764,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "23129:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23133:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23129:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 767,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "23136:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 763,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23121:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23121:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "23121:28:0"
											},
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "23168:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 778,
														"src": "23160:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23160:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 772,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "23172:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 773,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "23176:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23172:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23160:17:0"
											},
											{
												"expression": {
													"id": 776,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 771,
													"src": "23284:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 762,
												"id": 777,
												"nodeType": "Return",
												"src": "23277:8:0"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "22527:482:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "23024:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23036:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "23028:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "23047:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "23039:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "23064:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "23050:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 757,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23050:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23027:50:0"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "23101:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23100:9:0"
									},
									"scope": 821,
									"src": "23015:278:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "23825:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 790,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "23847:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 791,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "23850:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23853:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 789,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															796,
															820
														],
														"referencedDeclaration": 820,
														"src": "23843:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23843:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 788,
												"id": 794,
												"nodeType": "Return",
												"src": "23836:44:0"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "23301:451:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "23767:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23779:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "23771:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "23790:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "23782:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23770:22:0"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "23816:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23815:9:0"
									},
									"scope": 821,
									"src": "23758:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "24468:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 809,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "24487:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24492:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24487:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 812,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "24495:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 808,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24479:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24479:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "24479:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 815,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "24526:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 816,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "24530:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24526:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 807,
												"id": 818,
												"nodeType": "Return",
												"src": "24519:12:0"
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "23896:471:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "24382:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24394:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "24386:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24405:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "24397:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "24422:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "24408:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 802,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24408:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24385:50:0"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "24459:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24458:9:0"
									},
									"scope": 821,
									"src": "24373:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1505,
							"src": "19823:4719:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1034,
							"linearizedBaseContracts": [
								1034
							],
							"name": "SafeERC20",
							"nameLocation": "24554:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 824,
									"libraryName": {
										"id": 822,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "24577:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "24571:27:0",
									"typeName": {
										"id": 823,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24590:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 827,
									"libraryName": {
										"id": 825,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "24610:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "24604:26:0",
									"typeName": {
										"id": 826,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24622:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "24710:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 838,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "24741:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 841,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 830,
																			"src": "24771:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$454",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 403,
																		"src": "24771:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "24771:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 844,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "24796:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 845,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "24800:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 839,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "24748:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "24748:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24748:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 837,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "24721:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$454_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24721:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "24721:86:0"
											}
										]
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "24647:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "24667:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "24660:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$454",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 829,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 828,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 454,
														"src": "24660:6:0"
													},
													"referencedDeclaration": 454,
													"src": "24660:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24682:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "24674:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24694:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "24686:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24659:41:0"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24710:0:0"
									},
									"scope": 1034,
									"src": "24638:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "24913:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "24944:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 866,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 853,
																			"src": "24974:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$454",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 435,
																		"src": "24974:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "24974:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 869,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "25003:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 870,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "25009:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 871,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "25013:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 864,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "24951:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "24951:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24951:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 862,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "24924:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$454_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24924:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "24924:96:0"
											}
										]
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24832:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "24856:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "24849:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$454",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 852,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 851,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 454,
														"src": "24849:6:0"
													},
													"referencedDeclaration": 454,
													"src": "24849:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24871:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "24863:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24885:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "24877:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24897:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "24889:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24848:55:0"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24913:0:0"
									},
									"scope": 1034,
									"src": "24823:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "25373:546:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 888,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "25667:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25676:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25667:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 891,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25666:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 896,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "25707:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1034",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1034",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 895,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "25699:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 894,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "25699:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 897,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "25699:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 898,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 882,
																					"src": "25714:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 892,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 880,
																					"src": "25683:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$454",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 413,
																				"src": "25683:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25683:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25726:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25683:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 902,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25682:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "25666:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25743:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 887,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25658:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25658:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "25658:152:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 908,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "25841:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 911,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 880,
																			"src": "25871:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$454",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 423,
																		"src": "25871:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "25871:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 914,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "25895:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 915,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "25904:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 909,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "25848:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "25848:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25848:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 907,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "25821:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$454_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25821:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "25821:90:0"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "25036:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "25306:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "25325:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "25318:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$454",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 879,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 878,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 454,
														"src": "25318:6:0"
													},
													"referencedDeclaration": 454,
													"src": "25318:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25340:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "25332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25357:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "25349:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25317:46:0"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25373:0:0"
									},
									"scope": 1034,
									"src": "25297:622:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "26013:200:0",
										"statements": [
											{
												"assignments": [
													931
												],
												"declarations": [
													{
														"constant": false,
														"id": 931,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "26032:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "26024:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 930,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26024:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 943,
												"initialValue": {
													"arguments": [
														{
															"id": 941,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "26091:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 936,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "26071:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1034",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1034",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26063:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 934,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "26063:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26063:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 938,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "26078:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 932,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "26047:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$454",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 413,
																"src": "26047:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26047:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 654,
														"src": "26047:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26047:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26024:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 945,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "26128:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 948,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 923,
																			"src": "26158:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$454",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 423,
																		"src": "26158:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "26158:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 951,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "26182:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 952,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "26191:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 946,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "26135:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "26135:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26135:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 944,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "26108:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$454_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26108:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "26108:97:0"
											}
										]
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "25936:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "25965:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "25958:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$454",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 922,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 921,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 454,
														"src": "25958:6:0"
													},
													"referencedDeclaration": 454,
													"src": "25958:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25980:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "25972:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25997:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "25989:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25957:46:0"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26013:0:0"
									},
									"scope": 1034,
									"src": "25927:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "26307:245:0",
										"statements": [
											{
												"assignments": [
													968
												],
												"declarations": [
													{
														"constant": false,
														"id": 968,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "26326:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "26318:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 967,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26318:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 981,
												"initialValue": {
													"arguments": [
														{
															"id": 978,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "26385:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26392:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 973,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "26365:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1034",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1034",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26357:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 971,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "26357:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26357:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 975,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "26372:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 969,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "26341:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$454",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 413,
																"src": "26341:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26341:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 699,
														"src": "26341:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26341:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26318:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "26467:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 986,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "26497:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$454",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 423,
																		"src": "26497:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "26497:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 989,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "26521:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 990,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "26530:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 984,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "26474:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "26474:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26474:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 982,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "26447:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$454_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26447:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "26447:97:0"
											}
										]
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "26230:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "26259:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "26252:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$454",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 959,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 958,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 454,
														"src": "26252:6:0"
													},
													"referencedDeclaration": 454,
													"src": "26252:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "26274:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "26266:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26291:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "26283:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26251:46:0"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26307:0:0"
									},
									"scope": 1034,
									"src": "26221:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "27013:691:0",
										"statements": [
											{
												"assignments": [
													1005
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "27380:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1032,
														"src": "27367:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1004,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "27367:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1014,
												"initialValue": {
													"arguments": [
														{
															"id": 1011,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "27421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27427:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1008,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 999,
																	"src": "27401:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$454",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$454",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27393:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1006,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27393:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27393:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 226,
														"src": "27393:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27393:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27367:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1015,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "27477:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "27477:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27497:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27477:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1031,
												"nodeType": "IfStatement",
												"src": "27473:224:0",
												"trueBody": {
													"id": 1030,
													"nodeType": "Block",
													"src": "27500:197:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1022,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1005,
																				"src": "27619:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1024,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "27632:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1023,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "27632:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1025,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27631:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1020,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "27608:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "27608:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "27608:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27640:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1019,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "27600:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27600:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1029,
															"nodeType": "ExpressionStatement",
															"src": "27600:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "26560:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "26952:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "26979:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "26972:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$454",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 998,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 997,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 454,
														"src": "26972:6:0"
													},
													"referencedDeclaration": 454,
													"src": "26972:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "26999:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "26986:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1000,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26986:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26971:33:0"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27013:0:0"
									},
									"scope": 1034,
									"src": "26943:761:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1505,
							"src": "24546:3161:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1035,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 473,
										"src": "27740:7:0"
									},
									"id": 1036,
									"nodeType": "InheritanceSpecifier",
									"src": "27740:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1143,
							"linearizedBaseContracts": [
								1143,
								473
							],
							"name": "Ownable",
							"nameLocation": "27729:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1038,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "27771:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1143,
									"src": "27755:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1037,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27755:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 1044,
									"name": "OwnershipTransferred",
									"nameLocation": "27792:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "27829:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "27813:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "27860:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "27844:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27812:57:0"
									},
									"src": "27786:84:0"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "27991:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1049,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "28021:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28021:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1048,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "28002:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28002:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "28002:32:0"
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "27878:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1054,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27988:2:0"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27991:0:0"
									},
									"scope": 1143,
									"src": "27977:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "28156:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1057,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "28167:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28167:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "28167:13:0"
											},
											{
												"id": 1060,
												"nodeType": "PlaceholderStatement",
												"src": "28191:1:0"
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "28050:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1062,
									"name": "onlyOwner",
									"nameLocation": "28144:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28153:2:0"
									},
									"src": "28135:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "28336:32:0",
										"statements": [
											{
												"expression": {
													"id": 1068,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1038,
													"src": "28354:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1067,
												"id": 1069,
												"nodeType": "Return",
												"src": "28347:13:0"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "28208:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "28290:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28295:2:0"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "28327:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28327:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28326:9:0"
									},
									"scope": 1143,
									"src": "28281:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "28491:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1076,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "28510:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28510:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1078,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "28521:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28521:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28510:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28535:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28502:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28502:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "28502:68:0"
											}
										]
									},
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "28376:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "28455:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28466:2:0"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28491:0:0"
									},
									"scope": 1143,
									"src": "28446:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "28983:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29021:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29013:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1092,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29013:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29013:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1091,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "28994:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28994:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "28994:30:0"
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "28586:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1089,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1088,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "28973:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28973:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "28938:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28955:2:0"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28983:0:0"
									},
									"scope": 1143,
									"src": "28929:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "29257:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1108,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "29276:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29296:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29288:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1109,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "29288:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29288:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29276:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29300:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29268:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29268:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "29268:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1118,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "29371:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1117,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "29352:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29352:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "29352:28:0"
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "29040:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1105,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1104,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "29247:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29247:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "29196:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "29222:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "29214:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29213:18:0"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29257:0:0"
									},
									"scope": 1143,
									"src": "29187:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "29611:128:0",
										"statements": [
											{
												"assignments": [
													1129
												],
												"declarations": [
													{
														"constant": false,
														"id": 1129,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "29630:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "29622:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1128,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "29622:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1131,
												"initialValue": {
													"id": 1130,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1038,
													"src": "29641:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29622:25:0"
											},
											{
												"expression": {
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1132,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "29658:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1133,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "29667:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29658:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "29658:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1137,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "29712:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1138,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "29722:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1136,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "29691:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29691:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "EmitStatement",
												"src": "29686:45:0"
											}
										]
									},
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "29396:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "29557:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "29584:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "29576:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29575:18:0"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29611:0:0"
									},
									"scope": 1143,
									"src": "29548:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1505,
							"src": "27711:2031:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1144,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 628,
										"src": "29765:15:0"
									},
									"id": 1145,
									"nodeType": "InheritanceSpecifier",
									"src": "29765:15:0"
								},
								{
									"baseName": {
										"id": 1146,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 577,
										"src": "29782:8:0"
									},
									"id": 1147,
									"nodeType": "InheritanceSpecifier",
									"src": "29782:8:0"
								},
								{
									"baseName": {
										"id": 1148,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1143,
										"src": "29792:7:0"
									},
									"id": 1149,
									"nodeType": "InheritanceSpecifier",
									"src": "29792:7:0"
								},
								{
									"baseName": {
										"id": 1150,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 17,
										"src": "29801:15:0"
									},
									"id": 1151,
									"nodeType": "InheritanceSpecifier",
									"src": "29801:15:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1504,
							"linearizedBaseContracts": [
								1504,
								17,
								1143,
								577,
								473,
								628
							],
							"name": "Farm",
							"nameLocation": "29757:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1154,
									"libraryName": {
										"id": 1152,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "29830:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "29824:27:0",
									"typeName": {
										"id": 1153,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29843:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1158,
									"libraryName": {
										"id": 1155,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1034,
										"src": "29863:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "29857:27:0",
									"typeName": {
										"id": 1157,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1156,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 454,
											"src": "29877:6:0"
										},
										"referencedDeclaration": 454,
										"src": "29877:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$454",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "Farm.StakedToken",
									"id": 1163,
									"members": [
										{
											"constant": false,
											"id": 1160,
											"mutability": "mutable",
											"name": "staker",
											"nameLocation": "29930:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1163,
											"src": "29922:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1159,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "29922:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1162,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "29955:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 1163,
											"src": "29947:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1161,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakedToken",
									"nameLocation": "29899:11:0",
									"nodeType": "StructDefinition",
									"scope": 1504,
									"src": "29892:78:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Farm.Staker",
									"id": 1174,
									"members": [
										{
											"constant": false,
											"id": 1165,
											"mutability": "mutable",
											"name": "amountStaked",
											"nameLocation": "30029:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 1174,
											"src": "30021:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1164,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "30021:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1169,
											"mutability": "mutable",
											"name": "stakedTokens",
											"nameLocation": "30066:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 1174,
											"src": "30052:26:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage_ptr",
												"typeString": "struct Farm.StakedToken[]"
											},
											"typeName": {
												"baseType": {
													"id": 1167,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1166,
														"name": "StakedToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1163,
														"src": "30052:11:0"
													},
													"referencedDeclaration": 1163,
													"src": "30052:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakedToken_$1163_storage_ptr",
														"typeString": "struct Farm.StakedToken"
													}
												},
												"id": 1168,
												"nodeType": "ArrayTypeName",
												"src": "30052:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage_ptr",
													"typeString": "struct Farm.StakedToken[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1171,
											"mutability": "mutable",
											"name": "timeOfLastUpdate",
											"nameLocation": "30097:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 1174,
											"src": "30089:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1170,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "30089:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1173,
											"mutability": "mutable",
											"name": "unclaimedRewards",
											"nameLocation": "30132:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 1174,
											"src": "30124:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "30124:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "30003:6:0",
									"nodeType": "StructDefinition",
									"scope": 1504,
									"src": "29996:160:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 1177,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "30178:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1504,
									"src": "30164:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$454",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1176,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1175,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 454,
											"src": "30164:6:0"
										},
										"referencedDeclaration": 454,
										"src": "30164:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$454",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6588103b",
									"id": 1180,
									"mutability": "mutable",
									"name": "nftCollection",
									"nameLocation": "30212:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1504,
									"src": "30197:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$138",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 1179,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1178,
											"name": "IERC721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 138,
											"src": "30197:7:0"
										},
										"referencedDeclaration": 138,
										"src": "30197:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$138",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1183,
									"mutability": "mutable",
									"name": "rewardsPerHour",
									"nameLocation": "30300:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1504,
									"src": "30284:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1181,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30284:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 1182,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "30317:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "9168ae72",
									"id": 1188,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "30370:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1504,
									"src": "30336:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
										"typeString": "mapping(address => struct Farm.Staker)"
									},
									"typeName": {
										"id": 1187,
										"keyType": {
											"id": 1184,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30344:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "30336:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
											"typeString": "mapping(address => struct Farm.Staker)"
										},
										"valueType": {
											"id": 1186,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1185,
												"name": "Staker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1174,
												"src": "30355:6:0"
											},
											"referencedDeclaration": 1174,
											"src": "30355:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1174_storage_ptr",
												"typeString": "struct Farm.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "94067045",
									"id": 1192,
									"mutability": "mutable",
									"name": "stakerAddress",
									"nameLocation": "30498:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1504,
									"src": "30463:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1191,
										"keyType": {
											"id": 1189,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "30471:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "30463:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 1190,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30482:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "30603:131:0",
										"statements": [
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1203,
														"name": "nftCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "30614:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$138",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1204,
														"name": "_nftCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "30630:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$138",
															"typeString": "contract IERC721"
														}
													},
													"src": "30614:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$138",
														"typeString": "contract IERC721"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "30614:30:0"
											},
											{
												"expression": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1207,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "30655:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$454",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1208,
														"name": "_rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "30670:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$454",
															"typeString": "contract IERC20"
														}
													},
													"src": "30655:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "30655:28:0"
											},
											{
												"expression": {
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1211,
														"name": "rewardsPerHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "30694:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1212,
														"name": "_rewardsPerHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "30711:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30694:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "30694:32:0"
											}
										]
									},
									"id": 1216,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "_nftCollection",
												"nameLocation": "30540:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "30532:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$138",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 1194,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1193,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 138,
														"src": "30532:7:0"
													},
													"referencedDeclaration": 138,
													"src": "30532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$138",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "30563:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "30556:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$454",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1197,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1196,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 454,
														"src": "30556:6:0"
													},
													"referencedDeclaration": 454,
													"src": "30556:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "_rewardsPerHour",
												"nameLocation": "30586:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "30578:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30531:71:0"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30603:0:0"
									},
									"scope": 1504,
									"src": "30520:214:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "30921:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1235,
																			"name": "operator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1218,
																			"src": "30973:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1236,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1220,
																			"src": "30983:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1237,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1222,
																			"src": "30989:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1238,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "30998:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		],
																		"expression": {
																			"id": 1233,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "30956:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "30956:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30956:47:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1232,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "30946:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30946:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "30939:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 1230,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "30939:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30939:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1242,
												"nodeType": "Return",
												"src": "30932:73:0"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "30751:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1226,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "30890:8:0"
									},
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "30786:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "30778:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30813:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "30805:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "30836:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "30828:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "30869:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "30854:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30854:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30767:113:0"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "30913:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "30913:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30912:8:0"
									},
									"scope": 1504,
									"src": "30742:271:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "31076:701:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1254,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1246,
																		"src": "31131:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1252,
																		"name": "nftCollection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "31109:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$138",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 71,
																	"src": "31109:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31109:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1256,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "31144:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "31144:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31109:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31169:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															},
															"value": "You don't own this token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31087:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31087:120:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "31087:120:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1262,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "31224:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1265,
															"indexExpression": {
																"expression": {
																	"id": 1263,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "31232:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "31232:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31224:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1165,
														"src": "31224:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31259:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31224:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1285,
												"nodeType": "IfStatement",
												"src": "31220:177:0",
												"trueBody": {
													"id": 1284,
													"nodeType": "Block",
													"src": "31262:135:0",
													"statements": [
														{
															"assignments": [
																1270
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1270,
																	"mutability": "mutable",
																	"name": "rewards",
																	"nameLocation": "31285:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1284,
																	"src": "31277:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1269,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31277:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1275,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1272,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "31312:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "31312:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1271,
																	"name": "calculateRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "31295:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31295:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31277:46:0"
														},
														{
															"expression": {
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1276,
																			"name": "stakers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1188,
																			"src": "31338:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																				"typeString": "mapping(address => struct Farm.Staker storage ref)"
																			}
																		},
																		"id": 1279,
																		"indexExpression": {
																			"expression": {
																				"id": 1277,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "31346:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "31346:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "31338:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1174_storage",
																			"typeString": "struct Farm.Staker storage ref"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "unclaimedRewards",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1173,
																	"src": "31338:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1281,
																	"name": "rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1270,
																	"src": "31378:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31338:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1283,
															"nodeType": "ExpressionStatement",
															"src": "31338:47:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1289,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31436:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31436:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1293,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31456:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farm_$1504",
																		"typeString": "contract Farm"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farm_$1504",
																		"typeString": "contract Farm"
																	}
																],
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31448:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1291,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31448:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31448:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1295,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "31463:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1286,
															"name": "nftCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "31409:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$138",
																"typeString": "contract IERC721"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "31409:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31409:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "31409:63:0"
											},
											{
												"assignments": [
													1300
												],
												"declarations": [
													{
														"constant": false,
														"id": 1300,
														"mutability": "mutable",
														"name": "stakedToken",
														"nameLocation": "31504:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1339,
														"src": "31485:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakedToken_$1163_memory_ptr",
															"typeString": "struct Farm.StakedToken"
														},
														"typeName": {
															"id": 1299,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1298,
																"name": "StakedToken",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1163,
																"src": "31485:11:0"
															},
															"referencedDeclaration": 1163,
															"src": "31485:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$1163_storage_ptr",
																"typeString": "struct Farm.StakedToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1306,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1302,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31530:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31530:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1304,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "31542:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1301,
														"name": "StakedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "31518:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakedToken_$1163_storage_ptr_$",
															"typeString": "type(struct Farm.StakedToken storage pointer)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31518:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakedToken_$1163_memory_ptr",
														"typeString": "struct Farm.StakedToken memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31485:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1313,
															"name": "stakedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "31600:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$1163_memory_ptr",
																"typeString": "struct Farm.StakedToken memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_StakedToken_$1163_memory_ptr",
																"typeString": "struct Farm.StakedToken memory"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1307,
																	"name": "stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "31562:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																		"typeString": "mapping(address => struct Farm.Staker storage ref)"
																	}
																},
																"id": 1310,
																"indexExpression": {
																	"expression": {
																		"id": 1308,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "31570:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "31570:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31562:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1174_storage",
																	"typeString": "struct Farm.Staker storage ref"
																}
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakedTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1169,
															"src": "31562:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage",
																"typeString": "struct Farm.StakedToken storage ref[] storage ref"
															}
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "31562:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage_ptr_$_t_struct$_StakedToken_$1163_storage_$returns$__$bound_to$_t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Farm.StakedToken storage ref[] storage pointer,struct Farm.StakedToken storage ref)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31562:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "31562:50:0"
											},
											{
												"expression": {
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "31623:34:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1316,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "31623:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1319,
															"indexExpression": {
																"expression": {
																	"id": 1317,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "31631:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "31631:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31623:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1165,
														"src": "31623:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1322,
												"nodeType": "ExpressionStatement",
												"src": "31623:34:0"
											},
											{
												"expression": {
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1323,
															"name": "stakerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "31668:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1325,
														"indexExpression": {
															"id": 1324,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "31682:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31668:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1326,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "31694:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "31694:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31668:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "31668:36:0"
											},
											{
												"expression": {
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1330,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "31715:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1333,
															"indexExpression": {
																"expression": {
																	"id": 1331,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "31723:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "31723:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31715:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timeOfLastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1171,
														"src": "31715:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1335,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31754:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "31754:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31715:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "31715:54:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1249,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1248,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 604,
												"src": "31063:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31063:12:0"
										}
									],
									"name": "stake",
									"nameLocation": "31030:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "31044:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "31036:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31035:18:0"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31076:0:0"
									},
									"scope": 1504,
									"src": "31021:756:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1472,
										"nodeType": "Block",
										"src": "31843:1006:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1348,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1188,
																		"src": "31876:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																			"typeString": "mapping(address => struct Farm.Staker storage ref)"
																		}
																	},
																	"id": 1351,
																	"indexExpression": {
																		"expression": {
																			"id": 1349,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "31884:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "31884:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "31876:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1174_storage",
																		"typeString": "struct Farm.Staker storage ref"
																	}
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amountStaked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1165,
																"src": "31876:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31911:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31876:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f20746f6b656e73207374616b6564",
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31927:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139",
																"typeString": "literal_string \"You have no tokens staked\""
															},
															"value": "You have no tokens staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139",
																"typeString": "literal_string \"You have no tokens staked\""
															}
														],
														"id": 1347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31854:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31854:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "31854:111:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1359,
																	"name": "stakerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "31984:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 1361,
																"indexExpression": {
																	"id": 1360,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "31998:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31984:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1362,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "32011:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "32011:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31984:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32023:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															},
															"value": "You don't own this token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															}
														],
														"id": 1358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31976:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31976:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "31976:75:0"
											},
											{
												"assignments": [
													1369
												],
												"declarations": [
													{
														"constant": false,
														"id": 1369,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "32171:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1472,
														"src": "32163:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1368,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32163:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1374,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1371,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32198:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32198:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1370,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "32181:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32181:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32163:46:0"
											},
											{
												"expression": {
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1375,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "32220:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1378,
															"indexExpression": {
																"expression": {
																	"id": 1376,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "32228:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "32228:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32220:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1173,
														"src": "32220:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1380,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "32260:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32220:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "32220:47:0"
											},
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "32290:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1472,
														"src": "32282:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32282:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"hexValue": "30",
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32298:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32282:17:0"
											},
											{
												"body": {
													"id": 1419,
													"nodeType": "Block",
													"src": "32380:155:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1402,
																					"name": "stakers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1188,
																					"src": "32399:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																						"typeString": "mapping(address => struct Farm.Staker storage ref)"
																					}
																				},
																				"id": 1405,
																				"indexExpression": {
																					"expression": {
																						"id": 1403,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "32407:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1404,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "32407:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "32399:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1174_storage",
																					"typeString": "struct Farm.Staker storage ref"
																				}
																			},
																			"id": 1406,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakedTokens",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1169,
																			"src": "32399:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage",
																				"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																			}
																		},
																		"id": 1408,
																		"indexExpression": {
																			"id": 1407,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1388,
																			"src": "32432:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "32399:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakedToken_$1163_storage",
																			"typeString": "struct Farm.StakedToken storage ref"
																		}
																	},
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1162,
																	"src": "32399:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1410,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "32446:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32399:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1418,
															"nodeType": "IfStatement",
															"src": "32395:129:0",
															"trueBody": {
																"id": 1417,
																"nodeType": "Block",
																"src": "32456:68:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1412,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1384,
																				"src": "32475:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1413,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1388,
																				"src": "32483:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32475:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1415,
																		"nodeType": "ExpressionStatement",
																		"src": "32475:9:0"
																	},
																	{
																		"id": 1416,
																		"nodeType": "Break",
																		"src": "32503:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1391,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "32330:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1392,
																	"name": "stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "32334:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																		"typeString": "mapping(address => struct Farm.Staker storage ref)"
																	}
																},
																"id": 1395,
																"indexExpression": {
																	"expression": {
																		"id": 1393,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "32342:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "32342:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32334:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1174_storage",
																	"typeString": "struct Farm.Staker storage ref"
																}
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakedTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1169,
															"src": "32334:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage",
																"typeString": "struct Farm.StakedToken storage ref[] storage ref"
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "32334:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32330:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1420,
												"initializationExpression": {
													"assignments": [
														1388
													],
													"declarations": [
														{
															"constant": false,
															"id": 1388,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "32323:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1420,
															"src": "32315:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1387,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "32315:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1390,
													"initialValue": {
														"hexValue": "30",
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32327:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "32315:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "32375:3:0",
														"subExpression": {
															"id": 1399,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "32375:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1401,
													"nodeType": "ExpressionStatement",
													"src": "32375:3:0"
												},
												"nodeType": "ForStatement",
												"src": "32310:225:0"
											},
											{
												"expression": {
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1421,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1188,
																		"src": "32549:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																			"typeString": "mapping(address => struct Farm.Staker storage ref)"
																		}
																	},
																	"id": 1424,
																	"indexExpression": {
																		"expression": {
																			"id": 1422,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "32557:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "32557:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "32549:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1174_storage",
																		"typeString": "struct Farm.Staker storage ref"
																	}
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedTokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1169,
																"src": "32549:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage",
																	"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																}
															},
															"id": 1427,
															"indexExpression": {
																"id": 1426,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "32582:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32549:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$1163_storage",
																"typeString": "struct Farm.StakedToken storage ref"
															}
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "staker",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1160,
														"src": "32549:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32606:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32598:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1429,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32598:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32598:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32549:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "32549:59:0"
											},
											{
												"expression": {
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "32619:34:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1435,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "32619:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1438,
															"indexExpression": {
																"expression": {
																	"id": 1436,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "32627:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "32627:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32619:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1165,
														"src": "32619:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "32619:34:0"
											},
											{
												"expression": {
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1442,
															"name": "stakerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "32664:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1444,
														"indexExpression": {
															"id": 1443,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "32678:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32664:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32698:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32690:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1445,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32690:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32690:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32664:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "32664:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1456,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "32748:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farm_$1504",
																		"typeString": "contract Farm"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farm_$1504",
																		"typeString": "contract Farm"
																	}
																],
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32740:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1454,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32740:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32740:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1458,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32755:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32755:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1460,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "32767:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1451,
															"name": "nftCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "32713:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$138",
																"typeString": "contract IERC721"
															}
														},
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "32713:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32713:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "32713:63:0"
											},
											{
												"expression": {
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1463,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "32787:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1466,
															"indexExpression": {
																"expression": {
																	"id": 1464,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "32795:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "32795:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32787:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1467,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timeOfLastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1171,
														"src": "32787:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1468,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "32826:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "32826:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32787:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "32787:54:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1473,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1345,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1344,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 604,
												"src": "31830:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31830:12:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "31794:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "31811:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "31803:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31802:18:0"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31843:0:0"
									},
									"scope": 1504,
									"src": "31785:1064:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "32973:184:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1492,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1486,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"expression": {
																												"id": 1480,
																												"name": "block",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967292,
																												"src": "33010:5:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_block",
																													"typeString": "block"
																												}
																											},
																											"id": 1481,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "timestamp",
																											"nodeType": "MemberAccess",
																											"src": "33010:15:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"expression": {
																												"baseExpression": {
																													"id": 1482,
																													"name": "stakers",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1188,
																													"src": "33028:7:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																														"typeString": "mapping(address => struct Farm.Staker storage ref)"
																													}
																												},
																												"id": 1484,
																												"indexExpression": {
																													"id": 1483,
																													"name": "_staker",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1475,
																													"src": "33036:7:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "33028:16:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Staker_$1174_storage",
																													"typeString": "struct Farm.Staker storage ref"
																												}
																											},
																											"id": 1485,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "timeOfLastUpdate",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1171,
																											"src": "33028:33:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "33010:51:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1487,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "33009:53:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1488,
																										"name": "stakers",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1188,
																										"src": "33082:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																											"typeString": "mapping(address => struct Farm.Staker storage ref)"
																										}
																									},
																									"id": 1490,
																									"indexExpression": {
																										"id": 1489,
																										"name": "_staker",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1475,
																										"src": "33090:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "33082:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Staker_$1174_storage",
																										"typeString": "struct Farm.Staker storage ref"
																									}
																								},
																								"id": 1491,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "amountStaked",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1165,
																								"src": "33082:29:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "33009:102:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1493,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "33008:104:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1494,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "32993:130:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1495,
																			"name": "rewardsPerHour",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "33126:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32993:147:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1497,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "32992:149:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "33363030",
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33144:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "3600"
															},
															"src": "32992:156:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1500,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "32991:158:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1479,
												"id": 1501,
												"nodeType": "Return",
												"src": "32984:165:0"
											}
										]
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "32866:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "32891:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "32883:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32882:17:0"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "_rewards",
												"nameLocation": "32958:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "32950:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32949:18:0"
									},
									"scope": 1504,
									"src": "32857:300:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1505,
							"src": "29748:3414:0",
							"usedErrors": []
						}
					],
					"src": "38:33126:0"
				},
				"id": 0
			}
		}
	}
}