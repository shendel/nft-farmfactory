{
	"id": "d7674bb9fac1331034544b0c29021308",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Farm.sol": {
				"content": "//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title ERC721 token receiver interface\r\n * @dev Interface for any contract that wants to support safeTransfers\r\n * from ERC721 asset contracts.\r\n */\r\ninterface IERC721Receiver {\r\n    /**\r\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\r\n     * by `operator` from `from`, this function is called.\r\n     *\r\n     * It must return its Solidity selector to confirm the token transfer.\r\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\r\n     *\r\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\r\n     */\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n\r\ninterface IERC721 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return _verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Pausable is Context {\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state.\r\n     */\r\n    constructor() {\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        _requireNotPaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        _requirePaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is paused.\r\n     */\r\n    function _requireNotPaused() internal view virtual {\r\n        require(!paused(), \"Pausable: paused\");\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is not paused.\r\n     */\r\n    function _requirePaused() internal view virtual {\r\n        require(paused(), \"Pausable: not paused\");\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}\r\n\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        _nonReentrantBefore();\r\n        _;\r\n        _nonReentrantAfter();\r\n    }\r\n\r\n    function _nonReentrantBefore() private {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n    }\r\n\r\n    function _nonReentrantAfter() private {\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\n\r\ncontract Farm is ReentrancyGuard, Pausable, Ownable, IERC721Receiver {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct StakedToken {\r\n        address staker;\r\n        uint256 tokenId;\r\n    }\r\n    // Staker info\r\n    struct Staker {\r\n        uint256 amountStaked;\r\n        StakedToken[] stakedTokens;\r\n        uint256 timeOfLastUpdate;\r\n        uint256 unclaimedRewards;\r\n    }\r\n\r\n    IERC20 public rewardsToken;\r\n    IERC721 public nftCollection;\r\n    // Rewards per hour per token deposited in wei\r\n    uint256 private rewardsPerHour = 100000;\r\n    \r\n    mapping(address => Staker) public stakers;\r\n    // Mapping of tokenId to staker. For remember who to send back ther token\r\n    mapping(uint256 => address) public stakerAddress;\r\n\r\n    constructor(IERC721 _nftCollection, IERC20 _rewardsToken, uint256 _rewardsPerHour) {\r\n        nftCollection = _nftCollection;\r\n        rewardsToken = _rewardsToken;\r\n        rewardsPerHour = _rewardsPerHour;\r\n    }\r\n\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external override returns (bytes4) {\r\n        require(IERC721(from) == nftCollection, \"Not supported NFT Collection\");\r\n        return bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"));\r\n    }\r\n\r\n    function _stake(address holder, uint256 _tokenId) internal {\r\n        require(\r\n            nftCollection.ownerOf(_tokenId) == msg.sender,\r\n            \"You don't own this token!\"\r\n        );\r\n\r\n        if (stakers[msg.sender].amountStaked > 0) {\r\n            uint256 rewards = calculateRewards(msg.sender);\r\n            stakers[msg.sender].unclaimedRewards += rewards;\r\n        }\r\n\r\n        nftCollection.transferFrom(msg.sender, address(this), _tokenId);\r\n\r\n        StakedToken memory stakedToken = StakedToken(msg.sender, _tokenId);\r\n        stakers[msg.sender].stakedTokens.push(stakedToken);\r\n        stakers[msg.sender].amountStaked++;\r\n        stakerAddress[_tokenId] = msg.sender;\r\n        stakers[msg.sender].timeOfLastUpdate = block.timestamp;\r\n    }\r\n    function stake(uint256 _tokenId) external nonReentrant {\r\n        \r\n    }\r\n\r\n    function withdraw(uint256 _tokenId) external nonReentrant {\r\n        require(\r\n            stakers[msg.sender].amountStaked > 0,\r\n            \"You have no tokens staked\"\r\n        );\r\n        require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\");\r\n\r\n        // Update the rewards for this user, as the amount of rewards decreases with less tokens.\r\n        uint256 rewards = calculateRewards(msg.sender);\r\n        stakers[msg.sender].unclaimedRewards += rewards;\r\n\r\n\r\n        uint256 index = 0;\r\n        for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {\r\n            if (stakers[msg.sender].stakedTokens[i].tokenId == _tokenId) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n        stakers[msg.sender].stakedTokens[index].staker = address(0);\r\n        stakers[msg.sender].amountStaked--;\r\n        stakerAddress[_tokenId] = address(0);\r\n\r\n        nftCollection.transferFrom(address(this), msg.sender, _tokenId);\r\n        stakers[msg.sender].timeOfLastUpdate = block.timestamp;\r\n    }\r\n\r\n    function calculateRewards(address _staker)\r\n        internal\r\n        view\r\n        returns (uint256 _rewards)\r\n    {\r\n        return (((\r\n            ((block.timestamp - stakers[_staker].timeOfLastUpdate) *\r\n                stakers[_staker].amountStaked)\r\n        ) * rewardsPerHour) / 3600);\r\n    }\r\n\r\n    function claimRewards() external {\r\n        uint256 rewards = calculateRewards(msg.sender) +\r\n            stakers[msg.sender].unclaimedRewards;\r\n        require(rewards > 0, \"You have no rewards to claim\");\r\n        stakers[msg.sender].timeOfLastUpdate = block.timestamp;\r\n        stakers[msg.sender].unclaimedRewards = 0;\r\n        rewardsToken.safeTransfer(msg.sender, rewards);\r\n    }\r\n\r\n    function getStakedTokens(address _user) public view returns (StakedToken[] memory) {\r\n        if (stakers[_user].amountStaked > 0) {\r\n            StakedToken[] memory _stakedTokens = new StakedToken[](stakers[_user].amountStaked);\r\n            uint256 _index = 0;\r\n\r\n            for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {\r\n                if (stakers[_user].stakedTokens[j].staker != (address(0))) {\r\n                    _stakedTokens[_index] = stakers[_user].stakedTokens[j];\r\n                    _index++;\r\n                }\r\n            }\r\n\r\n            return _stakedTokens;\r\n        } else {\r\n            return new StakedToken[](0);\r\n        }\r\n    }\r\n\r\n    function availableRewards(address _staker) public view returns (uint256) {\r\n        uint256 rewards = calculateRewards(_staker) +\r\n            stakers[_staker].unclaimedRewards;\r\n        return rewards;\r\n    }\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Farm.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Farm.sol\":6029:12890  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Farm.sol\":6029:12890  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fdf7951da3f5342452c6b55c005979b32ad0d3a084671dd1030f9e6d18f36bdf64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdf7951da3f5342452c6b55c005979b32ad0d3a084671dd1030f9e6d18f36bdf64736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xF7 SWAP6 SAR LOG3 CREATE2 CALLVALUE 0x24 MSTORE 0xC6 0xB5 0x5C STOP MSIZE PUSH26 0xB32AD0D3A084671DD1030F9E6D18F36BDF64736F6C6343000800 STOP CALLER ",
							"sourceMap": "6029:6861:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdf7951da3f5342452c6b55c005979b32ad0d3a084671dd1030f9e6d18f36bdf64736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xF7 SWAP6 SAR LOG3 CREATE2 CALLVALUE 0x24 MSTORE 0xC6 0xB5 0x5C STOP MSIZE PUSH26 0xB32AD0D3A084671DD1030F9E6D18F36BDF64736F6C6343000800 STOP CALLER ",
							"sourceMap": "6029:6861:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6029,
									"end": 12890,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fdf7951da3f5342452c6b55c005979b32ad0d3a084671dd1030f9e6d18f36bdf64736f6c63430008000033",
									".code": [
										{
											"begin": 6029,
											"end": 12890,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6029,
											"end": 12890,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0xf3802d7f4b5813bff061eac1c57a592584da2c659ca79bd9bbd5b52943c9c419\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://35016025ba196051e3087c41fd46e92d5014ae524e8390b59c2e222a1d01bb3e\",\"dweb:/ipfs/QmTV4qSKieduG22waSx785wExRRWamfRJsAVcwpjY7JY8b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0xf3802d7f4b5813bff061eac1c57a592584da2c659ca79bd9bbd5b52943c9c419\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://35016025ba196051e3087c41fd46e92d5014ae524e8390b59c2e222a1d01bb3e\",\"dweb:/ipfs/QmTV4qSKieduG22waSx785wExRRWamfRJsAVcwpjY7JY8b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Farm": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC721",
									"name": "_nftCollection",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_rewardsToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardsPerHour",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "availableRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getStakedTokens",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "staker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										}
									],
									"internalType": "struct Farm.StakedToken[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftCollection",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountStaked",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeOfLastUpdate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unclaimedRewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Farm.sol\":29748:34623  contract Farm is ReentrancyGuard, Pausable, Ownable, IERC721Receiver {\r... */\n  mstore(0x40, 0x80)\n    /* \"Farm.sol\":30317:30323  100000 */\n  0x0186a0\n    /* \"Farm.sol\":30284:30323  uint256 private rewardsPerHour = 100000 */\n  0x04\n  sstore\n    /* \"Farm.sol\":30520:30734  constructor(IERC721 _nftCollection, IERC20 _rewardsToken, uint256 _rewardsPerHour) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Farm.sol\":18664:18665  1 */\n  0x01\n    /* \"Farm.sol\":18775:18782  _status */\n  0x00\n    /* \"Farm.sol\":18775:18797  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Farm.sol\":16203:16208  false */\n  0x00\n    /* \"Farm.sol\":16193:16200  _paused */\n  0x01\n  0x00\n    /* \"Farm.sol\":16193:16208  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Farm.sol\":28002:28034  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"Farm.sol\":28021:28033  _msgSender() */\n  tag_12\n    /* \"Farm.sol\":28021:28031  _msgSender */\n  shl(0x20, tag_13)\n    /* \"Farm.sol\":28021:28033  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"Farm.sol\":28002:28020  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"Farm.sol\":28002:28034  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"Farm.sol\":30630:30644  _nftCollection */\n  dup3\n    /* \"Farm.sol\":30614:30627  nftCollection */\n  0x03\n  0x00\n    /* \"Farm.sol\":30614:30644  nftCollection = _nftCollection */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Farm.sol\":30670:30683  _rewardsToken */\n  dup2\n    /* \"Farm.sol\":30655:30667  rewardsToken */\n  0x02\n  0x00\n    /* \"Farm.sol\":30655:30683  rewardsToken = _rewardsToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Farm.sol\":30711:30726  _rewardsPerHour */\n  dup1\n    /* \"Farm.sol\":30694:30708  rewardsPerHour */\n  0x04\n    /* \"Farm.sol\":30694:30726  rewardsPerHour = _rewardsPerHour */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Farm.sol\":30520:30734  constructor(IERC721 _nftCollection, IERC20 _rewardsToken, uint256 _rewardsPerHour) {\r... */\n  pop\n  pop\n  pop\n    /* \"Farm.sol\":29748:34623  contract Farm is ReentrancyGuard, Pausable, Ownable, IERC721Receiver {\r... */\n  jump(tag_16)\n    /* \"Farm.sol\":15568:15666  function _msgSender() internal view virtual returns (address) {\r... */\ntag_13:\n    /* \"Farm.sol\":15621:15628  address */\n  0x00\n    /* \"Farm.sol\":15648:15658  msg.sender */\n  caller\n    /* \"Farm.sol\":15641:15658  return msg.sender */\n  swap1\n  pop\n    /* \"Farm.sol\":15568:15666  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"Farm.sol\":29548:29739  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_14:\n    /* \"Farm.sol\":29622:29638  address oldOwner */\n  0x00\n    /* \"Farm.sol\":29641:29647  _owner */\n  0x01\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Farm.sol\":29622:29647  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Farm.sol\":29667:29675  newOwner */\n  dup2\n    /* \"Farm.sol\":29658:29664  _owner */\n  0x01\n  dup1\n    /* \"Farm.sol\":29658:29675  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Farm.sol\":29722:29730  newOwner */\n  dup2\n    /* \"Farm.sol\":29691:29731  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Farm.sol\":29712:29720  oldOwner */\n  dup2\n    /* \"Farm.sol\":29691:29731  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Farm.sol\":29548:29739  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:178   */\ntag_20:\n  0x00\n    /* \"#utility.yul\":109:115   */\n  dup2\n    /* \"#utility.yul\":103:116   */\n  mload\n    /* \"#utility.yul\":94:116   */\n  swap1\n  pop\n    /* \"#utility.yul\":125:172   */\n  tag_22\n    /* \"#utility.yul\":166:171   */\n  dup2\n    /* \"#utility.yul\":125:172   */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":84:178   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":184:357   */\ntag_24:\n  0x00\n    /* \"#utility.yul\":287:293   */\n  dup2\n    /* \"#utility.yul\":281:294   */\n  mload\n    /* \"#utility.yul\":272:294   */\n  swap1\n  pop\n    /* \"#utility.yul\":303:351   */\n  tag_26\n    /* \"#utility.yul\":345:350   */\n  dup2\n    /* \"#utility.yul\":303:351   */\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":262:357   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":363:506   */\ntag_28:\n  0x00\n    /* \"#utility.yul\":451:457   */\n  dup2\n    /* \"#utility.yul\":445:458   */\n  mload\n    /* \"#utility.yul\":436:458   */\n  swap1\n  pop\n    /* \"#utility.yul\":467:500   */\n  tag_30\n    /* \"#utility.yul\":494:499   */\n  dup2\n    /* \"#utility.yul\":467:500   */\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":426:506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":512:1166   */\ntag_3:\n  0x00\n  dup1\n  0x00\n    /* \"#utility.yul\":694:696   */\n  0x60\n    /* \"#utility.yul\":682:691   */\n  dup5\n    /* \"#utility.yul\":673:680   */\n  dup7\n    /* \"#utility.yul\":669:692   */\n  sub\n    /* \"#utility.yul\":665:697   */\n  slt\n    /* \"#utility.yul\":662:664   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":710:711   */\n  0x00\n    /* \"#utility.yul\":707:708   */\n  dup1\n    /* \"#utility.yul\":700:712   */\n  revert\n    /* \"#utility.yul\":662:664   */\ntag_33:\n    /* \"#utility.yul\":753:754   */\n  0x00\n    /* \"#utility.yul\":778:857   */\n  tag_34\n    /* \"#utility.yul\":849:856   */\n  dup7\n    /* \"#utility.yul\":840:846   */\n  dup3\n    /* \"#utility.yul\":829:838   */\n  dup8\n    /* \"#utility.yul\":825:847   */\n  add\n    /* \"#utility.yul\":778:857   */\n  tag_24\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":768:857   */\n  swap4\n  pop\n    /* \"#utility.yul\":724:867   */\n  pop\n    /* \"#utility.yul\":906:908   */\n  0x20\n    /* \"#utility.yul\":932:1010   */\n  tag_35\n    /* \"#utility.yul\":1002:1009   */\n  dup7\n    /* \"#utility.yul\":993:999   */\n  dup3\n    /* \"#utility.yul\":982:991   */\n  dup8\n    /* \"#utility.yul\":978:1000   */\n  add\n    /* \"#utility.yul\":932:1010   */\n  tag_20\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":922:1010   */\n  swap3\n  pop\n    /* \"#utility.yul\":877:1020   */\n  pop\n    /* \"#utility.yul\":1059:1061   */\n  0x40\n    /* \"#utility.yul\":1085:1149   */\n  tag_36\n    /* \"#utility.yul\":1141:1148   */\n  dup7\n    /* \"#utility.yul\":1132:1138   */\n  dup3\n    /* \"#utility.yul\":1121:1130   */\n  dup8\n    /* \"#utility.yul\":1117:1139   */\n  add\n    /* \"#utility.yul\":1085:1149   */\n  tag_28\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1075:1149   */\n  swap2\n  pop\n    /* \"#utility.yul\":1030:1159   */\n  pop\n    /* \"#utility.yul\":652:1166   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1172:1268   */\ntag_37:\n  0x00\n    /* \"#utility.yul\":1238:1262   */\n  tag_39\n    /* \"#utility.yul\":1256:1261   */\n  dup3\n    /* \"#utility.yul\":1238:1262   */\n  tag_40\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1227:1262   */\n  swap1\n  pop\n    /* \"#utility.yul\":1217:1268   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1274:1384   */\ntag_41:\n  0x00\n    /* \"#utility.yul\":1354:1378   */\n  tag_43\n    /* \"#utility.yul\":1372:1377   */\n  dup3\n    /* \"#utility.yul\":1354:1378   */\n  tag_37\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1343:1378   */\n  swap1\n  pop\n    /* \"#utility.yul\":1333:1384   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1390:1501   */\ntag_44:\n  0x00\n    /* \"#utility.yul\":1471:1495   */\n  tag_46\n    /* \"#utility.yul\":1489:1494   */\n  dup3\n    /* \"#utility.yul\":1471:1495   */\n  tag_37\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1460:1495   */\n  swap1\n  pop\n    /* \"#utility.yul\":1450:1501   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1507:1633   */\ntag_40:\n  0x00\n    /* \"#utility.yul\":1584:1626   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1577:1582   */\n  dup3\n    /* \"#utility.yul\":1573:1627   */\n  and\n    /* \"#utility.yul\":1562:1627   */\n  swap1\n  pop\n    /* \"#utility.yul\":1552:1633   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1639:1716   */\ntag_48:\n  0x00\n    /* \"#utility.yul\":1705:1710   */\n  dup2\n    /* \"#utility.yul\":1694:1710   */\n  swap1\n  pop\n    /* \"#utility.yul\":1684:1716   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1722:1872   */\ntag_23:\n    /* \"#utility.yul\":1809:1847   */\n  tag_51\n    /* \"#utility.yul\":1841:1846   */\n  dup2\n    /* \"#utility.yul\":1809:1847   */\n  tag_41\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1802:1807   */\n  dup2\n    /* \"#utility.yul\":1799:1848   */\n  eq\n    /* \"#utility.yul\":1789:1791   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1862:1863   */\n  0x00\n    /* \"#utility.yul\":1859:1860   */\n  dup1\n    /* \"#utility.yul\":1852:1864   */\n  revert\n    /* \"#utility.yul\":1789:1791   */\ntag_52:\n    /* \"#utility.yul\":1779:1872   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1878:2030   */\ntag_27:\n    /* \"#utility.yul\":1966:2005   */\n  tag_54\n    /* \"#utility.yul\":1999:2004   */\n  dup2\n    /* \"#utility.yul\":1966:2005   */\n  tag_44\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1959:1964   */\n  dup2\n    /* \"#utility.yul\":1956:2006   */\n  eq\n    /* \"#utility.yul\":1946:1948   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2020:2021   */\n  0x00\n    /* \"#utility.yul\":2017:2018   */\n  dup1\n    /* \"#utility.yul\":2010:2022   */\n  revert\n    /* \"#utility.yul\":1946:1948   */\ntag_55:\n    /* \"#utility.yul\":1936:2030   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2036:2158   */\ntag_31:\n    /* \"#utility.yul\":2109:2133   */\n  tag_57\n    /* \"#utility.yul\":2127:2132   */\n  dup2\n    /* \"#utility.yul\":2109:2133   */\n  tag_48\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2102:2107   */\n  dup2\n    /* \"#utility.yul\":2099:2134   */\n  eq\n    /* \"#utility.yul\":2089:2091   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2148:2149   */\n  0x00\n    /* \"#utility.yul\":2145:2146   */\n  dup1\n    /* \"#utility.yul\":2138:2150   */\n  revert\n    /* \"#utility.yul\":2089:2091   */\ntag_58:\n    /* \"#utility.yul\":2079:2158   */\n  pop\n  jump\t// out\n    /* \"Farm.sol\":29748:34623  contract Farm is ReentrancyGuard, Pausable, Ownable, IERC721Receiver {\r... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Farm.sol\":29748:34623  contract Farm is ReentrancyGuard, Pausable, Ownable, IERC721Receiver {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa694fc3a\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf854a27f\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9168ae72\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x94067045\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x5c975abb\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x63c28db1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6588103b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Farm.sol\":30742:31092  function onERC721Received(\r... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":31947:33011  function withdraw(uint256 _tokenId) external nonReentrant {\r... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"Farm.sol\":33327:33713  function claimRewards() external {\r... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"Farm.sol\":16842:16928  function paused() public view virtual returns (bool) {\r... */\n    tag_6:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":33721:34401  function getStakedTokens(address _user) public view returns (StakedToken[] memory) {\r... */\n    tag_7:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":30197:30225  IERC721 public nftCollection */\n    tag_8:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":28929:29032  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_9:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      stop\n        /* \"Farm.sol\":28281:28368  function owner() public view virtual returns (address) {\r... */\n    tag_10:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":30336:30377  mapping(address => Staker) public stakers */\n    tag_11:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":30463:30511  mapping(uint256 => address) public stakerAddress */\n    tag_12:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":31866:31939  function stake(uint256 _tokenId) external nonReentrant {\r... */\n    tag_13:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"Farm.sol\":30164:30190  IERC20 public rewardsToken */\n    tag_14:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":29187:29388  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_15:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"Farm.sol\":34409:34618  function availableRewards(address _staker) public view returns (uint256) {\r... */\n    tag_16:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farm.sol\":30742:31092  function onERC721Received(\r... */\n    tag_23:\n        /* \"Farm.sol\":30908:30914  bytes4 */\n      0x00\n        /* \"Farm.sol\":30952:30965  nftCollection */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":30935:30965  IERC721(from) == nftCollection */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":30943:30947  from */\n      dup6\n        /* \"Farm.sol\":30935:30965  IERC721(from) == nftCollection */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Farm.sol\":30927:30998  require(IERC721(from) == nftCollection, \"Not supported NFT Collection\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"Farm.sol\":31023:31083  keccak256(\"onERC721Received(address,address,uint256,bytes)\") */\n      0x150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f\n        /* \"Farm.sol\":31009:31084  return bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\")) */\n      swap1\n      pop\n        /* \"Farm.sol\":30742:31092  function onERC721Received(\r... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Farm.sol\":31947:33011  function withdraw(uint256 _tokenId) external nonReentrant {\r... */\n    tag_29:\n        /* \"Farm.sol\":19226:19247  _nonReentrantBefore() */\n      tag_81\n        /* \"Farm.sol\":19226:19245  _nonReentrantBefore */\n      tag_82\n        /* \"Farm.sol\":19226:19247  _nonReentrantBefore() */\n      jump\t// in\n    tag_81:\n        /* \"Farm.sol\":32073:32074  0 */\n      0x00\n        /* \"Farm.sol\":32038:32045  stakers */\n      0x05\n        /* \"Farm.sol\":32038:32057  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":32046:32056  msg.sender */\n      caller\n        /* \"Farm.sol\":32038:32057  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":32038:32070  stakers[msg.sender].amountStaked */\n      0x00\n      add\n      sload\n        /* \"Farm.sol\":32038:32074  stakers[msg.sender].amountStaked > 0 */\n      gt\n        /* \"Farm.sol\":32016:32127  require(\r... */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"Farm.sol\":32173:32183  msg.sender */\n      caller\n        /* \"Farm.sol\":32146:32183  stakerAddress[_tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":32146:32159  stakerAddress */\n      0x06\n        /* \"Farm.sol\":32146:32169  stakerAddress[_tokenId] */\n      0x00\n        /* \"Farm.sol\":32160:32168  _tokenId */\n      dup4\n        /* \"Farm.sol\":32146:32169  stakerAddress[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":32146:32183  stakerAddress[_tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Farm.sol\":32138:32213  require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"Farm.sol\":32325:32340  uint256 rewards */\n      0x00\n        /* \"Farm.sol\":32343:32371  calculateRewards(msg.sender) */\n      tag_90\n        /* \"Farm.sol\":32360:32370  msg.sender */\n      caller\n        /* \"Farm.sol\":32343:32359  calculateRewards */\n      tag_91\n        /* \"Farm.sol\":32343:32371  calculateRewards(msg.sender) */\n      jump\t// in\n    tag_90:\n        /* \"Farm.sol\":32325:32371  uint256 rewards = calculateRewards(msg.sender) */\n      swap1\n      pop\n        /* \"Farm.sol\":32422:32429  rewards */\n      dup1\n        /* \"Farm.sol\":32382:32389  stakers */\n      0x05\n        /* \"Farm.sol\":32382:32401  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":32390:32400  msg.sender */\n      caller\n        /* \"Farm.sol\":32382:32401  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":32382:32418  stakers[msg.sender].unclaimedRewards */\n      0x03\n      add\n      0x00\n        /* \"Farm.sol\":32382:32429  stakers[msg.sender].unclaimedRewards += rewards */\n      dup3\n      dup3\n      sload\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":32444:32457  uint256 index */\n      0x00\n        /* \"Farm.sol\":32477:32486  uint256 i */\n      dup1\n        /* \"Farm.sol\":32472:32697  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {\r... */\n    tag_94:\n        /* \"Farm.sol\":32496:32503  stakers */\n      0x05\n        /* \"Farm.sol\":32496:32515  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":32504:32514  msg.sender */\n      caller\n        /* \"Farm.sol\":32496:32515  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":32496:32528  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"Farm.sol\":32496:32535  stakers[msg.sender].stakedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farm.sol\":32492:32493  i */\n      dup2\n        /* \"Farm.sol\":32492:32535  i < stakers[msg.sender].stakedTokens.length */\n      lt\n        /* \"Farm.sol\":32472:32697  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {\r... */\n      iszero\n      tag_95\n      jumpi\n        /* \"Farm.sol\":32608:32616  _tokenId */\n      dup4\n        /* \"Farm.sol\":32561:32568  stakers */\n      0x05\n        /* \"Farm.sol\":32561:32580  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":32569:32579  msg.sender */\n      caller\n        /* \"Farm.sol\":32561:32580  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":32561:32593  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"Farm.sol\":32594:32595  i */\n      dup3\n        /* \"Farm.sol\":32561:32596  stakers[msg.sender].stakedTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_97\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_97:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Farm.sol\":32561:32604  stakers[msg.sender].stakedTokens[i].tokenId */\n      0x01\n      add\n      sload\n        /* \"Farm.sol\":32561:32616  stakers[msg.sender].stakedTokens[i].tokenId == _tokenId */\n      eq\n        /* \"Farm.sol\":32557:32686  if (stakers[msg.sender].stakedTokens[i].tokenId == _tokenId) {\r... */\n      iszero\n      tag_99\n      jumpi\n        /* \"Farm.sol\":32645:32646  i */\n      dup1\n        /* \"Farm.sol\":32637:32646  index = i */\n      swap2\n      pop\n        /* \"Farm.sol\":32665:32670  break */\n      jump(tag_95)\n        /* \"Farm.sol\":32557:32686  if (stakers[msg.sender].stakedTokens[i].tokenId == _tokenId) {\r... */\n    tag_99:\n        /* \"Farm.sol\":32537:32540  i++ */\n      dup1\n      dup1\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      swap2\n      pop\n      pop\n        /* \"Farm.sol\":32472:32697  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {\r... */\n      jump(tag_94)\n    tag_95:\n      pop\n        /* \"Farm.sol\":32768:32769  0 */\n      0x00\n        /* \"Farm.sol\":32711:32718  stakers */\n      0x05\n        /* \"Farm.sol\":32711:32730  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":32719:32729  msg.sender */\n      caller\n        /* \"Farm.sol\":32711:32730  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":32711:32743  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"Farm.sol\":32744:32749  index */\n      dup3\n        /* \"Farm.sol\":32711:32750  stakers[msg.sender].stakedTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_102\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_102:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Farm.sol\":32711:32757  stakers[msg.sender].stakedTokens[index].staker */\n      0x00\n      add\n      0x00\n        /* \"Farm.sol\":32711:32770  stakers[msg.sender].stakedTokens[index].staker = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":32781:32788  stakers */\n      0x05\n        /* \"Farm.sol\":32781:32800  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":32789:32799  msg.sender */\n      caller\n        /* \"Farm.sol\":32781:32800  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":32781:32813  stakers[msg.sender].amountStaked */\n      0x00\n      add\n      0x00\n        /* \"Farm.sol\":32781:32815  stakers[msg.sender].amountStaked-- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Farm.sol\":32860:32861  0 */\n      0x00\n        /* \"Farm.sol\":32826:32839  stakerAddress */\n      0x06\n        /* \"Farm.sol\":32826:32849  stakerAddress[_tokenId] */\n      0x00\n        /* \"Farm.sol\":32840:32848  _tokenId */\n      dup6\n        /* \"Farm.sol\":32826:32849  stakerAddress[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Farm.sol\":32826:32862  stakerAddress[_tokenId] = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":32875:32888  nftCollection */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":32875:32901  nftCollection.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Farm.sol\":32910:32914  this */\n      address\n        /* \"Farm.sol\":32917:32927  msg.sender */\n      caller\n        /* \"Farm.sol\":32929:32937  _tokenId */\n      dup7\n        /* \"Farm.sol\":32875:32938  nftCollection.transferFrom(address(this), msg.sender, _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n        /* \"Farm.sol\":32988:33003  block.timestamp */\n      timestamp\n        /* \"Farm.sol\":32949:32956  stakers */\n      0x05\n        /* \"Farm.sol\":32949:32968  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":32957:32967  msg.sender */\n      caller\n        /* \"Farm.sol\":32949:32968  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":32949:32985  stakers[msg.sender].timeOfLastUpdate */\n      0x02\n      add\n        /* \"Farm.sol\":32949:33003  stakers[msg.sender].timeOfLastUpdate = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":19258:19259  _ */\n      pop\n      pop\n        /* \"Farm.sol\":19270:19290  _nonReentrantAfter() */\n      tag_111\n        /* \"Farm.sol\":19270:19288  _nonReentrantAfter */\n      tag_112\n        /* \"Farm.sol\":19270:19290  _nonReentrantAfter() */\n      jump\t// in\n    tag_111:\n        /* \"Farm.sol\":31947:33011  function withdraw(uint256 _tokenId) external nonReentrant {\r... */\n      pop\n      jump\t// out\n        /* \"Farm.sol\":33327:33713  function claimRewards() external {\r... */\n    tag_31:\n        /* \"Farm.sol\":33371:33386  uint256 rewards */\n      0x00\n        /* \"Farm.sol\":33433:33440  stakers */\n      0x05\n        /* \"Farm.sol\":33433:33452  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":33441:33451  msg.sender */\n      caller\n        /* \"Farm.sol\":33433:33452  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":33433:33469  stakers[msg.sender].unclaimedRewards */\n      0x03\n      add\n      sload\n        /* \"Farm.sol\":33389:33417  calculateRewards(msg.sender) */\n      tag_114\n        /* \"Farm.sol\":33406:33416  msg.sender */\n      caller\n        /* \"Farm.sol\":33389:33405  calculateRewards */\n      tag_91\n        /* \"Farm.sol\":33389:33417  calculateRewards(msg.sender) */\n      jump\t// in\n    tag_114:\n        /* \"Farm.sol\":33389:33469  calculateRewards(msg.sender) +\r... */\n      tag_115\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_115:\n        /* \"Farm.sol\":33371:33469  uint256 rewards = calculateRewards(msg.sender) +\r... */\n      swap1\n      pop\n        /* \"Farm.sol\":33498:33499  0 */\n      0x00\n        /* \"Farm.sol\":33488:33495  rewards */\n      dup2\n        /* \"Farm.sol\":33488:33499  rewards > 0 */\n      gt\n        /* \"Farm.sol\":33480:33532  require(rewards > 0, \"You have no rewards to claim\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"Farm.sol\":33582:33597  block.timestamp */\n      timestamp\n        /* \"Farm.sol\":33543:33550  stakers */\n      0x05\n        /* \"Farm.sol\":33543:33562  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":33551:33561  msg.sender */\n      caller\n        /* \"Farm.sol\":33543:33562  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":33543:33579  stakers[msg.sender].timeOfLastUpdate */\n      0x02\n      add\n        /* \"Farm.sol\":33543:33597  stakers[msg.sender].timeOfLastUpdate = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":33647:33648  0 */\n      0x00\n        /* \"Farm.sol\":33608:33615  stakers */\n      0x05\n        /* \"Farm.sol\":33608:33627  stakers[msg.sender] */\n      0x00\n        /* \"Farm.sol\":33616:33626  msg.sender */\n      caller\n        /* \"Farm.sol\":33608:33627  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":33608:33644  stakers[msg.sender].unclaimedRewards */\n      0x03\n      add\n        /* \"Farm.sol\":33608:33648  stakers[msg.sender].unclaimedRewards = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":33659:33705  rewardsToken.safeTransfer(msg.sender, rewards) */\n      tag_119\n        /* \"Farm.sol\":33685:33695  msg.sender */\n      caller\n        /* \"Farm.sol\":33697:33704  rewards */\n      dup3\n        /* \"Farm.sol\":33659:33671  rewardsToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":33659:33684  rewardsToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_120\n      swap1\n        /* \"Farm.sol\":33659:33705  rewardsToken.safeTransfer(msg.sender, rewards) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"Farm.sol\":33327:33713  function claimRewards() external {\r... */\n      pop\n      jump\t// out\n        /* \"Farm.sol\":16842:16928  function paused() public view virtual returns (bool) {\r... */\n    tag_33:\n        /* \"Farm.sol\":16889:16893  bool */\n      0x00\n        /* \"Farm.sol\":16913:16920  _paused */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Farm.sol\":16906:16920  return _paused */\n      swap1\n      pop\n        /* \"Farm.sol\":16842:16928  function paused() public view virtual returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"Farm.sol\":33721:34401  function getStakedTokens(address _user) public view returns (StakedToken[] memory) {\r... */\n    tag_39:\n        /* \"Farm.sol\":33782:33802  StakedToken[] memory */\n      0x60\n        /* \"Farm.sol\":33849:33850  0 */\n      0x00\n        /* \"Farm.sol\":33819:33826  stakers */\n      0x05\n        /* \"Farm.sol\":33819:33833  stakers[_user] */\n      0x00\n        /* \"Farm.sol\":33827:33832  _user */\n      dup5\n        /* \"Farm.sol\":33819:33833  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":33819:33846  stakers[_user].amountStaked */\n      0x00\n      add\n      sload\n        /* \"Farm.sol\":33819:33850  stakers[_user].amountStaked > 0 */\n      gt\n        /* \"Farm.sol\":33815:34394  if (stakers[_user].amountStaked > 0) {\r... */\n      iszero\n      tag_123\n      jumpi\n        /* \"Farm.sol\":33867:33901  StakedToken[] memory _stakedTokens */\n      0x00\n        /* \"Farm.sol\":33922:33929  stakers */\n      0x05\n        /* \"Farm.sol\":33922:33936  stakers[_user] */\n      0x00\n        /* \"Farm.sol\":33930:33935  _user */\n      dup5\n        /* \"Farm.sol\":33922:33936  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":33922:33949  stakers[_user].amountStaked */\n      0x00\n      add\n      sload\n        /* \"Farm.sol\":33904:33950  new StakedToken[](stakers[_user].amountStaked) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_124\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_124:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_125\n      jumpi\n      dup2\n      0x20\n      add\n    tag_126:\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_126\n      jumpi\n      swap1\n      pop\n    tag_125:\n      pop\n        /* \"Farm.sol\":33867:33950  StakedToken[] memory _stakedTokens = new StakedToken[](stakers[_user].amountStaked) */\n      swap1\n      pop\n        /* \"Farm.sol\":33965:33979  uint256 _index */\n      0x00\n        /* \"Farm.sol\":34005:34014  uint256 j */\n      dup1\n        /* \"Farm.sol\":34000:34286  for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {\r... */\n    tag_129:\n        /* \"Farm.sol\":34024:34031  stakers */\n      0x05\n        /* \"Farm.sol\":34024:34038  stakers[_user] */\n      0x00\n        /* \"Farm.sol\":34032:34037  _user */\n      dup7\n        /* \"Farm.sol\":34024:34038  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":34024:34051  stakers[_user].stakedTokens */\n      0x01\n      add\n        /* \"Farm.sol\":34024:34058  stakers[_user].stakedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farm.sol\":34020:34021  j */\n      dup2\n        /* \"Farm.sol\":34020:34058  j < stakers[_user].stakedTokens.length */\n      lt\n        /* \"Farm.sol\":34000:34286  for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {\r... */\n      iszero\n      tag_130\n      jumpi\n        /* \"Farm.sol\":34138:34139  0 */\n      0x00\n        /* \"Farm.sol\":34088:34141  stakers[_user].stakedTokens[j].staker != (address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":34088:34095  stakers */\n      0x05\n        /* \"Farm.sol\":34088:34102  stakers[_user] */\n      0x00\n        /* \"Farm.sol\":34096:34101  _user */\n      dup8\n        /* \"Farm.sol\":34088:34102  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":34088:34115  stakers[_user].stakedTokens */\n      0x01\n      add\n        /* \"Farm.sol\":34116:34117  j */\n      dup3\n        /* \"Farm.sol\":34088:34118  stakers[_user].stakedTokens[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_132\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_132:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Farm.sol\":34088:34125  stakers[_user].stakedTokens[j].staker */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":34088:34141  stakers[_user].stakedTokens[j].staker != (address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Farm.sol\":34084:34271  if (stakers[_user].stakedTokens[j].staker != (address(0))) {\r... */\n      tag_134\n      jumpi\n        /* \"Farm.sol\":34190:34197  stakers */\n      0x05\n        /* \"Farm.sol\":34190:34204  stakers[_user] */\n      0x00\n        /* \"Farm.sol\":34198:34203  _user */\n      dup7\n        /* \"Farm.sol\":34190:34204  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":34190:34217  stakers[_user].stakedTokens */\n      0x01\n      add\n        /* \"Farm.sol\":34218:34219  j */\n      dup2\n        /* \"Farm.sol\":34190:34220  stakers[_user].stakedTokens[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_135\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_135:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Farm.sol\":34166:34220  _stakedTokens[_index] = stakers[_user].stakedTokens[j] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Farm.sol\":34166:34179  _stakedTokens */\n      dup4\n        /* \"Farm.sol\":34180:34186  _index */\n      dup4\n        /* \"Farm.sol\":34166:34187  _stakedTokens[_index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_137\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_137:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"Farm.sol\":34166:34220  _stakedTokens[_index] = stakers[_user].stakedTokens[j] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"Farm.sol\":34243:34251  _index++ */\n      dup2\n      dup1\n      tag_138\n      swap1\n      tag_101\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n        /* \"Farm.sol\":34084:34271  if (stakers[_user].stakedTokens[j].staker != (address(0))) {\r... */\n    tag_134:\n        /* \"Farm.sol\":34060:34063  j++ */\n      dup1\n      dup1\n      tag_139\n      swap1\n      tag_101\n      jump\t// in\n    tag_139:\n      swap2\n      pop\n      pop\n        /* \"Farm.sol\":34000:34286  for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {\r... */\n      jump(tag_129)\n    tag_130:\n      pop\n        /* \"Farm.sol\":34309:34322  _stakedTokens */\n      dup2\n        /* \"Farm.sol\":34302:34322  return _stakedTokens */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_122)\n        /* \"Farm.sol\":33815:34394  if (stakers[_user].amountStaked > 0) {\r... */\n    tag_123:\n        /* \"Farm.sol\":34380:34381  0 */\n      0x00\n        /* \"Farm.sol\":34362:34382  new StakedToken[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_141\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_141:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_142\n      jumpi\n      dup2\n      0x20\n      add\n    tag_143:\n      tag_144\n      tag_128\n      jump\t// in\n    tag_144:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_143\n      jumpi\n      swap1\n      pop\n    tag_142:\n      pop\n        /* \"Farm.sol\":34355:34382  return new StakedToken[](0) */\n      swap1\n      pop\n        /* \"Farm.sol\":33721:34401  function getStakedTokens(address _user) public view returns (StakedToken[] memory) {\r... */\n    tag_122:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Farm.sol\":30197:30225  IERC721 public nftCollection */\n    tag_43:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Farm.sol\":28929:29032  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_47:\n        /* \"Farm.sol\":28167:28180  _checkOwner() */\n      tag_146\n        /* \"Farm.sol\":28167:28178  _checkOwner */\n      tag_147\n        /* \"Farm.sol\":28167:28180  _checkOwner() */\n      jump\t// in\n    tag_146:\n        /* \"Farm.sol\":28994:29024  _transferOwnership(address(0)) */\n      tag_149\n        /* \"Farm.sol\":29021:29022  0 */\n      0x00\n        /* \"Farm.sol\":28994:29012  _transferOwnership */\n      tag_150\n        /* \"Farm.sol\":28994:29024  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_149:\n        /* \"Farm.sol\":28929:29032  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"Farm.sol\":28281:28368  function owner() public view virtual returns (address) {\r... */\n    tag_49:\n        /* \"Farm.sol\":28327:28334  address */\n      0x00\n        /* \"Farm.sol\":28354:28360  _owner */\n      0x01\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":28347:28360  return _owner */\n      swap1\n      pop\n        /* \"Farm.sol\":28281:28368  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Farm.sol\":30336:30377  mapping(address => Staker) public stakers */\n    tag_54:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"Farm.sol\":30463:30511  mapping(uint256 => address) public stakerAddress */\n    tag_59:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Farm.sol\":31866:31939  function stake(uint256 _tokenId) external nonReentrant {\r... */\n    tag_63:\n        /* \"Farm.sol\":19226:19247  _nonReentrantBefore() */\n      tag_153\n        /* \"Farm.sol\":19226:19245  _nonReentrantBefore */\n      tag_82\n        /* \"Farm.sol\":19226:19247  _nonReentrantBefore() */\n      jump\t// in\n    tag_153:\n        /* \"Farm.sol\":19270:19290  _nonReentrantAfter() */\n      tag_155\n        /* \"Farm.sol\":19270:19288  _nonReentrantAfter */\n      tag_112\n        /* \"Farm.sol\":19270:19290  _nonReentrantAfter() */\n      jump\t// in\n    tag_155:\n        /* \"Farm.sol\":31866:31939  function stake(uint256 _tokenId) external nonReentrant {\r... */\n      pop\n      jump\t// out\n        /* \"Farm.sol\":30164:30190  IERC20 public rewardsToken */\n    tag_65:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Farm.sol\":29187:29388  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_70:\n        /* \"Farm.sol\":28167:28180  _checkOwner() */\n      tag_157\n        /* \"Farm.sol\":28167:28178  _checkOwner */\n      tag_147\n        /* \"Farm.sol\":28167:28180  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"Farm.sol\":29296:29297  0 */\n      0x00\n        /* \"Farm.sol\":29276:29298  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":29276:29284  newOwner */\n      dup2\n        /* \"Farm.sol\":29276:29298  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Farm.sol\":29268:29341  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"Farm.sol\":29352:29380  _transferOwnership(newOwner) */\n      tag_162\n        /* \"Farm.sol\":29371:29379  newOwner */\n      dup2\n        /* \"Farm.sol\":29352:29370  _transferOwnership */\n      tag_150\n        /* \"Farm.sol\":29352:29380  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_162:\n        /* \"Farm.sol\":29187:29388  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Farm.sol\":34409:34618  function availableRewards(address _staker) public view returns (uint256) {\r... */\n    tag_73:\n        /* \"Farm.sol\":34473:34480  uint256 */\n      0x00\n        /* \"Farm.sol\":34493:34508  uint256 rewards */\n      dup1\n        /* \"Farm.sol\":34552:34559  stakers */\n      0x05\n        /* \"Farm.sol\":34552:34568  stakers[_staker] */\n      0x00\n        /* \"Farm.sol\":34560:34567  _staker */\n      dup5\n        /* \"Farm.sol\":34552:34568  stakers[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":34552:34585  stakers[_staker].unclaimedRewards */\n      0x03\n      add\n      sload\n        /* \"Farm.sol\":34511:34536  calculateRewards(_staker) */\n      tag_164\n        /* \"Farm.sol\":34528:34535  _staker */\n      dup5\n        /* \"Farm.sol\":34511:34527  calculateRewards */\n      tag_91\n        /* \"Farm.sol\":34511:34536  calculateRewards(_staker) */\n      jump\t// in\n    tag_164:\n        /* \"Farm.sol\":34511:34585  calculateRewards(_staker) +\r... */\n      tag_165\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_165:\n        /* \"Farm.sol\":34493:34585  uint256 rewards = calculateRewards(_staker) +\r... */\n      swap1\n      pop\n        /* \"Farm.sol\":34603:34610  rewards */\n      dup1\n        /* \"Farm.sol\":34596:34610  return rewards */\n      swap2\n      pop\n      pop\n        /* \"Farm.sol\":34409:34618  function availableRewards(address _staker) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Farm.sol\":19306:19595  function _nonReentrantBefore() private {\r... */\n    tag_82:\n        /* \"Farm.sol\":18708:18709  2 */\n      0x02\n        /* \"Farm.sol\":19436:19443  _status */\n      sload(0x00)\n        /* \"Farm.sol\":19436:19455  _status != _ENTERED */\n      eq\n      iszero\n        /* \"Farm.sol\":19428:19491  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"Farm.sol\":18708:18709  2 */\n      0x02\n        /* \"Farm.sol\":19569:19576  _status */\n      0x00\n        /* \"Farm.sol\":19569:19587  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":19306:19595  function _nonReentrantBefore() private {\r... */\n      jump\t// out\n        /* \"Farm.sol\":33019:33319  function calculateRewards(address _staker)\r... */\n    tag_91:\n        /* \"Farm.sol\":33112:33128  uint256 _rewards */\n      0x00\n        /* \"Farm.sol\":33306:33310  3600 */\n      0x0e10\n        /* \"Farm.sol\":33288:33302  rewardsPerHour */\n      sload(0x04)\n        /* \"Farm.sol\":33244:33251  stakers */\n      0x05\n        /* \"Farm.sol\":33244:33260  stakers[_staker] */\n      0x00\n        /* \"Farm.sol\":33252:33259  _staker */\n      dup6\n        /* \"Farm.sol\":33244:33260  stakers[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":33244:33273  stakers[_staker].amountStaked */\n      0x00\n      add\n      sload\n        /* \"Farm.sol\":33190:33197  stakers */\n      0x05\n        /* \"Farm.sol\":33190:33206  stakers[_staker] */\n      0x00\n        /* \"Farm.sol\":33198:33205  _staker */\n      dup7\n        /* \"Farm.sol\":33190:33206  stakers[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farm.sol\":33190:33223  stakers[_staker].timeOfLastUpdate */\n      0x02\n      add\n      sload\n        /* \"Farm.sol\":33172:33187  block.timestamp */\n      timestamp\n        /* \"Farm.sol\":33172:33223  block.timestamp - stakers[_staker].timeOfLastUpdate */\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"Farm.sol\":33171:33273  (block.timestamp - stakers[_staker].timeOfLastUpdate) *\r... */\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"Farm.sol\":33155:33302  (\r... */\n      tag_175\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_175:\n        /* \"Farm.sol\":33154:33310  ((\r... */\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"Farm.sol\":33146:33311  return (((\r... */\n      swap1\n      pop\n        /* \"Farm.sol\":33019:33319  function calculateRewards(address _staker)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Farm.sol\":19603:19816  function _nonReentrantAfter() private {\r... */\n    tag_112:\n        /* \"Farm.sol\":18664:18665  1 */\n      0x01\n        /* \"Farm.sol\":19786:19793  _status */\n      0x00\n        /* \"Farm.sol\":19786:19808  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":19603:19816  function _nonReentrantAfter() private {\r... */\n      jump\t// out\n        /* \"Farm.sol\":24638:24815  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n    tag_120:\n        /* \"Farm.sol\":24721:24807  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_180\n        /* \"Farm.sol\":24741:24746  token */\n      dup4\n        /* \"Farm.sol\":24771:24794  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"Farm.sol\":24796:24798  to */\n      dup5\n        /* \"Farm.sol\":24800:24805  value */\n      dup5\n        /* \"Farm.sol\":24748:24806  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_181\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Farm.sol\":24721:24740  _callOptionalReturn */\n      tag_183\n        /* \"Farm.sol\":24721:24807  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_180:\n        /* \"Farm.sol\":24638:24815  function safeTransfer(IERC20 token, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Farm.sol\":28446:28578  function _checkOwner() internal view virtual {\r... */\n    tag_147:\n        /* \"Farm.sol\":28521:28533  _msgSender() */\n      tag_185\n        /* \"Farm.sol\":28521:28531  _msgSender */\n      tag_186\n        /* \"Farm.sol\":28521:28533  _msgSender() */\n      jump\t// in\n    tag_185:\n        /* \"Farm.sol\":28510:28533  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":28510:28517  owner() */\n      tag_187\n        /* \"Farm.sol\":28510:28515  owner */\n      tag_49\n        /* \"Farm.sol\":28510:28517  owner() */\n      jump\t// in\n    tag_187:\n        /* \"Farm.sol\":28510:28533  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Farm.sol\":28502:28570  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"Farm.sol\":28446:28578  function _checkOwner() internal view virtual {\r... */\n      jump\t// out\n        /* \"Farm.sol\":29548:29739  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_150:\n        /* \"Farm.sol\":29622:29638  address oldOwner */\n      0x00\n        /* \"Farm.sol\":29641:29647  _owner */\n      0x01\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":29622:29647  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Farm.sol\":29667:29675  newOwner */\n      dup2\n        /* \"Farm.sol\":29658:29664  _owner */\n      0x01\n      dup1\n        /* \"Farm.sol\":29658:29675  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Farm.sol\":29722:29730  newOwner */\n      dup2\n        /* \"Farm.sol\":29691:29731  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":29712:29720  oldOwner */\n      dup2\n        /* \"Farm.sol\":29691:29731  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Farm.sol\":29548:29739  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Farm.sol\":26943:27704  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n    tag_183:\n        /* \"Farm.sol\":27367:27390  bytes memory returndata */\n      0x00\n        /* \"Farm.sol\":27393:27462  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_193\n        /* \"Farm.sol\":27421:27425  data */\n      dup3\n        /* \"Farm.sol\":27393:27462  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"Farm.sol\":27401:27406  token */\n      dup6\n        /* \"Farm.sol\":27393:27420  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_194\n      swap1\n        /* \"Farm.sol\":27393:27462  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_193:\n        /* \"Farm.sol\":27367:27462  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"Farm.sol\":27497:27498  0 */\n      0x00\n        /* \"Farm.sol\":27477:27487  returndata */\n      dup2\n        /* \"Farm.sol\":27477:27494  returndata.length */\n      mload\n        /* \"Farm.sol\":27477:27498  returndata.length > 0 */\n      gt\n        /* \"Farm.sol\":27473:27697  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_195\n      jumpi\n        /* \"Farm.sol\":27619:27629  returndata */\n      dup1\n        /* \"Farm.sol\":27608:27638  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"Farm.sol\":27600:27685  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"Farm.sol\":27473:27697  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_195:\n        /* \"Farm.sol\":26943:27704  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Farm.sol\":15568:15666  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_186:\n        /* \"Farm.sol\":15621:15628  address */\n      0x00\n        /* \"Farm.sol\":15648:15658  msg.sender */\n      caller\n        /* \"Farm.sol\":15641:15658  return msg.sender */\n      swap1\n      pop\n        /* \"Farm.sol\":15568:15666  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Farm.sol\":9557:9752  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_194:\n        /* \"Farm.sol\":9660:9672  bytes memory */\n      0x60\n        /* \"Farm.sol\":9692:9744  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_203\n        /* \"Farm.sol\":9714:9720  target */\n      dup5\n        /* \"Farm.sol\":9722:9726  data */\n      dup5\n        /* \"Farm.sol\":9728:9729  0 */\n      0x00\n        /* \"Farm.sol\":9731:9743  errorMessage */\n      dup6\n        /* \"Farm.sol\":9692:9713  functionCallWithValue */\n      tag_204\n        /* \"Farm.sol\":9692:9744  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_203:\n        /* \"Farm.sol\":9685:9744  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"Farm.sol\":9557:9752  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Farm.sol\":10609:11139  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_204:\n        /* \"Farm.sol\":10736:10748  bytes memory */\n      0x60\n        /* \"Farm.sol\":10794:10799  value */\n      dup3\n        /* \"Farm.sol\":10769:10790  address(this).balance */\n      selfbalance\n        /* \"Farm.sol\":10769:10799  address(this).balance >= value */\n      lt\n      iszero\n        /* \"Farm.sol\":10761:10842  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"Farm.sol\":10861:10879  isContract(target) */\n      tag_209\n        /* \"Farm.sol\":10872:10878  target */\n      dup6\n        /* \"Farm.sol\":10861:10871  isContract */\n      tag_210\n        /* \"Farm.sol\":10861:10879  isContract(target) */\n      jump\t// in\n    tag_209:\n        /* \"Farm.sol\":10853:10913  require(isContract(target), \"Address: call to non-contract\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"Farm.sol\":10987:10999  bool success */\n      0x00\n        /* \"Farm.sol\":11001:11024  bytes memory returndata */\n      dup1\n        /* \"Farm.sol\":11028:11034  target */\n      dup7\n        /* \"Farm.sol\":11028:11039  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farm.sol\":11048:11053  value */\n      dup6\n        /* \"Farm.sol\":11056:11060  data */\n      dup8\n        /* \"Farm.sol\":11028:11061  target.call{ value: value }(data) */\n      mload(0x40)\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_218\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_217)\n    tag_218:\n      0x60\n      swap2\n      pop\n    tag_217:\n      pop\n        /* \"Farm.sol\":10986:11061  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Farm.sol\":11079:11131  _verifyCallResult(success, returndata, errorMessage) */\n      tag_219\n        /* \"Farm.sol\":11097:11104  success */\n      dup3\n        /* \"Farm.sol\":11106:11116  returndata */\n      dup3\n        /* \"Farm.sol\":11118:11130  errorMessage */\n      dup7\n        /* \"Farm.sol\":11079:11096  _verifyCallResult */\n      tag_220\n        /* \"Farm.sol\":11079:11131  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_219:\n        /* \"Farm.sol\":11072:11131  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Farm.sol\":10609:11139  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Farm.sol\":6639:7061  function isContract(address account) internal view returns (bool) {\r... */\n    tag_210:\n        /* \"Farm.sol\":6699:6703  bool */\n      0x00\n        /* \"Farm.sol\":6907:6919  uint256 size */\n      dup1\n        /* \"Farm.sol\":7018:7025  account */\n      dup3\n        /* \"Farm.sol\":7006:7026  extcodesize(account) */\n      extcodesize\n        /* \"Farm.sol\":6998:7026  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"Farm.sol\":7052:7053  0 */\n      0x00\n        /* \"Farm.sol\":7045:7049  size */\n      dup2\n        /* \"Farm.sol\":7045:7053  size > 0 */\n      gt\n        /* \"Farm.sol\":7038:7053  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"Farm.sol\":6639:7061  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Farm.sol\":12145:12887  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r... */\n    tag_220:\n        /* \"Farm.sol\":12260:12272  bytes memory */\n      0x60\n        /* \"Farm.sol\":12289:12296  success */\n      dup4\n        /* \"Farm.sol\":12285:12880  if (success) {\r... */\n      iszero\n      tag_223\n      jumpi\n        /* \"Farm.sol\":12320:12330  returndata */\n      dup3\n        /* \"Farm.sol\":12313:12330  return returndata */\n      swap1\n      pop\n      jump(tag_222)\n        /* \"Farm.sol\":12285:12880  if (success) {\r... */\n    tag_223:\n        /* \"Farm.sol\":12454:12455  0 */\n      0x00\n        /* \"Farm.sol\":12434:12444  returndata */\n      dup4\n        /* \"Farm.sol\":12434:12451  returndata.length */\n      mload\n        /* \"Farm.sol\":12434:12455  returndata.length > 0 */\n      gt\n        /* \"Farm.sol\":12430:12869  if (returndata.length > 0) {\r... */\n      iszero\n      tag_225\n      jumpi\n        /* \"Farm.sol\":12697:12707  returndata */\n      dup3\n        /* \"Farm.sol\":12691:12708  mload(returndata) */\n      mload\n        /* \"Farm.sol\":12758:12773  returndata_size */\n      dup1\n        /* \"Farm.sol\":12745:12755  returndata */\n      dup5\n        /* \"Farm.sol\":12741:12743  32 */\n      0x20\n        /* \"Farm.sol\":12737:12756  add(32, returndata) */\n      add\n        /* \"Farm.sol\":12730:12774  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"Farm.sol\":12645:12793  {\r... */\n    tag_225:\n        /* \"Farm.sol\":12840:12852  errorMessage */\n      dup2\n        /* \"Farm.sol\":12833:12853  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Farm.sol\":12145:12887  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\r... */\n    tag_222:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_128:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_230:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_232\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_234:\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_236\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":212:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":308:659   */\n    tag_238:\n      0x00\n      dup1\n        /* \"#utility.yul\":425:428   */\n      dup4\n        /* \"#utility.yul\":418:422   */\n      0x1f\n        /* \"#utility.yul\":410:416   */\n      dup5\n        /* \"#utility.yul\":406:423   */\n      add\n        /* \"#utility.yul\":402:429   */\n      slt\n        /* \"#utility.yul\":392:394   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":392:394   */\n    tag_240:\n        /* \"#utility.yul\":479:485   */\n      dup3\n        /* \"#utility.yul\":466:486   */\n      calldataload\n        /* \"#utility.yul\":456:486   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:527   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":501:507   */\n      dup2\n        /* \"#utility.yul\":498:528   */\n      gt\n        /* \"#utility.yul\":495:497   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":541:542   */\n      0x00\n        /* \"#utility.yul\":538:539   */\n      dup1\n        /* \"#utility.yul\":531:543   */\n      revert\n        /* \"#utility.yul\":495:497   */\n    tag_241:\n        /* \"#utility.yul\":578:582   */\n      0x20\n        /* \"#utility.yul\":570:576   */\n      dup4\n        /* \"#utility.yul\":566:583   */\n      add\n        /* \"#utility.yul\":554:583   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:635   */\n      dup4\n        /* \"#utility.yul\":624:628   */\n      0x01\n        /* \"#utility.yul\":616:622   */\n      dup3\n        /* \"#utility.yul\":612:629   */\n      mul\n        /* \"#utility.yul\":602:610   */\n      dup4\n        /* \"#utility.yul\":598:630   */\n      add\n        /* \"#utility.yul\":595:636   */\n      gt\n        /* \"#utility.yul\":592:594   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":649:650   */\n      0x00\n        /* \"#utility.yul\":646:647   */\n      dup1\n        /* \"#utility.yul\":639:651   */\n      revert\n        /* \"#utility.yul\":592:594   */\n    tag_242:\n        /* \"#utility.yul\":382:659   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":665:804   */\n    tag_243:\n      0x00\n        /* \"#utility.yul\":749:755   */\n      dup2\n        /* \"#utility.yul\":736:756   */\n      calldataload\n        /* \"#utility.yul\":727:756   */\n      swap1\n      pop\n        /* \"#utility.yul\":765:798   */\n      tag_245\n        /* \"#utility.yul\":792:797   */\n      dup2\n        /* \"#utility.yul\":765:798   */\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":717:804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":810:1072   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":918:920   */\n      0x20\n        /* \"#utility.yul\":906:915   */\n      dup3\n        /* \"#utility.yul\":897:904   */\n      dup5\n        /* \"#utility.yul\":893:916   */\n      sub\n        /* \"#utility.yul\":889:921   */\n      slt\n        /* \"#utility.yul\":886:888   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":934:935   */\n      0x00\n        /* \"#utility.yul\":931:932   */\n      dup1\n        /* \"#utility.yul\":924:936   */\n      revert\n        /* \"#utility.yul\":886:888   */\n    tag_248:\n        /* \"#utility.yul\":977:978   */\n      0x00\n        /* \"#utility.yul\":1002:1055   */\n      tag_249\n        /* \"#utility.yul\":1047:1054   */\n      dup5\n        /* \"#utility.yul\":1038:1044   */\n      dup3\n        /* \"#utility.yul\":1027:1036   */\n      dup6\n        /* \"#utility.yul\":1023:1045   */\n      add\n        /* \"#utility.yul\":1002:1055   */\n      tag_230\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":992:1055   */\n      swap2\n      pop\n        /* \"#utility.yul\":948:1065   */\n      pop\n        /* \"#utility.yul\":876:1072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1907   */\n    tag_22:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1256:1259   */\n      0x80\n        /* \"#utility.yul\":1244:1253   */\n      dup7\n        /* \"#utility.yul\":1235:1242   */\n      dup9\n        /* \"#utility.yul\":1231:1254   */\n      sub\n        /* \"#utility.yul\":1227:1260   */\n      slt\n        /* \"#utility.yul\":1224:1226   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":1273:1274   */\n      0x00\n        /* \"#utility.yul\":1270:1271   */\n      dup1\n        /* \"#utility.yul\":1263:1275   */\n      revert\n        /* \"#utility.yul\":1224:1226   */\n    tag_251:\n        /* \"#utility.yul\":1316:1317   */\n      0x00\n        /* \"#utility.yul\":1341:1394   */\n      tag_252\n        /* \"#utility.yul\":1386:1393   */\n      dup9\n        /* \"#utility.yul\":1377:1383   */\n      dup3\n        /* \"#utility.yul\":1366:1375   */\n      dup10\n        /* \"#utility.yul\":1362:1384   */\n      add\n        /* \"#utility.yul\":1341:1394   */\n      tag_230\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":1331:1394   */\n      swap6\n      pop\n        /* \"#utility.yul\":1287:1404   */\n      pop\n        /* \"#utility.yul\":1443:1445   */\n      0x20\n        /* \"#utility.yul\":1469:1522   */\n      tag_253\n        /* \"#utility.yul\":1514:1521   */\n      dup9\n        /* \"#utility.yul\":1505:1511   */\n      dup3\n        /* \"#utility.yul\":1494:1503   */\n      dup10\n        /* \"#utility.yul\":1490:1512   */\n      add\n        /* \"#utility.yul\":1469:1522   */\n      tag_230\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1459:1522   */\n      swap5\n      pop\n        /* \"#utility.yul\":1414:1532   */\n      pop\n        /* \"#utility.yul\":1571:1573   */\n      0x40\n        /* \"#utility.yul\":1597:1650   */\n      tag_254\n        /* \"#utility.yul\":1642:1649   */\n      dup9\n        /* \"#utility.yul\":1633:1639   */\n      dup3\n        /* \"#utility.yul\":1622:1631   */\n      dup10\n        /* \"#utility.yul\":1618:1640   */\n      add\n        /* \"#utility.yul\":1597:1650   */\n      tag_243\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":1587:1650   */\n      swap4\n      pop\n        /* \"#utility.yul\":1542:1660   */\n      pop\n        /* \"#utility.yul\":1727:1729   */\n      0x60\n        /* \"#utility.yul\":1716:1725   */\n      dup7\n        /* \"#utility.yul\":1712:1730   */\n      add\n        /* \"#utility.yul\":1699:1731   */\n      calldataload\n        /* \"#utility.yul\":1758:1776   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1750:1756   */\n      dup2\n        /* \"#utility.yul\":1747:1777   */\n      gt\n        /* \"#utility.yul\":1744:1746   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":1790:1791   */\n      0x00\n        /* \"#utility.yul\":1787:1788   */\n      dup1\n        /* \"#utility.yul\":1780:1792   */\n      revert\n        /* \"#utility.yul\":1744:1746   */\n    tag_255:\n        /* \"#utility.yul\":1826:1890   */\n      tag_256\n        /* \"#utility.yul\":1882:1889   */\n      dup9\n        /* \"#utility.yul\":1873:1879   */\n      dup3\n        /* \"#utility.yul\":1862:1871   */\n      dup10\n        /* \"#utility.yul\":1858:1880   */\n      add\n        /* \"#utility.yul\":1826:1890   */\n      tag_238\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":1808:1890   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":1670:1900   */\n      pop\n        /* \"#utility.yul\":1214:1907   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1913:2191   */\n    tag_197:\n      0x00\n        /* \"#utility.yul\":2029:2031   */\n      0x20\n        /* \"#utility.yul\":2017:2026   */\n      dup3\n        /* \"#utility.yul\":2008:2015   */\n      dup5\n        /* \"#utility.yul\":2004:2027   */\n      sub\n        /* \"#utility.yul\":2000:2032   */\n      slt\n        /* \"#utility.yul\":1997:1999   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2045:2046   */\n      0x00\n        /* \"#utility.yul\":2042:2043   */\n      dup1\n        /* \"#utility.yul\":2035:2047   */\n      revert\n        /* \"#utility.yul\":1997:1999   */\n    tag_258:\n        /* \"#utility.yul\":2088:2089   */\n      0x00\n        /* \"#utility.yul\":2113:2174   */\n      tag_259\n        /* \"#utility.yul\":2166:2173   */\n      dup5\n        /* \"#utility.yul\":2157:2163   */\n      dup3\n        /* \"#utility.yul\":2146:2155   */\n      dup6\n        /* \"#utility.yul\":2142:2164   */\n      add\n        /* \"#utility.yul\":2113:2174   */\n      tag_234\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2103:2174   */\n      swap2\n      pop\n        /* \"#utility.yul\":2059:2184   */\n      pop\n        /* \"#utility.yul\":1987:2191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2197:2459   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":2305:2307   */\n      0x20\n        /* \"#utility.yul\":2293:2302   */\n      dup3\n        /* \"#utility.yul\":2284:2291   */\n      dup5\n        /* \"#utility.yul\":2280:2303   */\n      sub\n        /* \"#utility.yul\":2276:2308   */\n      slt\n        /* \"#utility.yul\":2273:2275   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":2321:2322   */\n      0x00\n        /* \"#utility.yul\":2318:2319   */\n      dup1\n        /* \"#utility.yul\":2311:2323   */\n      revert\n        /* \"#utility.yul\":2273:2275   */\n    tag_261:\n        /* \"#utility.yul\":2364:2365   */\n      0x00\n        /* \"#utility.yul\":2389:2442   */\n      tag_262\n        /* \"#utility.yul\":2434:2441   */\n      dup5\n        /* \"#utility.yul\":2425:2431   */\n      dup3\n        /* \"#utility.yul\":2414:2423   */\n      dup6\n        /* \"#utility.yul\":2410:2432   */\n      add\n        /* \"#utility.yul\":2389:2442   */\n      tag_243\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2379:2442   */\n      swap2\n      pop\n        /* \"#utility.yul\":2335:2452   */\n      pop\n        /* \"#utility.yul\":2263:2459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2465:2760   */\n    tag_263:\n      0x00\n        /* \"#utility.yul\":2613:2717   */\n      tag_265\n        /* \"#utility.yul\":2713:2716   */\n      dup4\n        /* \"#utility.yul\":2705:2711   */\n      dup4\n        /* \"#utility.yul\":2613:2717   */\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2749:2753   */\n      0x40\n        /* \"#utility.yul\":2744:2747   */\n      dup4\n        /* \"#utility.yul\":2740:2754   */\n      add\n        /* \"#utility.yul\":2726:2754   */\n      swap1\n      pop\n        /* \"#utility.yul\":2603:2760   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2766:2874   */\n    tag_267:\n        /* \"#utility.yul\":2843:2867   */\n      tag_269\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2843:2867   */\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2838:2841   */\n      dup3\n        /* \"#utility.yul\":2831:2868   */\n      mstore\n        /* \"#utility.yul\":2821:2874   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2880:2998   */\n    tag_271:\n        /* \"#utility.yul\":2967:2991   */\n      tag_273\n        /* \"#utility.yul\":2985:2990   */\n      dup2\n        /* \"#utility.yul\":2967:2991   */\n      tag_270\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2962:2965   */\n      dup3\n        /* \"#utility.yul\":2955:2992   */\n      mstore\n        /* \"#utility.yul\":2945:2998   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3066:4030   */\n    tag_274:\n      0x00\n        /* \"#utility.yul\":3272:3355   */\n      tag_276\n        /* \"#utility.yul\":3349:3354   */\n      dup3\n        /* \"#utility.yul\":3272:3355   */\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3371:3486   */\n      tag_278\n        /* \"#utility.yul\":3479:3485   */\n      dup2\n        /* \"#utility.yul\":3474:3477   */\n      dup6\n        /* \"#utility.yul\":3371:3486   */\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":3364:3486   */\n      swap4\n      pop\n        /* \"#utility.yul\":3510:3595   */\n      tag_280\n        /* \"#utility.yul\":3589:3594   */\n      dup4\n        /* \"#utility.yul\":3510:3595   */\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3618:3625   */\n      dup1\n        /* \"#utility.yul\":3649:3650   */\n      0x00\n        /* \"#utility.yul\":3634:4005   */\n    tag_282:\n        /* \"#utility.yul\":3659:3665   */\n      dup4\n        /* \"#utility.yul\":3656:3657   */\n      dup2\n        /* \"#utility.yul\":3653:3666   */\n      lt\n        /* \"#utility.yul\":3634:4005   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":3735:3741   */\n      dup2\n        /* \"#utility.yul\":3729:3742   */\n      mload\n        /* \"#utility.yul\":3762:3883   */\n      tag_285\n        /* \"#utility.yul\":3879:3882   */\n      dup9\n        /* \"#utility.yul\":3864:3877   */\n      dup3\n        /* \"#utility.yul\":3762:3883   */\n      tag_263\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3755:3883   */\n      swap8\n      pop\n        /* \"#utility.yul\":3906:3995   */\n      tag_286\n        /* \"#utility.yul\":3988:3994   */\n      dup4\n        /* \"#utility.yul\":3906:3995   */\n      tag_287\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3896:3995   */\n      swap3\n      pop\n        /* \"#utility.yul\":3694:4005   */\n      pop\n        /* \"#utility.yul\":3681:3682   */\n      0x01\n        /* \"#utility.yul\":3678:3679   */\n      dup2\n        /* \"#utility.yul\":3674:3683   */\n      add\n        /* \"#utility.yul\":3669:3683   */\n      swap1\n      pop\n        /* \"#utility.yul\":3634:4005   */\n      jump(tag_282)\n    tag_284:\n        /* \"#utility.yul\":3638:3652   */\n      pop\n        /* \"#utility.yul\":4021:4024   */\n      dup6\n        /* \"#utility.yul\":4014:4024   */\n      swap4\n      pop\n        /* \"#utility.yul\":3248:4030   */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4036:4145   */\n    tag_288:\n        /* \"#utility.yul\":4117:4138   */\n      tag_290\n        /* \"#utility.yul\":4132:4137   */\n      dup2\n        /* \"#utility.yul\":4117:4138   */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":4112:4115   */\n      dup3\n        /* \"#utility.yul\":4105:4139   */\n      mstore\n        /* \"#utility.yul\":4095:4145   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4151:4266   */\n    tag_292:\n        /* \"#utility.yul\":4236:4259   */\n      tag_294\n        /* \"#utility.yul\":4253:4258   */\n      dup2\n        /* \"#utility.yul\":4236:4259   */\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4231:4234   */\n      dup3\n        /* \"#utility.yul\":4224:4260   */\n      mstore\n        /* \"#utility.yul\":4214:4266   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4272:4645   */\n    tag_296:\n      0x00\n        /* \"#utility.yul\":4404:4442   */\n      tag_298\n        /* \"#utility.yul\":4436:4441   */\n      dup3\n        /* \"#utility.yul\":4404:4442   */\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4458:4546   */\n      tag_300\n        /* \"#utility.yul\":4539:4545   */\n      dup2\n        /* \"#utility.yul\":4534:4537   */\n      dup6\n        /* \"#utility.yul\":4458:4546   */\n      tag_301\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4451:4546   */\n      swap4\n      pop\n        /* \"#utility.yul\":4555:4607   */\n      tag_302\n        /* \"#utility.yul\":4600:4606   */\n      dup2\n        /* \"#utility.yul\":4595:4598   */\n      dup6\n        /* \"#utility.yul\":4588:4592   */\n      0x20\n        /* \"#utility.yul\":4581:4586   */\n      dup7\n        /* \"#utility.yul\":4577:4593   */\n      add\n        /* \"#utility.yul\":4555:4607   */\n      tag_303\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4632:4638   */\n      dup1\n        /* \"#utility.yul\":4627:4630   */\n      dup5\n        /* \"#utility.yul\":4623:4639   */\n      add\n        /* \"#utility.yul\":4616:4639   */\n      swap2\n      pop\n        /* \"#utility.yul\":4380:4645   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4651:4810   */\n    tag_304:\n        /* \"#utility.yul\":4752:4803   */\n      tag_306\n        /* \"#utility.yul\":4797:4802   */\n      dup2\n        /* \"#utility.yul\":4752:4803   */\n      tag_307\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4747:4750   */\n      dup3\n        /* \"#utility.yul\":4740:4804   */\n      mstore\n        /* \"#utility.yul\":4730:4810   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4816:4977   */\n    tag_308:\n        /* \"#utility.yul\":4918:4970   */\n      tag_310\n        /* \"#utility.yul\":4964:4969   */\n      dup2\n        /* \"#utility.yul\":4918:4970   */\n      tag_311\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4913:4916   */\n      dup3\n        /* \"#utility.yul\":4906:4971   */\n      mstore\n        /* \"#utility.yul\":4896:4977   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4983:5347   */\n    tag_312:\n      0x00\n        /* \"#utility.yul\":5099:5138   */\n      tag_314\n        /* \"#utility.yul\":5132:5137   */\n      dup3\n        /* \"#utility.yul\":5099:5138   */\n      tag_315\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5154:5225   */\n      tag_316\n        /* \"#utility.yul\":5218:5224   */\n      dup2\n        /* \"#utility.yul\":5213:5216   */\n      dup6\n        /* \"#utility.yul\":5154:5225   */\n      tag_317\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5147:5225   */\n      swap4\n      pop\n        /* \"#utility.yul\":5234:5286   */\n      tag_318\n        /* \"#utility.yul\":5279:5285   */\n      dup2\n        /* \"#utility.yul\":5274:5277   */\n      dup6\n        /* \"#utility.yul\":5267:5271   */\n      0x20\n        /* \"#utility.yul\":5260:5265   */\n      dup7\n        /* \"#utility.yul\":5256:5272   */\n      add\n        /* \"#utility.yul\":5234:5286   */\n      tag_303\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5311:5340   */\n      tag_319\n        /* \"#utility.yul\":5333:5339   */\n      dup2\n        /* \"#utility.yul\":5311:5340   */\n      tag_320\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5306:5309   */\n      dup5\n        /* \"#utility.yul\":5302:5341   */\n      add\n        /* \"#utility.yul\":5295:5341   */\n      swap2\n      pop\n        /* \"#utility.yul\":5075:5347   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5353:5676   */\n    tag_321:\n      0x00\n        /* \"#utility.yul\":5516:5583   */\n      tag_323\n        /* \"#utility.yul\":5580:5582   */\n      0x19\n        /* \"#utility.yul\":5575:5578   */\n      dup4\n        /* \"#utility.yul\":5516:5583   */\n      tag_317\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5509:5583   */\n      swap2\n      pop\n        /* \"#utility.yul\":5613:5640   */\n      0x596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000\n        /* \"#utility.yul\":5609:5610   */\n      0x00\n        /* \"#utility.yul\":5604:5607   */\n      dup4\n        /* \"#utility.yul\":5600:5611   */\n      add\n        /* \"#utility.yul\":5593:5641   */\n      mstore\n        /* \"#utility.yul\":5667:5669   */\n      0x20\n        /* \"#utility.yul\":5662:5665   */\n      dup3\n        /* \"#utility.yul\":5658:5670   */\n      add\n        /* \"#utility.yul\":5651:5670   */\n      swap1\n      pop\n        /* \"#utility.yul\":5499:5676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5682:6052   */\n    tag_324:\n      0x00\n        /* \"#utility.yul\":5845:5912   */\n      tag_326\n        /* \"#utility.yul\":5909:5911   */\n      0x26\n        /* \"#utility.yul\":5904:5907   */\n      dup4\n        /* \"#utility.yul\":5845:5912   */\n      tag_317\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":5838:5912   */\n      swap2\n      pop\n        /* \"#utility.yul\":5942:5976   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5938:5939   */\n      0x00\n        /* \"#utility.yul\":5933:5936   */\n      dup4\n        /* \"#utility.yul\":5929:5940   */\n      add\n        /* \"#utility.yul\":5922:5977   */\n      mstore\n        /* \"#utility.yul\":6008:6016   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6003:6005   */\n      0x20\n        /* \"#utility.yul\":5998:6001   */\n      dup4\n        /* \"#utility.yul\":5994:6006   */\n      add\n        /* \"#utility.yul\":5987:6017   */\n      mstore\n        /* \"#utility.yul\":6043:6045   */\n      0x40\n        /* \"#utility.yul\":6038:6041   */\n      dup3\n        /* \"#utility.yul\":6034:6046   */\n      add\n        /* \"#utility.yul\":6027:6046   */\n      swap1\n      pop\n        /* \"#utility.yul\":5828:6052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6058:6381   */\n    tag_327:\n      0x00\n        /* \"#utility.yul\":6221:6288   */\n      tag_329\n        /* \"#utility.yul\":6285:6287   */\n      0x19\n        /* \"#utility.yul\":6280:6283   */\n      dup4\n        /* \"#utility.yul\":6221:6288   */\n      tag_317\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6214:6288   */\n      swap2\n      pop\n        /* \"#utility.yul\":6318:6345   */\n      0x596f752068617665206e6f20746f6b656e73207374616b656400000000000000\n        /* \"#utility.yul\":6314:6315   */\n      0x00\n        /* \"#utility.yul\":6309:6312   */\n      dup4\n        /* \"#utility.yul\":6305:6316   */\n      add\n        /* \"#utility.yul\":6298:6346   */\n      mstore\n        /* \"#utility.yul\":6372:6374   */\n      0x20\n        /* \"#utility.yul\":6367:6370   */\n      dup3\n        /* \"#utility.yul\":6363:6375   */\n      add\n        /* \"#utility.yul\":6356:6375   */\n      swap1\n      pop\n        /* \"#utility.yul\":6204:6381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6387:6713   */\n    tag_330:\n      0x00\n        /* \"#utility.yul\":6550:6617   */\n      tag_332\n        /* \"#utility.yul\":6614:6616   */\n      0x1c\n        /* \"#utility.yul\":6609:6612   */\n      dup4\n        /* \"#utility.yul\":6550:6617   */\n      tag_317\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6543:6617   */\n      swap2\n      pop\n        /* \"#utility.yul\":6647:6677   */\n      0x4e6f7420737570706f72746564204e465420436f6c6c656374696f6e00000000\n        /* \"#utility.yul\":6643:6644   */\n      0x00\n        /* \"#utility.yul\":6638:6641   */\n      dup4\n        /* \"#utility.yul\":6634:6645   */\n      add\n        /* \"#utility.yul\":6627:6678   */\n      mstore\n        /* \"#utility.yul\":6704:6706   */\n      0x20\n        /* \"#utility.yul\":6699:6702   */\n      dup3\n        /* \"#utility.yul\":6695:6707   */\n      add\n        /* \"#utility.yul\":6688:6707   */\n      swap1\n      pop\n        /* \"#utility.yul\":6533:6713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6719:7089   */\n    tag_333:\n      0x00\n        /* \"#utility.yul\":6882:6949   */\n      tag_335\n        /* \"#utility.yul\":6946:6948   */\n      0x26\n        /* \"#utility.yul\":6941:6944   */\n      dup4\n        /* \"#utility.yul\":6882:6949   */\n      tag_317\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6875:6949   */\n      swap2\n      pop\n        /* \"#utility.yul\":6979:7013   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":6975:6976   */\n      0x00\n        /* \"#utility.yul\":6970:6973   */\n      dup4\n        /* \"#utility.yul\":6966:6977   */\n      add\n        /* \"#utility.yul\":6959:7014   */\n      mstore\n        /* \"#utility.yul\":7045:7053   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7040:7042   */\n      0x20\n        /* \"#utility.yul\":7035:7038   */\n      dup4\n        /* \"#utility.yul\":7031:7043   */\n      add\n        /* \"#utility.yul\":7024:7054   */\n      mstore\n        /* \"#utility.yul\":7080:7082   */\n      0x40\n        /* \"#utility.yul\":7075:7078   */\n      dup3\n        /* \"#utility.yul\":7071:7083   */\n      add\n        /* \"#utility.yul\":7064:7083   */\n      swap1\n      pop\n        /* \"#utility.yul\":6865:7089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7095:7425   */\n    tag_336:\n      0x00\n        /* \"#utility.yul\":7258:7325   */\n      tag_338\n        /* \"#utility.yul\":7322:7324   */\n      0x20\n        /* \"#utility.yul\":7317:7320   */\n      dup4\n        /* \"#utility.yul\":7258:7325   */\n      tag_317\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":7251:7325   */\n      swap2\n      pop\n        /* \"#utility.yul\":7355:7389   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7351:7352   */\n      0x00\n        /* \"#utility.yul\":7346:7349   */\n      dup4\n        /* \"#utility.yul\":7342:7353   */\n      add\n        /* \"#utility.yul\":7335:7390   */\n      mstore\n        /* \"#utility.yul\":7416:7418   */\n      0x20\n        /* \"#utility.yul\":7411:7414   */\n      dup3\n        /* \"#utility.yul\":7407:7419   */\n      add\n        /* \"#utility.yul\":7400:7419   */\n      swap1\n      pop\n        /* \"#utility.yul\":7241:7425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7431:7757   */\n    tag_339:\n      0x00\n        /* \"#utility.yul\":7594:7661   */\n      tag_341\n        /* \"#utility.yul\":7658:7660   */\n      0x1c\n        /* \"#utility.yul\":7653:7656   */\n      dup4\n        /* \"#utility.yul\":7594:7661   */\n      tag_317\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7587:7661   */\n      swap2\n      pop\n        /* \"#utility.yul\":7691:7721   */\n      0x596f752068617665206e6f207265776172647320746f20636c61696d00000000\n        /* \"#utility.yul\":7687:7688   */\n      0x00\n        /* \"#utility.yul\":7682:7685   */\n      dup4\n        /* \"#utility.yul\":7678:7689   */\n      add\n        /* \"#utility.yul\":7671:7722   */\n      mstore\n        /* \"#utility.yul\":7748:7750   */\n      0x20\n        /* \"#utility.yul\":7743:7746   */\n      dup3\n        /* \"#utility.yul\":7739:7751   */\n      add\n        /* \"#utility.yul\":7732:7751   */\n      swap1\n      pop\n        /* \"#utility.yul\":7577:7757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7763:8090   */\n    tag_342:\n      0x00\n        /* \"#utility.yul\":7926:7993   */\n      tag_344\n        /* \"#utility.yul\":7990:7992   */\n      0x1d\n        /* \"#utility.yul\":7985:7988   */\n      dup4\n        /* \"#utility.yul\":7926:7993   */\n      tag_317\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7919:7993   */\n      swap2\n      pop\n        /* \"#utility.yul\":8023:8054   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":8019:8020   */\n      0x00\n        /* \"#utility.yul\":8014:8017   */\n      dup4\n        /* \"#utility.yul\":8010:8021   */\n      add\n        /* \"#utility.yul\":8003:8055   */\n      mstore\n        /* \"#utility.yul\":8081:8083   */\n      0x20\n        /* \"#utility.yul\":8076:8079   */\n      dup3\n        /* \"#utility.yul\":8072:8084   */\n      add\n        /* \"#utility.yul\":8065:8084   */\n      swap1\n      pop\n        /* \"#utility.yul\":7909:8090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8096:8470   */\n    tag_345:\n      0x00\n        /* \"#utility.yul\":8259:8326   */\n      tag_347\n        /* \"#utility.yul\":8323:8325   */\n      0x2a\n        /* \"#utility.yul\":8318:8321   */\n      dup4\n        /* \"#utility.yul\":8259:8326   */\n      tag_317\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8252:8326   */\n      swap2\n      pop\n        /* \"#utility.yul\":8356:8390   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":8352:8353   */\n      0x00\n        /* \"#utility.yul\":8347:8350   */\n      dup4\n        /* \"#utility.yul\":8343:8354   */\n      add\n        /* \"#utility.yul\":8336:8391   */\n      mstore\n        /* \"#utility.yul\":8422:8434   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8417:8419   */\n      0x20\n        /* \"#utility.yul\":8412:8415   */\n      dup4\n        /* \"#utility.yul\":8408:8420   */\n      add\n        /* \"#utility.yul\":8401:8435   */\n      mstore\n        /* \"#utility.yul\":8461:8463   */\n      0x40\n        /* \"#utility.yul\":8456:8459   */\n      dup3\n        /* \"#utility.yul\":8452:8464   */\n      add\n        /* \"#utility.yul\":8445:8464   */\n      swap1\n      pop\n        /* \"#utility.yul\":8242:8470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8476:8805   */\n    tag_348:\n      0x00\n        /* \"#utility.yul\":8639:8706   */\n      tag_350\n        /* \"#utility.yul\":8703:8705   */\n      0x1f\n        /* \"#utility.yul\":8698:8701   */\n      dup4\n        /* \"#utility.yul\":8639:8706   */\n      tag_317\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":8632:8706   */\n      swap2\n      pop\n        /* \"#utility.yul\":8736:8769   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":8732:8733   */\n      0x00\n        /* \"#utility.yul\":8727:8730   */\n      dup4\n        /* \"#utility.yul\":8723:8734   */\n      add\n        /* \"#utility.yul\":8716:8770   */\n      mstore\n        /* \"#utility.yul\":8796:8798   */\n      0x20\n        /* \"#utility.yul\":8791:8794   */\n      dup3\n        /* \"#utility.yul\":8787:8799   */\n      add\n        /* \"#utility.yul\":8780:8799   */\n      swap1\n      pop\n        /* \"#utility.yul\":8622:8805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8869:9379   */\n    tag_266:\n        /* \"#utility.yul\":9014:9018   */\n      0x40\n        /* \"#utility.yul\":9009:9012   */\n      dup3\n        /* \"#utility.yul\":9005:9019   */\n      add\n        /* \"#utility.yul\":9103:9107   */\n      0x00\n        /* \"#utility.yul\":9096:9101   */\n      dup3\n        /* \"#utility.yul\":9092:9108   */\n      add\n        /* \"#utility.yul\":9086:9109   */\n      mload\n        /* \"#utility.yul\":9122:9185   */\n      tag_352\n        /* \"#utility.yul\":9179:9183   */\n      0x00\n        /* \"#utility.yul\":9174:9177   */\n      dup6\n        /* \"#utility.yul\":9170:9184   */\n      add\n        /* \"#utility.yul\":9156:9168   */\n      dup3\n        /* \"#utility.yul\":9122:9185   */\n      tag_267\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":9029:9195   */\n      pop\n        /* \"#utility.yul\":9280:9284   */\n      0x20\n        /* \"#utility.yul\":9273:9278   */\n      dup3\n        /* \"#utility.yul\":9269:9285   */\n      add\n        /* \"#utility.yul\":9263:9286   */\n      mload\n        /* \"#utility.yul\":9299:9362   */\n      tag_353\n        /* \"#utility.yul\":9356:9360   */\n      0x20\n        /* \"#utility.yul\":9351:9354   */\n      dup6\n        /* \"#utility.yul\":9347:9361   */\n      add\n        /* \"#utility.yul\":9333:9345   */\n      dup3\n        /* \"#utility.yul\":9299:9362   */\n      tag_354\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":9205:9372   */\n      pop\n        /* \"#utility.yul\":8983:9379   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9385:9493   */\n    tag_354:\n        /* \"#utility.yul\":9462:9486   */\n      tag_356\n        /* \"#utility.yul\":9480:9485   */\n      dup2\n        /* \"#utility.yul\":9462:9486   */\n      tag_357\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9457:9460   */\n      dup3\n        /* \"#utility.yul\":9450:9487   */\n      mstore\n        /* \"#utility.yul\":9440:9493   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9499:9617   */\n    tag_358:\n        /* \"#utility.yul\":9586:9610   */\n      tag_360\n        /* \"#utility.yul\":9604:9609   */\n      dup2\n        /* \"#utility.yul\":9586:9610   */\n      tag_357\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9581:9584   */\n      dup3\n        /* \"#utility.yul\":9574:9611   */\n      mstore\n        /* \"#utility.yul\":9564:9617   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9623:9894   */\n    tag_215:\n      0x00\n        /* \"#utility.yul\":9775:9868   */\n      tag_362\n        /* \"#utility.yul\":9864:9867   */\n      dup3\n        /* \"#utility.yul\":9855:9861   */\n      dup5\n        /* \"#utility.yul\":9775:9868   */\n      tag_296\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9768:9868   */\n      swap2\n      pop\n        /* \"#utility.yul\":9885:9888   */\n      dup2\n        /* \"#utility.yul\":9878:9888   */\n      swap1\n      pop\n        /* \"#utility.yul\":9757:9894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9900:10122   */\n    tag_51:\n      0x00\n        /* \"#utility.yul\":10031:10033   */\n      0x20\n        /* \"#utility.yul\":10020:10029   */\n      dup3\n        /* \"#utility.yul\":10016:10034   */\n      add\n        /* \"#utility.yul\":10008:10034   */\n      swap1\n      pop\n        /* \"#utility.yul\":10044:10115   */\n      tag_364\n        /* \"#utility.yul\":10112:10113   */\n      0x00\n        /* \"#utility.yul\":10101:10110   */\n      dup4\n        /* \"#utility.yul\":10097:10114   */\n      add\n        /* \"#utility.yul\":10088:10094   */\n      dup5\n        /* \"#utility.yul\":10044:10115   */\n      tag_271\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":9998:10122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10128:10570   */\n    tag_107:\n      0x00\n        /* \"#utility.yul\":10315:10317   */\n      0x60\n        /* \"#utility.yul\":10304:10313   */\n      dup3\n        /* \"#utility.yul\":10300:10318   */\n      add\n        /* \"#utility.yul\":10292:10318   */\n      swap1\n      pop\n        /* \"#utility.yul\":10328:10399   */\n      tag_366\n        /* \"#utility.yul\":10396:10397   */\n      0x00\n        /* \"#utility.yul\":10385:10394   */\n      dup4\n        /* \"#utility.yul\":10381:10398   */\n      add\n        /* \"#utility.yul\":10372:10378   */\n      dup7\n        /* \"#utility.yul\":10328:10399   */\n      tag_271\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10409:10481   */\n      tag_367\n        /* \"#utility.yul\":10477:10479   */\n      0x20\n        /* \"#utility.yul\":10466:10475   */\n      dup4\n        /* \"#utility.yul\":10462:10480   */\n      add\n        /* \"#utility.yul\":10453:10459   */\n      dup6\n        /* \"#utility.yul\":10409:10481   */\n      tag_271\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":10491:10563   */\n      tag_368\n        /* \"#utility.yul\":10559:10561   */\n      0x40\n        /* \"#utility.yul\":10548:10557   */\n      dup4\n        /* \"#utility.yul\":10544:10562   */\n      add\n        /* \"#utility.yul\":10535:10541   */\n      dup5\n        /* \"#utility.yul\":10491:10563   */\n      tag_358\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":10282:10570   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10576:10908   */\n    tag_182:\n      0x00\n        /* \"#utility.yul\":10735:10737   */\n      0x40\n        /* \"#utility.yul\":10724:10733   */\n      dup3\n        /* \"#utility.yul\":10720:10738   */\n      add\n        /* \"#utility.yul\":10712:10738   */\n      swap1\n      pop\n        /* \"#utility.yul\":10748:10819   */\n      tag_370\n        /* \"#utility.yul\":10816:10817   */\n      0x00\n        /* \"#utility.yul\":10805:10814   */\n      dup4\n        /* \"#utility.yul\":10801:10818   */\n      add\n        /* \"#utility.yul\":10792:10798   */\n      dup6\n        /* \"#utility.yul\":10748:10819   */\n      tag_271\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":10829:10901   */\n      tag_371\n        /* \"#utility.yul\":10897:10899   */\n      0x20\n        /* \"#utility.yul\":10886:10895   */\n      dup4\n        /* \"#utility.yul\":10882:10900   */\n      add\n        /* \"#utility.yul\":10873:10879   */\n      dup5\n        /* \"#utility.yul\":10829:10901   */\n      tag_358\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":10702:10908   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10914:11403   */\n    tag_41:\n      0x00\n        /* \"#utility.yul\":11153:11155   */\n      0x20\n        /* \"#utility.yul\":11142:11151   */\n      dup3\n        /* \"#utility.yul\":11138:11156   */\n      add\n        /* \"#utility.yul\":11130:11156   */\n      swap1\n      pop\n        /* \"#utility.yul\":11202:11211   */\n      dup2\n        /* \"#utility.yul\":11196:11200   */\n      dup2\n        /* \"#utility.yul\":11192:11212   */\n      sub\n        /* \"#utility.yul\":11188:11189   */\n      0x00\n        /* \"#utility.yul\":11177:11186   */\n      dup4\n        /* \"#utility.yul\":11173:11190   */\n      add\n        /* \"#utility.yul\":11166:11213   */\n      mstore\n        /* \"#utility.yul\":11230:11396   */\n      tag_373\n        /* \"#utility.yul\":11391:11395   */\n      dup2\n        /* \"#utility.yul\":11382:11388   */\n      dup5\n        /* \"#utility.yul\":11230:11396   */\n      tag_274\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":11222:11396   */\n      swap1\n      pop\n        /* \"#utility.yul\":11120:11403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11409:11619   */\n    tag_35:\n      0x00\n        /* \"#utility.yul\":11534:11536   */\n      0x20\n        /* \"#utility.yul\":11523:11532   */\n      dup3\n        /* \"#utility.yul\":11519:11537   */\n      add\n        /* \"#utility.yul\":11511:11537   */\n      swap1\n      pop\n        /* \"#utility.yul\":11547:11612   */\n      tag_375\n        /* \"#utility.yul\":11609:11610   */\n      0x00\n        /* \"#utility.yul\":11598:11607   */\n      dup4\n        /* \"#utility.yul\":11594:11611   */\n      add\n        /* \"#utility.yul\":11585:11591   */\n      dup5\n        /* \"#utility.yul\":11547:11612   */\n      tag_288\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":11501:11619   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11625:11843   */\n    tag_25:\n      0x00\n        /* \"#utility.yul\":11754:11756   */\n      0x20\n        /* \"#utility.yul\":11743:11752   */\n      dup3\n        /* \"#utility.yul\":11739:11757   */\n      add\n        /* \"#utility.yul\":11731:11757   */\n      swap1\n      pop\n        /* \"#utility.yul\":11767:11836   */\n      tag_377\n        /* \"#utility.yul\":11833:11834   */\n      0x00\n        /* \"#utility.yul\":11822:11831   */\n      dup4\n        /* \"#utility.yul\":11818:11835   */\n      add\n        /* \"#utility.yul\":11809:11815   */\n      dup5\n        /* \"#utility.yul\":11767:11836   */\n      tag_292\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":11721:11843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11849:12099   */\n    tag_67:\n      0x00\n        /* \"#utility.yul\":11994:11996   */\n      0x20\n        /* \"#utility.yul\":11983:11992   */\n      dup3\n        /* \"#utility.yul\":11979:11997   */\n      add\n        /* \"#utility.yul\":11971:11997   */\n      swap1\n      pop\n        /* \"#utility.yul\":12007:12092   */\n      tag_379\n        /* \"#utility.yul\":12089:12090   */\n      0x00\n        /* \"#utility.yul\":12078:12087   */\n      dup4\n        /* \"#utility.yul\":12074:12091   */\n      add\n        /* \"#utility.yul\":12065:12071   */\n      dup5\n        /* \"#utility.yul\":12007:12092   */\n      tag_304\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":11961:12099   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12105:12357   */\n    tag_45:\n      0x00\n        /* \"#utility.yul\":12251:12253   */\n      0x20\n        /* \"#utility.yul\":12240:12249   */\n      dup3\n        /* \"#utility.yul\":12236:12254   */\n      add\n        /* \"#utility.yul\":12228:12254   */\n      swap1\n      pop\n        /* \"#utility.yul\":12264:12350   */\n      tag_381\n        /* \"#utility.yul\":12347:12348   */\n      0x00\n        /* \"#utility.yul\":12336:12345   */\n      dup4\n        /* \"#utility.yul\":12332:12349   */\n      add\n        /* \"#utility.yul\":12323:12329   */\n      dup5\n        /* \"#utility.yul\":12264:12350   */\n      tag_308\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":12218:12357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12363:12676   */\n    tag_228:\n      0x00\n        /* \"#utility.yul\":12514:12516   */\n      0x20\n        /* \"#utility.yul\":12503:12512   */\n      dup3\n        /* \"#utility.yul\":12499:12517   */\n      add\n        /* \"#utility.yul\":12491:12517   */\n      swap1\n      pop\n        /* \"#utility.yul\":12563:12572   */\n      dup2\n        /* \"#utility.yul\":12557:12561   */\n      dup2\n        /* \"#utility.yul\":12553:12573   */\n      sub\n        /* \"#utility.yul\":12549:12550   */\n      0x00\n        /* \"#utility.yul\":12538:12547   */\n      dup4\n        /* \"#utility.yul\":12534:12551   */\n      add\n        /* \"#utility.yul\":12527:12574   */\n      mstore\n        /* \"#utility.yul\":12591:12669   */\n      tag_383\n        /* \"#utility.yul\":12664:12668   */\n      dup2\n        /* \"#utility.yul\":12655:12661   */\n      dup5\n        /* \"#utility.yul\":12591:12669   */\n      tag_312\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":12583:12669   */\n      swap1\n      pop\n        /* \"#utility.yul\":12481:12676   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12682:13101   */\n    tag_89:\n      0x00\n        /* \"#utility.yul\":12886:12888   */\n      0x20\n        /* \"#utility.yul\":12875:12884   */\n      dup3\n        /* \"#utility.yul\":12871:12889   */\n      add\n        /* \"#utility.yul\":12863:12889   */\n      swap1\n      pop\n        /* \"#utility.yul\":12935:12944   */\n      dup2\n        /* \"#utility.yul\":12929:12933   */\n      dup2\n        /* \"#utility.yul\":12925:12945   */\n      sub\n        /* \"#utility.yul\":12921:12922   */\n      0x00\n        /* \"#utility.yul\":12910:12919   */\n      dup4\n        /* \"#utility.yul\":12906:12923   */\n      add\n        /* \"#utility.yul\":12899:12946   */\n      mstore\n        /* \"#utility.yul\":12963:13094   */\n      tag_385\n        /* \"#utility.yul\":13089:13093   */\n      dup2\n        /* \"#utility.yul\":12963:13094   */\n      tag_321\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":12955:13094   */\n      swap1\n      pop\n        /* \"#utility.yul\":12853:13101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13107:13526   */\n    tag_161:\n      0x00\n        /* \"#utility.yul\":13311:13313   */\n      0x20\n        /* \"#utility.yul\":13300:13309   */\n      dup3\n        /* \"#utility.yul\":13296:13314   */\n      add\n        /* \"#utility.yul\":13288:13314   */\n      swap1\n      pop\n        /* \"#utility.yul\":13360:13369   */\n      dup2\n        /* \"#utility.yul\":13354:13358   */\n      dup2\n        /* \"#utility.yul\":13350:13370   */\n      sub\n        /* \"#utility.yul\":13346:13347   */\n      0x00\n        /* \"#utility.yul\":13335:13344   */\n      dup4\n        /* \"#utility.yul\":13331:13348   */\n      add\n        /* \"#utility.yul\":13324:13371   */\n      mstore\n        /* \"#utility.yul\":13388:13519   */\n      tag_387\n        /* \"#utility.yul\":13514:13518   */\n      dup2\n        /* \"#utility.yul\":13388:13519   */\n      tag_324\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":13380:13519   */\n      swap1\n      pop\n        /* \"#utility.yul\":13278:13526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13532:13951   */\n    tag_86:\n      0x00\n        /* \"#utility.yul\":13736:13738   */\n      0x20\n        /* \"#utility.yul\":13725:13734   */\n      dup3\n        /* \"#utility.yul\":13721:13739   */\n      add\n        /* \"#utility.yul\":13713:13739   */\n      swap1\n      pop\n        /* \"#utility.yul\":13785:13794   */\n      dup2\n        /* \"#utility.yul\":13779:13783   */\n      dup2\n        /* \"#utility.yul\":13775:13795   */\n      sub\n        /* \"#utility.yul\":13771:13772   */\n      0x00\n        /* \"#utility.yul\":13760:13769   */\n      dup4\n        /* \"#utility.yul\":13756:13773   */\n      add\n        /* \"#utility.yul\":13749:13796   */\n      mstore\n        /* \"#utility.yul\":13813:13944   */\n      tag_389\n        /* \"#utility.yul\":13939:13943   */\n      dup2\n        /* \"#utility.yul\":13813:13944   */\n      tag_327\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13805:13944   */\n      swap1\n      pop\n        /* \"#utility.yul\":13703:13951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13957:14376   */\n    tag_79:\n      0x00\n        /* \"#utility.yul\":14161:14163   */\n      0x20\n        /* \"#utility.yul\":14150:14159   */\n      dup3\n        /* \"#utility.yul\":14146:14164   */\n      add\n        /* \"#utility.yul\":14138:14164   */\n      swap1\n      pop\n        /* \"#utility.yul\":14210:14219   */\n      dup2\n        /* \"#utility.yul\":14204:14208   */\n      dup2\n        /* \"#utility.yul\":14200:14220   */\n      sub\n        /* \"#utility.yul\":14196:14197   */\n      0x00\n        /* \"#utility.yul\":14185:14194   */\n      dup4\n        /* \"#utility.yul\":14181:14198   */\n      add\n        /* \"#utility.yul\":14174:14221   */\n      mstore\n        /* \"#utility.yul\":14238:14369   */\n      tag_391\n        /* \"#utility.yul\":14364:14368   */\n      dup2\n        /* \"#utility.yul\":14238:14369   */\n      tag_330\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":14230:14369   */\n      swap1\n      pop\n        /* \"#utility.yul\":14128:14376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14382:14801   */\n    tag_208:\n      0x00\n        /* \"#utility.yul\":14586:14588   */\n      0x20\n        /* \"#utility.yul\":14575:14584   */\n      dup3\n        /* \"#utility.yul\":14571:14589   */\n      add\n        /* \"#utility.yul\":14563:14589   */\n      swap1\n      pop\n        /* \"#utility.yul\":14635:14644   */\n      dup2\n        /* \"#utility.yul\":14629:14633   */\n      dup2\n        /* \"#utility.yul\":14625:14645   */\n      sub\n        /* \"#utility.yul\":14621:14622   */\n      0x00\n        /* \"#utility.yul\":14610:14619   */\n      dup4\n        /* \"#utility.yul\":14606:14623   */\n      add\n        /* \"#utility.yul\":14599:14646   */\n      mstore\n        /* \"#utility.yul\":14663:14794   */\n      tag_393\n        /* \"#utility.yul\":14789:14793   */\n      dup2\n        /* \"#utility.yul\":14663:14794   */\n      tag_333\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":14655:14794   */\n      swap1\n      pop\n        /* \"#utility.yul\":14553:14801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14807:15226   */\n    tag_190:\n      0x00\n        /* \"#utility.yul\":15011:15013   */\n      0x20\n        /* \"#utility.yul\":15000:15009   */\n      dup3\n        /* \"#utility.yul\":14996:15014   */\n      add\n        /* \"#utility.yul\":14988:15014   */\n      swap1\n      pop\n        /* \"#utility.yul\":15060:15069   */\n      dup2\n        /* \"#utility.yul\":15054:15058   */\n      dup2\n        /* \"#utility.yul\":15050:15070   */\n      sub\n        /* \"#utility.yul\":15046:15047   */\n      0x00\n        /* \"#utility.yul\":15035:15044   */\n      dup4\n        /* \"#utility.yul\":15031:15048   */\n      add\n        /* \"#utility.yul\":15024:15071   */\n      mstore\n        /* \"#utility.yul\":15088:15219   */\n      tag_395\n        /* \"#utility.yul\":15214:15218   */\n      dup2\n        /* \"#utility.yul\":15088:15219   */\n      tag_336\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":15080:15219   */\n      swap1\n      pop\n        /* \"#utility.yul\":14978:15226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15232:15651   */\n    tag_118:\n      0x00\n        /* \"#utility.yul\":15436:15438   */\n      0x20\n        /* \"#utility.yul\":15425:15434   */\n      dup3\n        /* \"#utility.yul\":15421:15439   */\n      add\n        /* \"#utility.yul\":15413:15439   */\n      swap1\n      pop\n        /* \"#utility.yul\":15485:15494   */\n      dup2\n        /* \"#utility.yul\":15479:15483   */\n      dup2\n        /* \"#utility.yul\":15475:15495   */\n      sub\n        /* \"#utility.yul\":15471:15472   */\n      0x00\n        /* \"#utility.yul\":15460:15469   */\n      dup4\n        /* \"#utility.yul\":15456:15473   */\n      add\n        /* \"#utility.yul\":15449:15496   */\n      mstore\n        /* \"#utility.yul\":15513:15644   */\n      tag_397\n        /* \"#utility.yul\":15639:15643   */\n      dup2\n        /* \"#utility.yul\":15513:15644   */\n      tag_339\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":15505:15644   */\n      swap1\n      pop\n        /* \"#utility.yul\":15403:15651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15657:16076   */\n    tag_213:\n      0x00\n        /* \"#utility.yul\":15861:15863   */\n      0x20\n        /* \"#utility.yul\":15850:15859   */\n      dup3\n        /* \"#utility.yul\":15846:15864   */\n      add\n        /* \"#utility.yul\":15838:15864   */\n      swap1\n      pop\n        /* \"#utility.yul\":15910:15919   */\n      dup2\n        /* \"#utility.yul\":15904:15908   */\n      dup2\n        /* \"#utility.yul\":15900:15920   */\n      sub\n        /* \"#utility.yul\":15896:15897   */\n      0x00\n        /* \"#utility.yul\":15885:15894   */\n      dup4\n        /* \"#utility.yul\":15881:15898   */\n      add\n        /* \"#utility.yul\":15874:15921   */\n      mstore\n        /* \"#utility.yul\":15938:16069   */\n      tag_399\n        /* \"#utility.yul\":16064:16068   */\n      dup2\n        /* \"#utility.yul\":15938:16069   */\n      tag_342\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":15930:16069   */\n      swap1\n      pop\n        /* \"#utility.yul\":15828:16076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16082:16501   */\n    tag_200:\n      0x00\n        /* \"#utility.yul\":16286:16288   */\n      0x20\n        /* \"#utility.yul\":16275:16284   */\n      dup3\n        /* \"#utility.yul\":16271:16289   */\n      add\n        /* \"#utility.yul\":16263:16289   */\n      swap1\n      pop\n        /* \"#utility.yul\":16335:16344   */\n      dup2\n        /* \"#utility.yul\":16329:16333   */\n      dup2\n        /* \"#utility.yul\":16325:16345   */\n      sub\n        /* \"#utility.yul\":16321:16322   */\n      0x00\n        /* \"#utility.yul\":16310:16319   */\n      dup4\n        /* \"#utility.yul\":16306:16323   */\n      add\n        /* \"#utility.yul\":16299:16346   */\n      mstore\n        /* \"#utility.yul\":16363:16494   */\n      tag_401\n        /* \"#utility.yul\":16489:16493   */\n      dup2\n        /* \"#utility.yul\":16363:16494   */\n      tag_345\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":16355:16494   */\n      swap1\n      pop\n        /* \"#utility.yul\":16253:16501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16507:16926   */\n    tag_169:\n      0x00\n        /* \"#utility.yul\":16711:16713   */\n      0x20\n        /* \"#utility.yul\":16700:16709   */\n      dup3\n        /* \"#utility.yul\":16696:16714   */\n      add\n        /* \"#utility.yul\":16688:16714   */\n      swap1\n      pop\n        /* \"#utility.yul\":16760:16769   */\n      dup2\n        /* \"#utility.yul\":16754:16758   */\n      dup2\n        /* \"#utility.yul\":16750:16770   */\n      sub\n        /* \"#utility.yul\":16746:16747   */\n      0x00\n        /* \"#utility.yul\":16735:16744   */\n      dup4\n        /* \"#utility.yul\":16731:16748   */\n      add\n        /* \"#utility.yul\":16724:16771   */\n      mstore\n        /* \"#utility.yul\":16788:16919   */\n      tag_403\n        /* \"#utility.yul\":16914:16918   */\n      dup2\n        /* \"#utility.yul\":16788:16919   */\n      tag_348\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":16780:16919   */\n      swap1\n      pop\n        /* \"#utility.yul\":16678:16926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16932:17154   */\n    tag_75:\n      0x00\n        /* \"#utility.yul\":17063:17065   */\n      0x20\n        /* \"#utility.yul\":17052:17061   */\n      dup3\n        /* \"#utility.yul\":17048:17066   */\n      add\n        /* \"#utility.yul\":17040:17066   */\n      swap1\n      pop\n        /* \"#utility.yul\":17076:17147   */\n      tag_405\n        /* \"#utility.yul\":17144:17145   */\n      0x00\n        /* \"#utility.yul\":17133:17142   */\n      dup4\n        /* \"#utility.yul\":17129:17146   */\n      add\n        /* \"#utility.yul\":17120:17126   */\n      dup5\n        /* \"#utility.yul\":17076:17147   */\n      tag_358\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":17030:17154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17160:17602   */\n    tag_56:\n      0x00\n        /* \"#utility.yul\":17347:17349   */\n      0x60\n        /* \"#utility.yul\":17336:17345   */\n      dup3\n        /* \"#utility.yul\":17332:17350   */\n      add\n        /* \"#utility.yul\":17324:17350   */\n      swap1\n      pop\n        /* \"#utility.yul\":17360:17431   */\n      tag_407\n        /* \"#utility.yul\":17428:17429   */\n      0x00\n        /* \"#utility.yul\":17417:17426   */\n      dup4\n        /* \"#utility.yul\":17413:17430   */\n      add\n        /* \"#utility.yul\":17404:17410   */\n      dup7\n        /* \"#utility.yul\":17360:17431   */\n      tag_358\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":17441:17513   */\n      tag_408\n        /* \"#utility.yul\":17509:17511   */\n      0x20\n        /* \"#utility.yul\":17498:17507   */\n      dup4\n        /* \"#utility.yul\":17494:17512   */\n      add\n        /* \"#utility.yul\":17485:17491   */\n      dup6\n        /* \"#utility.yul\":17441:17513   */\n      tag_358\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":17523:17595   */\n      tag_409\n        /* \"#utility.yul\":17591:17593   */\n      0x40\n        /* \"#utility.yul\":17580:17589   */\n      dup4\n        /* \"#utility.yul\":17576:17594   */\n      add\n        /* \"#utility.yul\":17567:17573   */\n      dup5\n        /* \"#utility.yul\":17523:17595   */\n      tag_358\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":17314:17602   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17608:17769   */\n    tag_281:\n      0x00\n        /* \"#utility.yul\":17727:17730   */\n      dup2\n        /* \"#utility.yul\":17719:17730   */\n      swap1\n      pop\n        /* \"#utility.yul\":17757:17761   */\n      0x20\n        /* \"#utility.yul\":17752:17755   */\n      dup3\n        /* \"#utility.yul\":17748:17762   */\n      add\n        /* \"#utility.yul\":17740:17762   */\n      swap1\n      pop\n        /* \"#utility.yul\":17709:17769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17775:17918   */\n    tag_277:\n      0x00\n        /* \"#utility.yul\":17905:17910   */\n      dup2\n        /* \"#utility.yul\":17899:17911   */\n      mload\n        /* \"#utility.yul\":17889:17911   */\n      swap1\n      pop\n        /* \"#utility.yul\":17878:17918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17924:18022   */\n    tag_299:\n      0x00\n        /* \"#utility.yul\":18009:18014   */\n      dup2\n        /* \"#utility.yul\":18003:18015   */\n      mload\n        /* \"#utility.yul\":17993:18015   */\n      swap1\n      pop\n        /* \"#utility.yul\":17982:18022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18028:18127   */\n    tag_315:\n      0x00\n        /* \"#utility.yul\":18114:18119   */\n      dup2\n        /* \"#utility.yul\":18108:18120   */\n      mload\n        /* \"#utility.yul\":18098:18120   */\n      swap1\n      pop\n        /* \"#utility.yul\":18087:18127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18133:18275   */\n    tag_287:\n      0x00\n        /* \"#utility.yul\":18264:18268   */\n      0x20\n        /* \"#utility.yul\":18259:18262   */\n      dup3\n        /* \"#utility.yul\":18255:18269   */\n      add\n        /* \"#utility.yul\":18247:18269   */\n      swap1\n      pop\n        /* \"#utility.yul\":18237:18275   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18281:18494   */\n    tag_279:\n      0x00\n        /* \"#utility.yul\":18443:18449   */\n      dup3\n        /* \"#utility.yul\":18438:18441   */\n      dup3\n        /* \"#utility.yul\":18431:18450   */\n      mstore\n        /* \"#utility.yul\":18483:18487   */\n      0x20\n        /* \"#utility.yul\":18478:18481   */\n      dup3\n        /* \"#utility.yul\":18474:18488   */\n      add\n        /* \"#utility.yul\":18459:18488   */\n      swap1\n      pop\n        /* \"#utility.yul\":18421:18494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18500:18647   */\n    tag_301:\n      0x00\n        /* \"#utility.yul\":18638:18641   */\n      dup2\n        /* \"#utility.yul\":18623:18641   */\n      swap1\n      pop\n        /* \"#utility.yul\":18613:18647   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18653:18822   */\n    tag_317:\n      0x00\n        /* \"#utility.yul\":18771:18777   */\n      dup3\n        /* \"#utility.yul\":18766:18769   */\n      dup3\n        /* \"#utility.yul\":18759:18778   */\n      mstore\n        /* \"#utility.yul\":18811:18815   */\n      0x20\n        /* \"#utility.yul\":18806:18809   */\n      dup3\n        /* \"#utility.yul\":18802:18816   */\n      add\n        /* \"#utility.yul\":18787:18816   */\n      swap1\n      pop\n        /* \"#utility.yul\":18749:18822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18828:19133   */\n    tag_93:\n      0x00\n        /* \"#utility.yul\":18887:18907   */\n      tag_419\n        /* \"#utility.yul\":18905:18906   */\n      dup3\n        /* \"#utility.yul\":18887:18907   */\n      tag_357\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":18882:18907   */\n      swap2\n      pop\n        /* \"#utility.yul\":18921:18941   */\n      tag_420\n        /* \"#utility.yul\":18939:18940   */\n      dup4\n        /* \"#utility.yul\":18921:18941   */\n      tag_357\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":18916:18941   */\n      swap3\n      pop\n        /* \"#utility.yul\":19075:19076   */\n      dup3\n        /* \"#utility.yul\":19007:19073   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19003:19077   */\n      sub\n        /* \"#utility.yul\":19000:19001   */\n      dup3\n        /* \"#utility.yul\":18997:19078   */\n      gt\n        /* \"#utility.yul\":18994:18996   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":19081:19099   */\n      tag_422\n      tag_423\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":18994:18996   */\n    tag_421:\n        /* \"#utility.yul\":19125:19126   */\n      dup3\n        /* \"#utility.yul\":19122:19123   */\n      dup3\n        /* \"#utility.yul\":19118:19127   */\n      add\n        /* \"#utility.yul\":19111:19127   */\n      swap1\n      pop\n        /* \"#utility.yul\":18872:19133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19139:19324   */\n    tag_177:\n      0x00\n        /* \"#utility.yul\":19196:19216   */\n      tag_425\n        /* \"#utility.yul\":19214:19215   */\n      dup3\n        /* \"#utility.yul\":19196:19216   */\n      tag_357\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":19191:19216   */\n      swap2\n      pop\n        /* \"#utility.yul\":19230:19250   */\n      tag_426\n        /* \"#utility.yul\":19248:19249   */\n      dup4\n        /* \"#utility.yul\":19230:19250   */\n      tag_357\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":19225:19250   */\n      swap3\n      pop\n        /* \"#utility.yul\":19269:19270   */\n      dup3\n        /* \"#utility.yul\":19259:19261   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":19274:19292   */\n      tag_428\n      tag_429\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":19259:19261   */\n    tag_427:\n        /* \"#utility.yul\":19316:19317   */\n      dup3\n        /* \"#utility.yul\":19313:19314   */\n      dup3\n        /* \"#utility.yul\":19309:19318   */\n      div\n        /* \"#utility.yul\":19304:19318   */\n      swap1\n      pop\n        /* \"#utility.yul\":19181:19324   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19330:19678   */\n    tag_174:\n      0x00\n        /* \"#utility.yul\":19393:19413   */\n      tag_431\n        /* \"#utility.yul\":19411:19412   */\n      dup3\n        /* \"#utility.yul\":19393:19413   */\n      tag_357\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":19388:19413   */\n      swap2\n      pop\n        /* \"#utility.yul\":19427:19447   */\n      tag_432\n        /* \"#utility.yul\":19445:19446   */\n      dup4\n        /* \"#utility.yul\":19427:19447   */\n      tag_357\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":19422:19447   */\n      swap3\n      pop\n        /* \"#utility.yul\":19615:19616   */\n      dup2\n        /* \"#utility.yul\":19547:19613   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19543:19617   */\n      div\n        /* \"#utility.yul\":19540:19541   */\n      dup4\n        /* \"#utility.yul\":19537:19618   */\n      gt\n        /* \"#utility.yul\":19532:19533   */\n      dup3\n        /* \"#utility.yul\":19525:19534   */\n      iszero\n        /* \"#utility.yul\":19518:19535   */\n      iszero\n        /* \"#utility.yul\":19514:19619   */\n      and\n        /* \"#utility.yul\":19511:19513   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":19622:19640   */\n      tag_434\n      tag_423\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":19511:19513   */\n    tag_433:\n        /* \"#utility.yul\":19670:19671   */\n      dup3\n        /* \"#utility.yul\":19667:19668   */\n      dup3\n        /* \"#utility.yul\":19663:19672   */\n      mul\n        /* \"#utility.yul\":19652:19672   */\n      swap1\n      pop\n        /* \"#utility.yul\":19378:19678   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19684:19875   */\n    tag_172:\n      0x00\n        /* \"#utility.yul\":19744:19764   */\n      tag_436\n        /* \"#utility.yul\":19762:19763   */\n      dup3\n        /* \"#utility.yul\":19744:19764   */\n      tag_357\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":19739:19764   */\n      swap2\n      pop\n        /* \"#utility.yul\":19778:19798   */\n      tag_437\n        /* \"#utility.yul\":19796:19797   */\n      dup4\n        /* \"#utility.yul\":19778:19798   */\n      tag_357\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":19773:19798   */\n      swap3\n      pop\n        /* \"#utility.yul\":19817:19818   */\n      dup3\n        /* \"#utility.yul\":19814:19815   */\n      dup3\n        /* \"#utility.yul\":19811:19819   */\n      lt\n        /* \"#utility.yul\":19808:19810   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":19822:19840   */\n      tag_439\n      tag_423\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":19808:19810   */\n    tag_438:\n        /* \"#utility.yul\":19867:19868   */\n      dup3\n        /* \"#utility.yul\":19864:19865   */\n      dup3\n        /* \"#utility.yul\":19860:19869   */\n      sub\n        /* \"#utility.yul\":19852:19869   */\n      swap1\n      pop\n        /* \"#utility.yul\":19729:19875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19881:19977   */\n    tag_270:\n      0x00\n        /* \"#utility.yul\":19947:19971   */\n      tag_441\n        /* \"#utility.yul\":19965:19970   */\n      dup3\n        /* \"#utility.yul\":19947:19971   */\n      tag_442\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":19936:19971   */\n      swap1\n      pop\n        /* \"#utility.yul\":19926:19977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19983:20073   */\n    tag_291:\n      0x00\n        /* \"#utility.yul\":20060:20065   */\n      dup2\n        /* \"#utility.yul\":20053:20066   */\n      iszero\n        /* \"#utility.yul\":20046:20067   */\n      iszero\n        /* \"#utility.yul\":20035:20067   */\n      swap1\n      pop\n        /* \"#utility.yul\":20025:20073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20079:20228   */\n    tag_295:\n      0x00\n        /* \"#utility.yul\":20155:20221   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20148:20153   */\n      dup3\n        /* \"#utility.yul\":20144:20222   */\n      and\n        /* \"#utility.yul\":20133:20222   */\n      swap1\n      pop\n        /* \"#utility.yul\":20123:20228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20234:20360   */\n    tag_442:\n      0x00\n        /* \"#utility.yul\":20311:20353   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20304:20309   */\n      dup3\n        /* \"#utility.yul\":20300:20354   */\n      and\n        /* \"#utility.yul\":20289:20354   */\n      swap1\n      pop\n        /* \"#utility.yul\":20279:20360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20366:20443   */\n    tag_357:\n      0x00\n        /* \"#utility.yul\":20432:20437   */\n      dup2\n        /* \"#utility.yul\":20421:20437   */\n      swap1\n      pop\n        /* \"#utility.yul\":20411:20443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20449:20603   */\n    tag_307:\n      0x00\n        /* \"#utility.yul\":20546:20597   */\n      tag_448\n        /* \"#utility.yul\":20591:20596   */\n      dup3\n        /* \"#utility.yul\":20546:20597   */\n      tag_449\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":20533:20597   */\n      swap1\n      pop\n        /* \"#utility.yul\":20523:20603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20609:20736   */\n    tag_449:\n      0x00\n        /* \"#utility.yul\":20706:20730   */\n      tag_451\n        /* \"#utility.yul\":20724:20729   */\n      dup3\n        /* \"#utility.yul\":20706:20730   */\n      tag_442\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":20693:20730   */\n      swap1\n      pop\n        /* \"#utility.yul\":20683:20736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20742:20898   */\n    tag_311:\n      0x00\n        /* \"#utility.yul\":20840:20892   */\n      tag_453\n        /* \"#utility.yul\":20886:20891   */\n      dup3\n        /* \"#utility.yul\":20840:20892   */\n      tag_454\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":20827:20892   */\n      swap1\n      pop\n        /* \"#utility.yul\":20817:20898   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20904:21032   */\n    tag_454:\n      0x00\n        /* \"#utility.yul\":21002:21026   */\n      tag_456\n        /* \"#utility.yul\":21020:21025   */\n      dup3\n        /* \"#utility.yul\":21002:21026   */\n      tag_442\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":20989:21026   */\n      swap1\n      pop\n        /* \"#utility.yul\":20979:21032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21038:21345   */\n    tag_303:\n        /* \"#utility.yul\":21106:21107   */\n      0x00\n        /* \"#utility.yul\":21116:21229   */\n    tag_458:\n        /* \"#utility.yul\":21130:21136   */\n      dup4\n        /* \"#utility.yul\":21127:21128   */\n      dup2\n        /* \"#utility.yul\":21124:21137   */\n      lt\n        /* \"#utility.yul\":21116:21229   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":21215:21216   */\n      dup1\n        /* \"#utility.yul\":21210:21213   */\n      dup3\n        /* \"#utility.yul\":21206:21217   */\n      add\n        /* \"#utility.yul\":21200:21218   */\n      mload\n        /* \"#utility.yul\":21196:21197   */\n      dup2\n        /* \"#utility.yul\":21191:21194   */\n      dup5\n        /* \"#utility.yul\":21187:21198   */\n      add\n        /* \"#utility.yul\":21180:21219   */\n      mstore\n        /* \"#utility.yul\":21152:21154   */\n      0x20\n        /* \"#utility.yul\":21149:21150   */\n      dup2\n        /* \"#utility.yul\":21145:21155   */\n      add\n        /* \"#utility.yul\":21140:21155   */\n      swap1\n      pop\n        /* \"#utility.yul\":21116:21229   */\n      jump(tag_458)\n    tag_460:\n        /* \"#utility.yul\":21247:21253   */\n      dup4\n        /* \"#utility.yul\":21244:21245   */\n      dup2\n        /* \"#utility.yul\":21241:21254   */\n      gt\n        /* \"#utility.yul\":21238:21240   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":21327:21328   */\n      0x00\n        /* \"#utility.yul\":21318:21324   */\n      dup5\n        /* \"#utility.yul\":21313:21316   */\n      dup5\n        /* \"#utility.yul\":21309:21325   */\n      add\n        /* \"#utility.yul\":21302:21329   */\n      mstore\n        /* \"#utility.yul\":21238:21240   */\n    tag_461:\n        /* \"#utility.yul\":21087:21345   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21351:21522   */\n    tag_105:\n      0x00\n        /* \"#utility.yul\":21413:21437   */\n      tag_463\n        /* \"#utility.yul\":21431:21436   */\n      dup3\n        /* \"#utility.yul\":21413:21437   */\n      tag_357\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":21404:21437   */\n      swap2\n      pop\n        /* \"#utility.yul\":21459:21463   */\n      0x00\n        /* \"#utility.yul\":21452:21457   */\n      dup3\n        /* \"#utility.yul\":21449:21464   */\n      eq\n        /* \"#utility.yul\":21446:21448   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":21467:21485   */\n      tag_465\n      tag_423\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":21446:21448   */\n    tag_464:\n        /* \"#utility.yul\":21514:21515   */\n      0x01\n        /* \"#utility.yul\":21507:21512   */\n      dup3\n        /* \"#utility.yul\":21503:21516   */\n      sub\n        /* \"#utility.yul\":21496:21516   */\n      swap1\n      pop\n        /* \"#utility.yul\":21394:21522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21528:21761   */\n    tag_101:\n      0x00\n        /* \"#utility.yul\":21590:21614   */\n      tag_467\n        /* \"#utility.yul\":21608:21613   */\n      dup3\n        /* \"#utility.yul\":21590:21614   */\n      tag_357\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":21581:21614   */\n      swap2\n      pop\n        /* \"#utility.yul\":21636:21702   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21629:21634   */\n      dup3\n        /* \"#utility.yul\":21626:21703   */\n      eq\n        /* \"#utility.yul\":21623:21625   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":21706:21724   */\n      tag_469\n      tag_423\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":21623:21625   */\n    tag_468:\n        /* \"#utility.yul\":21753:21754   */\n      0x01\n        /* \"#utility.yul\":21746:21751   */\n      dup3\n        /* \"#utility.yul\":21742:21755   */\n      add\n        /* \"#utility.yul\":21735:21755   */\n      swap1\n      pop\n        /* \"#utility.yul\":21571:21761   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21767:21947   */\n    tag_423:\n        /* \"#utility.yul\":21815:21892   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21812:21813   */\n      0x00\n        /* \"#utility.yul\":21805:21893   */\n      mstore\n        /* \"#utility.yul\":21912:21916   */\n      0x11\n        /* \"#utility.yul\":21909:21910   */\n      0x04\n        /* \"#utility.yul\":21902:21917   */\n      mstore\n        /* \"#utility.yul\":21936:21940   */\n      0x24\n        /* \"#utility.yul\":21933:21934   */\n      0x00\n        /* \"#utility.yul\":21926:21941   */\n      revert\n        /* \"#utility.yul\":21953:22133   */\n    tag_429:\n        /* \"#utility.yul\":22001:22078   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21998:21999   */\n      0x00\n        /* \"#utility.yul\":21991:22079   */\n      mstore\n        /* \"#utility.yul\":22098:22102   */\n      0x12\n        /* \"#utility.yul\":22095:22096   */\n      0x04\n        /* \"#utility.yul\":22088:22103   */\n      mstore\n        /* \"#utility.yul\":22122:22126   */\n      0x24\n        /* \"#utility.yul\":22119:22120   */\n      0x00\n        /* \"#utility.yul\":22112:22127   */\n      revert\n        /* \"#utility.yul\":22139:22241   */\n    tag_320:\n      0x00\n        /* \"#utility.yul\":22231:22233   */\n      0x1f\n        /* \"#utility.yul\":22227:22234   */\n      not\n        /* \"#utility.yul\":22222:22224   */\n      0x1f\n        /* \"#utility.yul\":22215:22220   */\n      dup4\n        /* \"#utility.yul\":22211:22225   */\n      add\n        /* \"#utility.yul\":22207:22235   */\n      and\n        /* \"#utility.yul\":22197:22235   */\n      swap1\n      pop\n        /* \"#utility.yul\":22187:22241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22247:22369   */\n    tag_233:\n        /* \"#utility.yul\":22320:22344   */\n      tag_474\n        /* \"#utility.yul\":22338:22343   */\n      dup2\n        /* \"#utility.yul\":22320:22344   */\n      tag_270\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":22313:22318   */\n      dup2\n        /* \"#utility.yul\":22310:22345   */\n      eq\n        /* \"#utility.yul\":22300:22302   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":22359:22360   */\n      0x00\n        /* \"#utility.yul\":22356:22357   */\n      dup1\n        /* \"#utility.yul\":22349:22361   */\n      revert\n        /* \"#utility.yul\":22300:22302   */\n    tag_475:\n        /* \"#utility.yul\":22290:22369   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22375:22491   */\n    tag_237:\n        /* \"#utility.yul\":22445:22466   */\n      tag_477\n        /* \"#utility.yul\":22460:22465   */\n      dup2\n        /* \"#utility.yul\":22445:22466   */\n      tag_291\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":22438:22443   */\n      dup2\n        /* \"#utility.yul\":22435:22467   */\n      eq\n        /* \"#utility.yul\":22425:22427   */\n      tag_478\n      jumpi\n        /* \"#utility.yul\":22481:22482   */\n      0x00\n        /* \"#utility.yul\":22478:22479   */\n      dup1\n        /* \"#utility.yul\":22471:22483   */\n      revert\n        /* \"#utility.yul\":22425:22427   */\n    tag_478:\n        /* \"#utility.yul\":22415:22491   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22497:22619   */\n    tag_246:\n        /* \"#utility.yul\":22570:22594   */\n      tag_480\n        /* \"#utility.yul\":22588:22593   */\n      dup2\n        /* \"#utility.yul\":22570:22594   */\n      tag_357\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":22563:22568   */\n      dup2\n        /* \"#utility.yul\":22560:22595   */\n      eq\n        /* \"#utility.yul\":22550:22552   */\n      tag_481\n      jumpi\n        /* \"#utility.yul\":22609:22610   */\n      0x00\n        /* \"#utility.yul\":22606:22607   */\n      dup1\n        /* \"#utility.yul\":22599:22611   */\n      revert\n        /* \"#utility.yul\":22550:22552   */\n    tag_481:\n        /* \"#utility.yul\":22540:22619   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fbec4247a2052f54d28d0e5fc30c66fa740d70f440c030b5187075eef2b3a4e864736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2161:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "94:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "109:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "103:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "103:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "94:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "166:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$454",
																	"nodeType": "YulIdentifier",
																	"src": "125:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "125:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$454_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "62:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "78:5:1",
														"type": ""
													}
												],
												"src": "7:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "272:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "287:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "281:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "281:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "272:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "345:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$138",
																	"nodeType": "YulIdentifier",
																	"src": "303:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "303:48:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$138_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "240:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "248:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "256:5:1",
														"type": ""
													}
												],
												"src": "184:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "426:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "436:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "451:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "445:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "436:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "494:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "467:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "467:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "404:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "412:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "420:5:1",
														"type": ""
													}
												],
												"src": "363:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "652:514:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "698:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "707:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "700:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "700:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "700:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "673:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "682:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "669:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "669:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "694:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "665:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:32:1"
															},
															"nodeType": "YulIf",
															"src": "662:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "724:143:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "739:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "753:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "743:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "768:89:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "829:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "840:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "825:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "825:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "849:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$138_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "778:46:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "778:79:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "768:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "877:143:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "892:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "896:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "922:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "982:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "993:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "978:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "978:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1002:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$454_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "932:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "932:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "922:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1030:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1045:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1059:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1049:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1075:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1121:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1132:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1117:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1117:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1141:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1085:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1085:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1075:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721_$138t_contract$_IERC20_$454t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "606:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "617:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "629:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "637:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "645:6:1",
														"type": ""
													}
												],
												"src": "512:654:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1217:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1227:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1256:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1238:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1227:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1199:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1209:7:1",
														"type": ""
													}
												],
												"src": "1172:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1333:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1343:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1372:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1354:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1343:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$454",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1315:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1325:7:1",
														"type": ""
													}
												],
												"src": "1274:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1450:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1460:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1489:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1471:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1460:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$138",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1432:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1442:7:1",
														"type": ""
													}
												],
												"src": "1390:111:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1552:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1562:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1577:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1584:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1573:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1562:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1534:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1544:7:1",
														"type": ""
													}
												],
												"src": "1507:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1684:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1694:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1705:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1694:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1666:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1676:7:1",
														"type": ""
													}
												],
												"src": "1639:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1779:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1850:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1859:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1862:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1852:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1852:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1852:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1802:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1841:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$454",
																					"nodeType": "YulIdentifier",
																					"src": "1809:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1809:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1799:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1799:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:57:1"
															},
															"nodeType": "YulIf",
															"src": "1789:2:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$454",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1772:5:1",
														"type": ""
													}
												],
												"src": "1722:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1936:94:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2008:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2017:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2020:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2010:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2010:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2010:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1959:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1999:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$138",
																					"nodeType": "YulIdentifier",
																					"src": "1966:32:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1966:39:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1956:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1956:50:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:58:1"
															},
															"nodeType": "YulIf",
															"src": "1946:2:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$138",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1929:5:1",
														"type": ""
													}
												],
												"src": "1878:152:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2079:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2136:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2145:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2148:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2138:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2138:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2138:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2102:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2127:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2109:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2109:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2099:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2099:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:43:1"
															},
															"nodeType": "YulIf",
															"src": "2089:2:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2072:5:1",
														"type": ""
													}
												],
												"src": "2036:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_IERC20_$454_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$454(value)\n    }\n\n    function abi_decode_t_contract$_IERC721_$138_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC721_$138(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$138t_contract$_IERC20_$454t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$138_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$454_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$454(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IERC721_$138(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_contract$_IERC20_$454(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$454(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC721_$138(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$138(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052620186a06004553480156200001857600080fd5b50604051620025633803806200256383398181016040528101906200003e919062000223565b60016000819055506000600160006101000a81548160ff02191690831515021790555062000081620000756200011360201b60201c565b6200011b60201b60201c565b82600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806004819055505050506200032d565b600033905090565b600060018054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001ef81620002df565b92915050565b6000815190506200020681620002f9565b92915050565b6000815190506200021d8162000313565b92915050565b6000806000606084860312156200023957600080fd5b60006200024986828701620001f5565b93505060206200025c86828701620001de565b92505060406200026f868287016200020c565b9150509250925092565b60006200028682620002b5565b9050919050565b60006200029a8262000279565b9050919050565b6000620002ae8262000279565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002ea816200028d565b8114620002f657600080fd5b50565b6200030481620002a1565b81146200031057600080fd5b50565b6200031e81620002d5565b81146200032a57600080fd5b50565b612226806200033d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063a694fc3a11610066578063a694fc3a1461023b578063d1af0c7d14610257578063f2fde38b14610275578063f854a27f14610291576100ea565b80638da5cb5b146101bb5780639168ae72146101d9578063940670451461020b576100ea565b80635c975abb116100c85780635c975abb1461014557806363c28db1146101635780636588103b14610193578063715018a6146101b1576100ea565b8063150b7a02146100ef5780632e1a7d4d1461011f578063372500ab1461013b575b600080fd5b6101096004803603810190610104919061163b565b6102c1565b6040516101169190611c55565b60405180910390f35b610139600480360381019061013491906116e4565b61037f565b005b61014361086e565b005b61014d6109ea565b60405161015a9190611c3a565b60405180910390f35b61017d60048036038101906101789190611612565b610a01565b60405161018a9190611c18565b60405180910390f35b61019b610e25565b6040516101a89190611c8b565b60405180910390f35b6101b9610e4b565b005b6101c3610e5f565b6040516101d09190611b9d565b60405180910390f35b6101f360048036038101906101ee9190611612565b610e87565b60405161020293929190611e23565b60405180910390f35b610225600480360381019061022091906116e4565b610eb1565b6040516102329190611b9d565b60405180910390f35b610255600480360381019061025091906116e4565b610ee4565b005b61025f610ef7565b60405161026c9190611c70565b60405180910390f35b61028f600480360381019061028a9190611612565b610f1d565b005b6102ab60048036038101906102a69190611612565b610fa1565b6040516102b89190611e08565b60405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610353576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034a90611d28565b60405180910390fd5b7f150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f905095945050505050565b610387611005565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541161040c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040390611d08565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490611cc8565b60405180910390fd5b60006104b833611055565b905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082825461050c9190611ec5565b925050819055506000805b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490508110156106125783600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010182815481106105df577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016001015414156105ff57809150610612565b808061060a906120f3565b915050610517565b506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101828154811061068f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000815480929190610731906120c9565b919050555060006006600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b81526004016107e893929190611bb8565b600060405180830381600087803b15801561080257600080fd5b505af1158015610816573d6000803e3d6000fd5b5050505042600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550505061086b611113565b50565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546108bc33611055565b6108c69190611ec5565b90506000811161090b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090290611d88565b60405180910390fd5b42600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506109e73382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661111d9092919063ffffffff16565b50565b6000600160009054906101000a900460ff16905090565b60606000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115610da2576000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015467ffffffffffffffff811115610ad2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610b0b57816020015b610af8611559565b815260200190600190039081610af05790505b5090506000805b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050811015610d9757600073ffffffffffffffffffffffffffffffffffffffff16600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018281548110610bf1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d8457600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018181548110610cb8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050838381518110610d6a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508180610d80906120f3565b9250505b8080610d8f906120f3565b915050610b12565b508192505050610e20565b600067ffffffffffffffff811115610de3577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610e1c57816020015b610e09611559565b815260200190600190039081610e015790505b5090505b919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e536111a3565b610e5d6000611221565b565b600060018054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60056020528060005260406000206000915090508060000154908060020154908060030154905083565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610eec611005565b610ef4611113565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f256111a3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8c90611ce8565b60405180910390fd5b610f9e81611221565b50565b600080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610ff084611055565b610ffa9190611ec5565b905080915050919050565b6002600054141561104b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104290611de8565b60405180910390fd5b6002600081905550565b6000610e10600454600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154426110ee9190611fa6565b6110f89190611f4c565b6111029190611f4c565b61110c9190611f1b565b9050919050565b6001600081905550565b61119e8363a9059cbb60e01b848460405160240161113c929190611bef565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112e4565b505050565b6111ab6113ab565b73ffffffffffffffffffffffffffffffffffffffff166111c9610e5f565b73ffffffffffffffffffffffffffffffffffffffff161461121f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121690611d68565b60405180910390fd5b565b600060018054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000611346826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113b39092919063ffffffff16565b90506000815111156113a6578080602001905181019061136691906116bb565b6113a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139c90611dc8565b60405180910390fd5b5b505050565b600033905090565b60606113c284846000856113cb565b90509392505050565b606082471015611410576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140790611d48565b60405180910390fd5b611419856114df565b611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144f90611da8565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516114819190611b86565b60006040518083038185875af1925050503d80600081146114be576040519150601f19603f3d011682016040523d82523d6000602084013e6114c3565b606091505b50915091506114d38282866114f2565b92505050949350505050565b600080823b905060008111915050919050565b6060831561150257829050611552565b6000835111156115155782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115499190611ca6565b60405180910390fd5b9392505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600081359050611598816121ab565b92915050565b6000815190506115ad816121c2565b92915050565b60008083601f8401126115c557600080fd5b8235905067ffffffffffffffff8111156115de57600080fd5b6020830191508360018202830111156115f657600080fd5b9250929050565b60008135905061160c816121d9565b92915050565b60006020828403121561162457600080fd5b600061163284828501611589565b91505092915050565b60008060008060006080868803121561165357600080fd5b600061166188828901611589565b955050602061167288828901611589565b9450506040611683888289016115fd565b935050606086013567ffffffffffffffff8111156116a057600080fd5b6116ac888289016115b3565b92509250509295509295909350565b6000602082840312156116cd57600080fd5b60006116db8482850161159e565b91505092915050565b6000602082840312156116f657600080fd5b6000611704848285016115fd565b91505092915050565b60006117198383611b39565b60408301905092915050565b61172e81611fda565b82525050565b61173d81611fda565b82525050565b600061174e82611e6a565b6117588185611e98565b935061176383611e5a565b8060005b8381101561179457815161177b888261170d565b975061178683611e8b565b925050600181019050611767565b5085935050505092915050565b6117aa81611fec565b82525050565b6117b981611ff8565b82525050565b60006117ca82611e75565b6117d48185611ea9565b93506117e4818560208601612096565b80840191505092915050565b6117f98161204e565b82525050565b61180881612072565b82525050565b600061181982611e80565b6118238185611eb4565b9350611833818560208601612096565b61183c8161219a565b840191505092915050565b6000611854601983611eb4565b91507f596f7520646f6e2774206f776e207468697320746f6b656e21000000000000006000830152602082019050919050565b6000611894602683611eb4565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006118fa601983611eb4565b91507f596f752068617665206e6f20746f6b656e73207374616b6564000000000000006000830152602082019050919050565b600061193a601c83611eb4565b91507f4e6f7420737570706f72746564204e465420436f6c6c656374696f6e000000006000830152602082019050919050565b600061197a602683611eb4565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006119e0602083611eb4565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000611a20601c83611eb4565b91507f596f752068617665206e6f207265776172647320746f20636c61696d000000006000830152602082019050919050565b6000611a60601d83611eb4565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b6000611aa0602a83611eb4565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b6000611b06601f83611eb4565b91507f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006000830152602082019050919050565b604082016000820151611b4f6000850182611725565b506020820151611b626020850182611b68565b50505050565b611b7181612044565b82525050565b611b8081612044565b82525050565b6000611b9282846117bf565b915081905092915050565b6000602082019050611bb26000830184611734565b92915050565b6000606082019050611bcd6000830186611734565b611bda6020830185611734565b611be76040830184611b77565b949350505050565b6000604082019050611c046000830185611734565b611c116020830184611b77565b9392505050565b60006020820190508181036000830152611c328184611743565b905092915050565b6000602082019050611c4f60008301846117a1565b92915050565b6000602082019050611c6a60008301846117b0565b92915050565b6000602082019050611c8560008301846117f0565b92915050565b6000602082019050611ca060008301846117ff565b92915050565b60006020820190508181036000830152611cc0818461180e565b905092915050565b60006020820190508181036000830152611ce181611847565b9050919050565b60006020820190508181036000830152611d0181611887565b9050919050565b60006020820190508181036000830152611d21816118ed565b9050919050565b60006020820190508181036000830152611d418161192d565b9050919050565b60006020820190508181036000830152611d618161196d565b9050919050565b60006020820190508181036000830152611d81816119d3565b9050919050565b60006020820190508181036000830152611da181611a13565b9050919050565b60006020820190508181036000830152611dc181611a53565b9050919050565b60006020820190508181036000830152611de181611a93565b9050919050565b60006020820190508181036000830152611e0181611af9565b9050919050565b6000602082019050611e1d6000830184611b77565b92915050565b6000606082019050611e386000830186611b77565b611e456020830185611b77565b611e526040830184611b77565b949350505050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611ed082612044565b9150611edb83612044565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f1057611f0f61213c565b5b828201905092915050565b6000611f2682612044565b9150611f3183612044565b925082611f4157611f4061216b565b5b828204905092915050565b6000611f5782612044565b9150611f6283612044565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611f9b57611f9a61213c565b5b828202905092915050565b6000611fb182612044565b9150611fbc83612044565b925082821015611fcf57611fce61213c565b5b828203905092915050565b6000611fe582612024565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061205982612060565b9050919050565b600061206b82612024565b9050919050565b600061207d82612084565b9050919050565b600061208f82612024565b9050919050565b60005b838110156120b4578082015181840152602081019050612099565b838111156120c3576000848401525b50505050565b60006120d482612044565b915060008214156120e8576120e761213c565b5b600182039050919050565b60006120fe82612044565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156121315761213061213c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b6121b481611fda565b81146121bf57600080fd5b50565b6121cb81611fec565b81146121d657600080fd5b50565b6121e281612044565b81146121ed57600080fd5b5056fea2646970667358221220fbec4247a2052f54d28d0e5fc30c66fa740d70f440c030b5187075eef2b3a4e864736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x186A0 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2563 CODESIZE SUB DUP1 PUSH3 0x2563 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3E SWAP2 SWAP1 PUSH3 0x223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x81 PUSH3 0x75 PUSH3 0x113 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x11B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x32D JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1EF DUP2 PUSH3 0x2DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x206 DUP2 PUSH3 0x2F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x21D DUP2 PUSH3 0x313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x249 DUP7 DUP3 DUP8 ADD PUSH3 0x1F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x25C DUP7 DUP3 DUP8 ADD PUSH3 0x1DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x26F DUP7 DUP3 DUP8 ADD PUSH3 0x20C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x286 DUP3 PUSH3 0x2B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x29A DUP3 PUSH3 0x279 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2AE DUP3 PUSH3 0x279 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2EA DUP2 PUSH3 0x28D JUMP JUMPDEST DUP2 EQ PUSH3 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x304 DUP2 PUSH3 0x2A1 JUMP JUMPDEST DUP2 EQ PUSH3 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x31E DUP2 PUSH3 0x2D5 JUMP JUMPDEST DUP2 EQ PUSH3 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2226 DUP1 PUSH3 0x33D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xF854A27F EQ PUSH2 0x291 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x94067045 EQ PUSH2 0x20B JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x63C28DB1 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x6588103B EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x163B JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH2 0x86E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14D PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0xE4B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0xF1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1E08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x353 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x150B7A023D4804D13E8C85FB27262CB750CF6BA9F9DD3BB30D90F482CEEB4B1F SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x387 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT PUSH2 0x40C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x403 SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A4 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B8 CALLER PUSH2 0x1055 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x612 JUMPI DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5DF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x5FF JUMPI DUP1 SWAP2 POP PUSH2 0x612 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x60A SWAP1 PUSH2 0x20F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x517 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x68F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x731 SWAP1 PUSH2 0x20C9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x816 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x86B PUSH2 0x1113 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x8BC CALLER PUSH2 0x1055 JUMP JUMPDEST PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x90B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x902 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x9E7 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x111D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAD2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB0B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xAF8 PUSH2 0x1559 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAF0 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xD97 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBF1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD84 JUMPI PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCB8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD6A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xD80 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xD8F SWAP1 PUSH2 0x20F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB12 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDE3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE1C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE09 PUSH2 0x1559 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE01 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE53 PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0xE5D PUSH1 0x0 PUSH2 0x1221 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xEEC PUSH2 0x1005 JUMP JUMPDEST PUSH2 0xEF4 PUSH2 0x1113 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xF25 PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8C SWAP1 PUSH2 0x1CE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF9E DUP2 PUSH2 0x1221 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xFF0 DUP5 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0xFFA SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x104B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1042 SWAP1 PUSH2 0x1DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0x10F8 SWAP2 SWAP1 PUSH2 0x1F4C JUMP JUMPDEST PUSH2 0x1102 SWAP2 SWAP1 PUSH2 0x1F4C JUMP JUMPDEST PUSH2 0x110C SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x119E DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x113C SWAP3 SWAP2 SWAP1 PUSH2 0x1BEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12E4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x11AB PUSH2 0x13AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11C9 PUSH2 0xE5F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x121F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1216 SWAP1 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1346 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13B3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x13A6 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x13A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139C SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13C2 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x13CB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1410 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1407 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1419 DUP6 PUSH2 0x14DF JUMP JUMPDEST PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144F SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1481 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x14D3 DUP3 DUP3 DUP7 PUSH2 0x14F2 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1502 JUMPI DUP3 SWAP1 POP PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1515 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1549 SWAP2 SWAP1 PUSH2 0x1CA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1598 DUP2 PUSH2 0x21AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15AD DUP2 PUSH2 0x21C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x160C DUP2 PUSH2 0x21D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1632 DUP5 DUP3 DUP6 ADD PUSH2 0x1589 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1661 DUP9 DUP3 DUP10 ADD PUSH2 0x1589 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1672 DUP9 DUP3 DUP10 ADD PUSH2 0x1589 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1683 DUP9 DUP3 DUP10 ADD PUSH2 0x15FD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16AC DUP9 DUP3 DUP10 ADD PUSH2 0x15B3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16DB DUP5 DUP3 DUP6 ADD PUSH2 0x159E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1704 DUP5 DUP3 DUP6 ADD PUSH2 0x15FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP4 DUP4 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x172E DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x173D DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174E DUP3 PUSH2 0x1E6A JUMP JUMPDEST PUSH2 0x1758 DUP2 DUP6 PUSH2 0x1E98 JUMP JUMPDEST SWAP4 POP PUSH2 0x1763 DUP4 PUSH2 0x1E5A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1794 JUMPI DUP2 MLOAD PUSH2 0x177B DUP9 DUP3 PUSH2 0x170D JUMP JUMPDEST SWAP8 POP PUSH2 0x1786 DUP4 PUSH2 0x1E8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1767 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17AA DUP2 PUSH2 0x1FEC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17B9 DUP2 PUSH2 0x1FF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CA DUP3 PUSH2 0x1E75 JUMP JUMPDEST PUSH2 0x17D4 DUP2 DUP6 PUSH2 0x1EA9 JUMP JUMPDEST SWAP4 POP PUSH2 0x17E4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2096 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F9 DUP2 PUSH2 0x204E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1808 DUP2 PUSH2 0x2072 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1819 DUP3 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x1823 DUP2 DUP6 PUSH2 0x1EB4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1833 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x183C DUP2 PUSH2 0x219A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1854 PUSH1 0x19 DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1894 PUSH1 0x26 DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18FA PUSH1 0x19 DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x596F752068617665206E6F20746F6B656E73207374616B656400000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193A PUSH1 0x1C DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F7420737570706F72746564204E465420436F6C6C656374696F6E00000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197A PUSH1 0x26 DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E0 PUSH1 0x20 DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A20 PUSH1 0x1C DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x596F752068617665206E6F207265776172647320746F20636C61696D00000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A60 PUSH1 0x1D DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA0 PUSH1 0x2A DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B06 PUSH1 0x1F DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1B4F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1725 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1B62 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1B68 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1B71 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B80 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B92 DUP3 DUP5 PUSH2 0x17BF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BCD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x1BDA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x1BE7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B77 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C04 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x1C11 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B77 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 DUP5 PUSH2 0x1743 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C4F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CC0 DUP2 DUP5 PUSH2 0x180E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE1 DUP2 PUSH2 0x1847 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D01 DUP2 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D21 DUP2 PUSH2 0x18ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D41 DUP2 PUSH2 0x192D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D61 DUP2 PUSH2 0x196D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D81 DUP2 PUSH2 0x19D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA1 DUP2 PUSH2 0x1A13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC1 DUP2 PUSH2 0x1A53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE1 DUP2 PUSH2 0x1A93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E01 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E1D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E38 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0x1E45 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0x1E52 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B77 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED0 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EDB DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1F10 JUMPI PUSH2 0x1F0F PUSH2 0x213C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F26 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F31 DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F41 JUMPI PUSH2 0x1F40 PUSH2 0x216B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F57 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F62 DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1F9B JUMPI PUSH2 0x1F9A PUSH2 0x213C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB1 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBC DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1FCF JUMPI PUSH2 0x1FCE PUSH2 0x213C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE5 DUP3 PUSH2 0x2024 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2059 DUP3 PUSH2 0x2060 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206B DUP3 PUSH2 0x2024 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207D DUP3 PUSH2 0x2084 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208F DUP3 PUSH2 0x2024 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20B4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2099 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x20C3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D4 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x20E8 JUMPI PUSH2 0x20E7 PUSH2 0x213C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FE DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2131 JUMPI PUSH2 0x2130 PUSH2 0x213C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B4 DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP2 EQ PUSH2 0x21BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21CB DUP2 PUSH2 0x1FEC JUMP JUMPDEST DUP2 EQ PUSH2 0x21D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21E2 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP2 EQ PUSH2 0x21ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xEC TIMESTAMP SELFBALANCE LOG2 SDIV 0x2F SLOAD 0xD2 DUP14 0xE 0x5F 0xC3 0xC PUSH7 0xFA740D70F440C0 ADDRESS 0xB5 XOR PUSH17 0x75EEF2B3A4E864736F6C63430008000033 ",
							"sourceMap": "29748:4875:0:-:0;;;30317:6;30284:39;;30520:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18664:1;18775:7;:22;;;;16203:5;16193:7;;:15;;;;;;;;;;;;;;;;;;28002:32;28021:12;:10;;;:12;;:::i;:::-;28002:18;;;:32;;:::i;:::-;30630:14;30614:13;;:30;;;;;;;;;;;;;;;;;;30670:13;30655:12;;:28;;;;;;;;;;;;;;;;;;30711:15;30694:14;:32;;;;30520:214;;;29748:4875;;15568:98;15621:7;15648:10;15641:17;;15568:98;:::o;29548:191::-;29622:16;29641:6;;;;;;;;;;29622:25;;29667:8;29658:6;;:17;;;;;;;;;;;;;;;;;;29722:8;29691:40;;29712:8;29691:40;;;;;;;;;;;;29548:191;;:::o;7:171:1:-;;109:6;103:13;94:22;;125:47;166:5;125:47;:::i;:::-;84:94;;;;:::o;184:173::-;;287:6;281:13;272:22;;303:48;345:5;303:48;:::i;:::-;262:95;;;;:::o;363:143::-;;451:6;445:13;436:22;;467:33;494:5;467:33;:::i;:::-;426:80;;;;:::o;512:654::-;;;;694:2;682:9;673:7;669:23;665:32;662:2;;;710:1;707;700:12;662:2;753:1;778:79;849:7;840:6;829:9;825:22;778:79;:::i;:::-;768:89;;724:143;906:2;932:78;1002:7;993:6;982:9;978:22;932:78;:::i;:::-;922:88;;877:143;1059:2;1085:64;1141:7;1132:6;1121:9;1117:22;1085:64;:::i;:::-;1075:74;;1030:129;652:514;;;;;:::o;1172:96::-;;1238:24;1256:5;1238:24;:::i;:::-;1227:35;;1217:51;;;:::o;1274:110::-;;1354:24;1372:5;1354:24;:::i;:::-;1343:35;;1333:51;;;:::o;1390:111::-;;1471:24;1489:5;1471:24;:::i;:::-;1460:35;;1450:51;;;:::o;1507:126::-;;1584:42;1577:5;1573:54;1562:65;;1552:81;;;:::o;1639:77::-;;1705:5;1694:16;;1684:32;;;:::o;1722:150::-;1809:38;1841:5;1809:38;:::i;:::-;1802:5;1799:49;1789:2;;1862:1;1859;1852:12;1789:2;1779:93;:::o;1878:152::-;1966:39;1999:5;1966:39;:::i;:::-;1959:5;1956:50;1946:2;;2020:1;2017;2010:12;1946:2;1936:94;:::o;2036:122::-;2109:24;2127:5;2109:24;:::i;:::-;2102:5;2099:35;2089:2;;2148:1;2145;2138:12;2089:2;2079:79;:::o;29748:4875:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:22622:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:1",
														"type": ""
													}
												],
												"src": "152:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "382:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "431:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "440:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "443:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "433:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "433:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "433:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "410:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "418:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "406:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "406:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "425:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "402:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "402:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "395:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:35:1"
															},
															"nodeType": "YulIf",
															"src": "392:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "456:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "479:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "466:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "466:20:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "456:6:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "529:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "538:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "541:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "531:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "531:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "531:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "501:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "509:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "498:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "498:30:1"
															},
															"nodeType": "YulIf",
															"src": "495:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "554:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "570:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "578:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "566:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "566:17:1"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "554:8:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "637:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "646:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "649:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "639:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "639:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "639:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "602:8:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "616:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "624:4:1",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "612:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "612:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "598:32:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "632:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "595:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "595:41:1"
															},
															"nodeType": "YulIf",
															"src": "592:2:1"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "349:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "357:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "365:8:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "375:6:1",
														"type": ""
													}
												],
												"src": "308:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "717:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "727:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "749:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "736:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "727:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "792:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "765:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "765:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "695:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "703:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "711:5:1",
														"type": ""
													}
												],
												"src": "665:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "876:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "922:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "931:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "934:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "924:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "924:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "924:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "897:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "906:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "893:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "918:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "889:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:32:1"
															},
															"nodeType": "YulIf",
															"src": "886:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "948:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "963:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "977:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "967:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "992:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1027:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1038:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1023:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1023:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1047:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1002:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1002:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "992:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "846:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "857:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "869:6:1",
														"type": ""
													}
												],
												"src": "810:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1214:693:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1261:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1270:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1273:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1263:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1263:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1263:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1235:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1244:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1231:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1231:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1256:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1227:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1227:33:1"
															},
															"nodeType": "YulIf",
															"src": "1224:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1287:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1302:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1316:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1306:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1331:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1366:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1377:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1362:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1362:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1386:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1341:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1341:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1331:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1414:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1429:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1443:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1433:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1459:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1494:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1505:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1490:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1514:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1469:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1469:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1459:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1542:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1557:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1571:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1561:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1587:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1622:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1633:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1618:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1618:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1642:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1597:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1597:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1587:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1670:230:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1685:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1716:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1727:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1712:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1712:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1699:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1699:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1689:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1778:16:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1787:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1790:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1780:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1780:12:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1780:12:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1750:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1758:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1747:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1747:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "1744:2:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1808:82:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1862:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1873:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1882:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1826:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1826:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1808:6:1"
																		},
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "1816:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1152:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1163:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1175:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1183:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1191:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1199:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1207:6:1",
														"type": ""
													}
												],
												"src": "1078:829:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1987:204:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2033:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2042:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2045:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2035:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2035:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2035:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2008:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2017:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2004:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2004:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2029:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2000:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:32:1"
															},
															"nodeType": "YulIf",
															"src": "1997:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2059:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2074:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2088:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2078:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2103:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2146:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2157:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2142:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2142:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2166:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2113:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2113:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2103:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1957:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1968:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1980:6:1",
														"type": ""
													}
												],
												"src": "1913:278:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2263:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2309:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2318:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2321:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2311:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2311:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2311:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2284:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2293:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2280:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2305:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2276:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:32:1"
															},
															"nodeType": "YulIf",
															"src": "2273:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2335:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2350:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2364:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2354:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2379:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2414:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2425:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2410:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2410:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2434:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2389:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2389:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2379:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2233:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2244:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2256:6:1",
														"type": ""
													}
												],
												"src": "2197:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2603:157:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2705:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2713:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakedToken_$1163_memory_ptr_to_t_struct$_StakedToken_$1163_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2613:91:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2613:104:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2613:104:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2726:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2744:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2749:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2740:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2740:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "2726:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_StakedToken_$1163_memory_ptr_to_t_struct$_StakedToken_$1163_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2576:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2584:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "2592:10:1",
														"type": ""
													}
												],
												"src": "2465:295:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2821:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2838:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2843:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2843:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2831:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2809:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2816:3:1",
														"type": ""
													}
												],
												"src": "2766:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2945:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2962:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2985:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2967:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2967:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2955:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2933:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2940:3:1",
														"type": ""
													}
												],
												"src": "2880:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3248:782:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3258:97:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3349:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3272:76:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3272:83:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3262:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3364:122:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3474:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3479:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3371:102:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3371:115:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3364:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3495:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3589:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3510:78:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:85:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "3499:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3604:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "3618:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3608:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3694:311:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3708:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3735:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "3729:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3729:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "3712:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3755:128:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "3864:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3879:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_StakedToken_$1163_memory_ptr_to_t_struct$_StakedToken_$1163_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3762:101:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3762:121:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3755:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3896:99:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3988:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3906:81:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3906:89:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3896:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3656:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3659:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3653:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3653:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3667:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3669:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3678:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3681:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3674:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3674:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3669:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3638:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3640:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3649:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "3644:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3634:371:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4014:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4021:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4014:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3227:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3234:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3243:3:1",
														"type": ""
													}
												],
												"src": "3066:964:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4095:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4112:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4132:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4117:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4117:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4105:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4105:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4105:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4083:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4090:3:1",
														"type": ""
													}
												],
												"src": "4036:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4214:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4231:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4253:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "4236:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4236:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4224:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4224:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4224:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4202:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4209:3:1",
														"type": ""
													}
												],
												"src": "4151:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4380:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4390:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4436:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4404:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4404:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4394:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4451:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4534:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4539:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4458:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4451:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4581:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4588:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4577:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4577:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4595:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4600:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4555:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4555:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4555:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4616:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4627:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4632:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4623:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4623:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4616:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4361:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4368:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4376:3:1",
														"type": ""
													}
												],
												"src": "4272:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4730:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4747:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4797:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$454_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4752:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4752:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4740:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4740:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4740:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$454_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4718:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4725:3:1",
														"type": ""
													}
												],
												"src": "4651:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4896:81:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4913:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4964:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$138_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4918:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4918:52:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4906:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4906:65:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$138_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4884:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4891:3:1",
														"type": ""
													}
												],
												"src": "4816:161:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5075:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5085:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5132:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5099:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5099:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5089:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5147:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5213:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5218:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5154:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5147:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5260:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5267:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5256:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5256:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5274:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5279:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5234:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5234:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5234:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5295:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5306:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5333:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5311:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5311:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5302:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5295:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5056:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5063:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5071:3:1",
														"type": ""
													}
												],
												"src": "4983:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5499:177:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5509:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5575:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5580:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5516:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5516:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5509:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5604:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5609:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5600:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5600:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5613:27:1",
																		"type": "",
																		"value": "You don't own this token!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5593:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5651:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5662:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5667:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5658:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5658:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5651:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5487:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5495:3:1",
														"type": ""
													}
												],
												"src": "5353:323:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5828:224:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5838:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5904:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5909:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5845:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5845:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5838:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5933:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5938:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5929:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5929:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5942:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5922:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5922:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5922:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5998:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6003:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5994:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5994:12:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6008:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5987:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5987:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5987:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6027:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6038:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6043:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6034:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6034:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6027:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5816:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5824:3:1",
														"type": ""
													}
												],
												"src": "5682:370:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6204:177:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6214:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6280:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6285:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6221:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6221:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6214:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6309:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6314:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6305:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6305:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6318:27:1",
																		"type": "",
																		"value": "You have no tokens staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6298:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6298:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6298:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6356:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6367:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6372:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6363:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6363:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6356:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6200:3:1",
														"type": ""
													}
												],
												"src": "6058:323:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6533:180:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6543:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6609:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6614:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6550:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6550:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6543:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6638:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6643:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6647:30:1",
																		"type": "",
																		"value": "Not supported NFT Collection"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6627:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6627:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6688:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6699:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6704:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6695:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6695:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6688:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_41d43409f2d7162ba35b48a990c5f914c4024b4bdbebb61ed357215fd7bb0f20_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6521:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6529:3:1",
														"type": ""
													}
												],
												"src": "6387:326:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6865:224:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6875:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6941:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6946:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6882:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6875:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6970:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6975:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6966:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6966:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6979:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6959:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6959:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6959:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7035:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7040:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7031:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7031:12:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7045:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7024:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7024:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7024:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7064:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7075:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7080:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7071:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7071:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7064:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6853:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6861:3:1",
														"type": ""
													}
												],
												"src": "6719:370:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7241:184:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7251:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7317:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7322:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7258:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7258:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7251:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7346:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7351:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7342:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7342:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7355:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7335:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7335:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7400:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7411:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7416:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7407:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7407:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7400:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7229:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7237:3:1",
														"type": ""
													}
												],
												"src": "7095:330:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7577:180:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7587:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7653:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7658:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7594:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7594:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7587:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7682:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7687:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7678:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7678:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7691:30:1",
																		"type": "",
																		"value": "You have no rewards to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7671:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7671:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7671:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7732:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7743:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7748:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7739:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7739:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7732:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7565:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7573:3:1",
														"type": ""
													}
												],
												"src": "7431:326:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7909:181:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7919:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7985:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7990:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7926:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7926:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7919:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8014:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8019:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8010:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8010:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8023:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8003:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8003:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8003:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8065:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8076:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8081:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8072:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8072:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8065:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7897:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7905:3:1",
														"type": ""
													}
												],
												"src": "7763:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8242:228:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8252:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8318:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8323:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8259:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8259:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8252:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8347:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8352:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8343:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8343:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8356:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8336:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8336:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8336:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8412:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8417:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8408:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8408:12:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8422:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8401:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8401:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8445:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8456:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8461:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8452:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8452:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8445:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8230:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8238:3:1",
														"type": ""
													}
												],
												"src": "8096:374:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8622:183:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8632:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8698:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8703:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8639:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8639:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8632:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8727:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8732:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8723:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8723:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8736:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8716:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8716:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8716:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8780:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8791:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8796:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8787:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8787:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8780:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8610:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8618:3:1",
														"type": ""
													}
												],
												"src": "8476:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8983:396:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8993:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9009:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9014:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9005:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9005:14:1"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "8997:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9029:166:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9066:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9096:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9103:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9092:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9092:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9086:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9086:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9070:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9156:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9174:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9179:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9170:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9170:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9122:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9122:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9122:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9205:167:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9243:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9273:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9280:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9269:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9269:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9263:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9263:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "9247:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "9333:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "9351:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9356:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9347:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9347:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9299:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9299:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9299:63:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakedToken_$1163_memory_ptr_to_t_struct$_StakedToken_$1163_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8970:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8977:3:1",
														"type": ""
													}
												],
												"src": "8869:510:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9440:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9457:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9480:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9462:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9462:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9450:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9450:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9450:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9428:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9435:3:1",
														"type": ""
													}
												],
												"src": "9385:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9564:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9581:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9604:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9586:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9586:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9574:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9574:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9574:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9552:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9559:3:1",
														"type": ""
													}
												],
												"src": "9499:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9757:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9768:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9855:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9864:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9775:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9775:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9768:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9878:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9885:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9878:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9736:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9742:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9753:3:1",
														"type": ""
													}
												],
												"src": "9623:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9998:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10008:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10020:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10031:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10016:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10016:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10008:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10088:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10101:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10112:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10097:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10097:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10044:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10044:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10044:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9970:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9982:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9993:4:1",
														"type": ""
													}
												],
												"src": "9900:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10282:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10292:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10304:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10315:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10300:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10300:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10292:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10372:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10385:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10396:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10381:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10381:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10328:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10328:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10328:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10453:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10466:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10477:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10462:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10462:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10409:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10409:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10409:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10535:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10548:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10559:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10544:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10544:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10491:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10491:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10491:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10238:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10250:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10258:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10266:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10277:4:1",
														"type": ""
													}
												],
												"src": "10128:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10702:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10712:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10724:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10735:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10720:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10720:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10712:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10792:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10805:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10816:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10801:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10801:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10748:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10748:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10748:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10873:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10886:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10897:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10882:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10882:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10829:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10829:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10829:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10666:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10678:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10686:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10697:4:1",
														"type": ""
													}
												],
												"src": "10576:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11120:283:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11130:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11142:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11153:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11138:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11138:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11130:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11177:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11188:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11173:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11173:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11196:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11202:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11192:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11192:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11166:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11166:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11222:174:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11382:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11391:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11230:151:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11230:166:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11222:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11092:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11104:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11115:4:1",
														"type": ""
													}
												],
												"src": "10914:489:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11501:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11511:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11523:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11534:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11519:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11511:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11585:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11598:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11609:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11594:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11547:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11547:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11547:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11473:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11485:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11496:4:1",
														"type": ""
													}
												],
												"src": "11409:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11721:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11731:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11743:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11754:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11739:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11739:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11731:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11809:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11822:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11833:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11818:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11818:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11767:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11767:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11767:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11693:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11705:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11716:4:1",
														"type": ""
													}
												],
												"src": "11625:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11961:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11971:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11983:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11994:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11979:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11971:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12065:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12078:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12089:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12074:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12074:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$454_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12007:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12007:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12007:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$454__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11933:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11945:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11956:4:1",
														"type": ""
													}
												],
												"src": "11849:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12218:139:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12228:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12240:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12251:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12236:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12236:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12228:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12323:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12336:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12347:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12332:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12332:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$138_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12264:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12264:86:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12264:86:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$138__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12190:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12202:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12213:4:1",
														"type": ""
													}
												],
												"src": "12105:252:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12481:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12491:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12503:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12514:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12499:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12499:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12491:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12538:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12549:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12534:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12557:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12563:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12553:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12553:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12527:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12527:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12527:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12583:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12655:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12664:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12591:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12591:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12583:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12453:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12476:4:1",
														"type": ""
													}
												],
												"src": "12363:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12853:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12863:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12875:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12886:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12871:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12871:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12863:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12910:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12921:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12906:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12906:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12929:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12935:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12925:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12925:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12899:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12899:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12899:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12955:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13089:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12963:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12963:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12955:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12833:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12848:4:1",
														"type": ""
													}
												],
												"src": "12682:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13278:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13288:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13300:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13311:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13296:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13296:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13288:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13335:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13346:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13331:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13331:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13354:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13360:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13350:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13350:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13324:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13324:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13380:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13514:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13388:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13388:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13380:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13258:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13273:4:1",
														"type": ""
													}
												],
												"src": "13107:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13703:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13713:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13725:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13736:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13721:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13721:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13713:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13760:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13771:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13756:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13756:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13779:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13785:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13775:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13775:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13749:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13749:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13749:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13805:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13939:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13813:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13813:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13805:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13683:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13698:4:1",
														"type": ""
													}
												],
												"src": "13532:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14128:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14138:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14150:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14161:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14146:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14146:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14138:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14185:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14196:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14181:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14181:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14204:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14210:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14200:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14200:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14174:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14174:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14174:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14230:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14364:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_41d43409f2d7162ba35b48a990c5f914c4024b4bdbebb61ed357215fd7bb0f20_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14238:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14238:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14230:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_41d43409f2d7162ba35b48a990c5f914c4024b4bdbebb61ed357215fd7bb0f20__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14108:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14123:4:1",
														"type": ""
													}
												],
												"src": "13957:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14553:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14563:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14575:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14586:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14571:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14571:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14563:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14610:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14621:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14606:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14606:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14629:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14635:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14625:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14625:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14599:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14599:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14599:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14655:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14789:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14663:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14663:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14655:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14533:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14548:4:1",
														"type": ""
													}
												],
												"src": "14382:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14978:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14988:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15000:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15011:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14996:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14996:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14988:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15035:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15046:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15031:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15031:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15054:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15060:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15050:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15050:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15024:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15024:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15024:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15080:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15214:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15088:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15088:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15080:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14958:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14973:4:1",
														"type": ""
													}
												],
												"src": "14807:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15403:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15413:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15425:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15436:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15421:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15421:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15413:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15460:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15471:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15456:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15456:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15479:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15485:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15475:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15475:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15449:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15449:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15449:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15505:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15639:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15513:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15513:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15505:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15383:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15398:4:1",
														"type": ""
													}
												],
												"src": "15232:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15828:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15838:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15850:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15861:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15846:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15846:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15838:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15885:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15896:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15881:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15881:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15904:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15910:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15900:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15874:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15874:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15874:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15930:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16064:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15938:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15938:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15930:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15808:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15823:4:1",
														"type": ""
													}
												],
												"src": "15657:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16253:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16263:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16275:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16286:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16271:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16263:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16310:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16321:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16306:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16329:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16335:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16325:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16325:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16299:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16299:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16355:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16489:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16363:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16363:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16355:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16233:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16248:4:1",
														"type": ""
													}
												],
												"src": "16082:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16678:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16688:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16700:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16711:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16696:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16696:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16688:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16735:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16746:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16731:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16731:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16754:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16760:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16750:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16750:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16724:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16724:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16724:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16780:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16914:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16788:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16788:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16780:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16658:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16673:4:1",
														"type": ""
													}
												],
												"src": "16507:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17030:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17040:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17052:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17063:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17048:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17048:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17040:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17120:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17133:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17144:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17129:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17076:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17076:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17076:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17002:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17014:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17025:4:1",
														"type": ""
													}
												],
												"src": "16932:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17314:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17324:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17336:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17347:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17332:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17332:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17324:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17404:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17417:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17428:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17413:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17413:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17360:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17360:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17360:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17485:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17498:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17509:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17494:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17441:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17441:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17441:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17567:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17580:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17591:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17576:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17576:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17523:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17523:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17523:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17270:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17282:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17290:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17298:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17309:4:1",
														"type": ""
													}
												],
												"src": "17160:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17709:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17719:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "17727:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "17719:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17740:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "17752:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17757:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17748:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17748:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "17740:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "17696:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17704:4:1",
														"type": ""
													}
												],
												"src": "17608:161:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17878:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17889:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17905:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17899:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17899:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17889:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17861:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17871:6:1",
														"type": ""
													}
												],
												"src": "17775:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17982:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17993:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18009:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18003:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18003:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17993:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17965:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17975:6:1",
														"type": ""
													}
												],
												"src": "17924:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18087:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18098:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18114:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18108:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18108:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18098:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18070:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18080:6:1",
														"type": ""
													}
												],
												"src": "18028:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18237:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18247:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18259:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18264:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18255:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18255:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "18247:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "18224:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "18232:4:1",
														"type": ""
													}
												],
												"src": "18133:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18421:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18438:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18443:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18431:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18431:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18431:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18459:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18478:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18483:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18474:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18474:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18459:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18393:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18398:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18409:11:1",
														"type": ""
													}
												],
												"src": "18281:213:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18613:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18623:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "18638:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18623:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18585:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18590:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18601:11:1",
														"type": ""
													}
												],
												"src": "18500:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18749:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18766:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18771:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18759:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18759:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18759:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18787:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18806:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18811:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18802:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18802:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18787:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18721:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18726:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18737:11:1",
														"type": ""
													}
												],
												"src": "18653:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18872:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18882:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18905:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18887:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18887:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18882:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18916:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18939:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18921:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18921:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18916:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19079:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19081:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19081:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19081:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19000:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19007:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19075:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19003:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19003:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18997:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18997:81:1"
															},
															"nodeType": "YulIf",
															"src": "18994:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19111:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19122:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19125:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19118:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19118:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "19111:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18859:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18862:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "18868:3:1",
														"type": ""
													}
												],
												"src": "18828:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19181:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19191:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19214:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19196:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19196:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19191:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19225:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19248:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19230:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19230:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19225:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19272:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19274:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19274:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19274:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19269:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19262:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19262:9:1"
															},
															"nodeType": "YulIf",
															"src": "19259:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19304:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19313:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19316:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19309:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19304:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19170:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19173:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19179:1:1",
														"type": ""
													}
												],
												"src": "19139:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19378:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19388:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19411:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19393:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19393:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19388:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19422:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19445:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19427:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19427:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19422:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19620:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19622:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19622:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19622:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19532:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "19525:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19525:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "19518:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19518:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19540:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19547:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "19615:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "19543:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19543:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19537:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19537:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19514:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19514:105:1"
															},
															"nodeType": "YulIf",
															"src": "19511:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19652:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19667:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19670:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19663:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19663:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "19652:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19361:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19364:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "19370:7:1",
														"type": ""
													}
												],
												"src": "19330:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19729:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19739:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19762:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19744:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19744:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19739:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19773:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19796:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19778:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19778:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19773:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19820:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19822:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19822:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19822:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19814:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19817:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19811:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19811:8:1"
															},
															"nodeType": "YulIf",
															"src": "19808:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19852:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19864:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19867:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19860:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19860:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "19852:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19715:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19718:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "19724:4:1",
														"type": ""
													}
												],
												"src": "19684:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19926:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19936:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19965:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19947:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19947:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19936:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19908:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19918:7:1",
														"type": ""
													}
												],
												"src": "19881:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20025:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20035:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20060:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20053:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20053:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20046:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20046:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20035:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20007:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20017:7:1",
														"type": ""
													}
												],
												"src": "19983:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20123:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20133:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20148:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20155:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20144:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20144:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20133:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20105:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20115:7:1",
														"type": ""
													}
												],
												"src": "20079:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20279:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20289:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20304:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20311:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20300:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20300:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20289:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20261:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20271:7:1",
														"type": ""
													}
												],
												"src": "20234:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20411:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20421:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "20432:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "20421:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "20403:7:1",
														"type": ""
													}
												],
												"src": "20366:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20523:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20533:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20591:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC20_$454_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20546:44:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20546:51:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20533:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$454_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20503:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20513:9:1",
														"type": ""
													}
												],
												"src": "20449:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20683:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20693:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20724:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20706:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20706:24:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20693:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$454_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20663:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20673:9:1",
														"type": ""
													}
												],
												"src": "20609:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20817:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20827:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20886:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC721_$138_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20840:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20840:52:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20827:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$138_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20797:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20807:9:1",
														"type": ""
													}
												],
												"src": "20742:156:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20979:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20989:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21020:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "21002:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21002:24:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20989:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$138_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20959:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20969:9:1",
														"type": ""
													}
												],
												"src": "20904:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21087:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21097:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "21106:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "21101:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21166:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "21191:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "21196:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "21187:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21187:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "21210:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "21215:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "21206:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "21206:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "21200:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21200:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21180:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21180:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21180:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21127:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21130:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "21124:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21124:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "21138:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "21140:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "21149:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21152:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "21145:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21145:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "21140:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "21120:3:1",
																"statements": []
															},
															"src": "21116:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21263:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "21313:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "21318:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "21309:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "21309:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21327:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "21302:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21302:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21302:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21244:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21247:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21241:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21241:13:1"
															},
															"nodeType": "YulIf",
															"src": "21238:2:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "21069:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "21074:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21079:6:1",
														"type": ""
													}
												],
												"src": "21038:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21394:128:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21404:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21431:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21413:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21413:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "21404:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21465:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21467:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21467:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21467:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21452:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21459:4:1",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "21449:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21449:15:1"
															},
															"nodeType": "YulIf",
															"src": "21446:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21496:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21507:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21514:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "21503:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21503:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "21496:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21380:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "21390:3:1",
														"type": ""
													}
												],
												"src": "21351:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21571:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21581:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21608:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21590:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21590:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "21581:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21704:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21706:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21706:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21706:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21629:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21636:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "21626:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21626:77:1"
															},
															"nodeType": "YulIf",
															"src": "21623:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21735:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21746:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21753:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21742:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21742:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "21735:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21557:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "21567:3:1",
														"type": ""
													}
												],
												"src": "21528:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21795:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21812:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21815:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21805:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21805:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21805:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21909:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21912:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21902:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21902:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21902:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21933:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21936:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21926:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21926:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21926:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "21767:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21981:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21998:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22001:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21991:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21991:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21991:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22095:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22098:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22088:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22088:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22119:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22122:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22112:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22112:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22112:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "21953:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22187:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22197:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22215:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22222:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22211:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22211:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22231:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "22227:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22227:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22207:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22207:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "22197:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22170:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "22180:6:1",
														"type": ""
													}
												],
												"src": "22139:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22290:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22347:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22356:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22359:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22349:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22349:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22349:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22313:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22338:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "22320:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22320:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22310:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22310:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22303:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22303:43:1"
															},
															"nodeType": "YulIf",
															"src": "22300:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22283:5:1",
														"type": ""
													}
												],
												"src": "22247:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22415:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22469:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22478:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22481:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22471:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22471:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22471:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22438:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22460:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "22445:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22445:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22435:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22435:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22428:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22428:40:1"
															},
															"nodeType": "YulIf",
															"src": "22425:2:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22408:5:1",
														"type": ""
													}
												],
												"src": "22375:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22540:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22597:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22606:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22609:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22599:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22599:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22599:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22563:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22588:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "22570:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22570:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "22560:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22560:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "22553:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22553:43:1"
															},
															"nodeType": "YulIf",
															"src": "22550:2:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22533:5:1",
														"type": ""
													}
												],
												"src": "22497:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_StakedToken_$1163_memory_ptr_to_t_struct$_StakedToken_$1163_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_StakedToken_$1163_memory_ptr_to_t_struct$_StakedToken_$1163_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Farm.StakedToken[] -> struct Farm.StakedToken[]\n    function abi_encode_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_StakedToken_$1163_memory_ptr_to_t_struct$_StakedToken_$1163_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IERC20_$454_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$454_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$138_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$138_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n\n        mstore(add(pos, 0), \"You don't own this token!\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n\n        mstore(add(pos, 0), \"You have no tokens staked\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_41d43409f2d7162ba35b48a990c5f914c4024b4bdbebb61ed357215fd7bb0f20_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n\n        mstore(add(pos, 0), \"Not supported NFT Collection\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(pos, 32), \"r call\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n\n        mstore(add(pos, 0), \"You have no rewards to claim\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n\n        mstore(add(pos, 0), \"Address: call to non-contract\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n\n        mstore(add(pos, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(pos, 32), \"ot succeed\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n\n        mstore(add(pos, 0), \"ReentrancyGuard: reentrant call\")\n\n        end := add(pos, 32)\n    }\n\n    // struct Farm.StakedToken -> struct Farm.StakedToken\n    function abi_encode_t_struct$_StakedToken_$1163_memory_ptr_to_t_struct$_StakedToken_$1163_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // staker\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$454__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$454_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$138__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$138_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_41d43409f2d7162ba35b48a990c5f914c4024b4bdbebb61ed357215fd7bb0f20__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_41d43409f2d7162ba35b48a990c5f914c4024b4bdbebb61ed357215fd7bb0f20_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$454_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$454_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$454_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$138_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC721_$138_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$138_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063a694fc3a11610066578063a694fc3a1461023b578063d1af0c7d14610257578063f2fde38b14610275578063f854a27f14610291576100ea565b80638da5cb5b146101bb5780639168ae72146101d9578063940670451461020b576100ea565b80635c975abb116100c85780635c975abb1461014557806363c28db1146101635780636588103b14610193578063715018a6146101b1576100ea565b8063150b7a02146100ef5780632e1a7d4d1461011f578063372500ab1461013b575b600080fd5b6101096004803603810190610104919061163b565b6102c1565b6040516101169190611c55565b60405180910390f35b610139600480360381019061013491906116e4565b61037f565b005b61014361086e565b005b61014d6109ea565b60405161015a9190611c3a565b60405180910390f35b61017d60048036038101906101789190611612565b610a01565b60405161018a9190611c18565b60405180910390f35b61019b610e25565b6040516101a89190611c8b565b60405180910390f35b6101b9610e4b565b005b6101c3610e5f565b6040516101d09190611b9d565b60405180910390f35b6101f360048036038101906101ee9190611612565b610e87565b60405161020293929190611e23565b60405180910390f35b610225600480360381019061022091906116e4565b610eb1565b6040516102329190611b9d565b60405180910390f35b610255600480360381019061025091906116e4565b610ee4565b005b61025f610ef7565b60405161026c9190611c70565b60405180910390f35b61028f600480360381019061028a9190611612565b610f1d565b005b6102ab60048036038101906102a69190611612565b610fa1565b6040516102b89190611e08565b60405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610353576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034a90611d28565b60405180910390fd5b7f150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f905095945050505050565b610387611005565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541161040c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040390611d08565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a490611cc8565b60405180910390fd5b60006104b833611055565b905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082825461050c9190611ec5565b925050819055506000805b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490508110156106125783600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010182815481106105df577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016001015414156105ff57809150610612565b808061060a906120f3565b915050610517565b506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101828154811061068f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000815480929190610731906120c9565b919050555060006006600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b81526004016107e893929190611bb8565b600060405180830381600087803b15801561080257600080fd5b505af1158015610816573d6000803e3d6000fd5b5050505042600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550505061086b611113565b50565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546108bc33611055565b6108c69190611ec5565b90506000811161090b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090290611d88565b60405180910390fd5b42600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506109e73382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661111d9092919063ffffffff16565b50565b6000600160009054906101000a900460ff16905090565b60606000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115610da2576000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015467ffffffffffffffff811115610ad2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610b0b57816020015b610af8611559565b815260200190600190039081610af05790505b5090506000805b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050811015610d9757600073ffffffffffffffffffffffffffffffffffffffff16600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018281548110610bf1577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d8457600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018181548110610cb8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050838381518110610d6a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052508180610d80906120f3565b9250505b8080610d8f906120f3565b915050610b12565b508192505050610e20565b600067ffffffffffffffff811115610de3577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015610e1c57816020015b610e09611559565b815260200190600190039081610e015790505b5090505b919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e536111a3565b610e5d6000611221565b565b600060018054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60056020528060005260406000206000915090508060000154908060020154908060030154905083565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610eec611005565b610ef4611113565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f256111a3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610f95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8c90611ce8565b60405180910390fd5b610f9e81611221565b50565b600080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154610ff084611055565b610ffa9190611ec5565b905080915050919050565b6002600054141561104b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104290611de8565b60405180910390fd5b6002600081905550565b6000610e10600454600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154426110ee9190611fa6565b6110f89190611f4c565b6111029190611f4c565b61110c9190611f1b565b9050919050565b6001600081905550565b61119e8363a9059cbb60e01b848460405160240161113c929190611bef565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112e4565b505050565b6111ab6113ab565b73ffffffffffffffffffffffffffffffffffffffff166111c9610e5f565b73ffffffffffffffffffffffffffffffffffffffff161461121f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121690611d68565b60405180910390fd5b565b600060018054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000611346826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113b39092919063ffffffff16565b90506000815111156113a6578080602001905181019061136691906116bb565b6113a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139c90611dc8565b60405180910390fd5b5b505050565b600033905090565b60606113c284846000856113cb565b90509392505050565b606082471015611410576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140790611d48565b60405180910390fd5b611419856114df565b611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144f90611da8565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516114819190611b86565b60006040518083038185875af1925050503d80600081146114be576040519150601f19603f3d011682016040523d82523d6000602084013e6114c3565b606091505b50915091506114d38282866114f2565b92505050949350505050565b600080823b905060008111915050919050565b6060831561150257829050611552565b6000835111156115155782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115499190611ca6565b60405180910390fd5b9392505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600081359050611598816121ab565b92915050565b6000815190506115ad816121c2565b92915050565b60008083601f8401126115c557600080fd5b8235905067ffffffffffffffff8111156115de57600080fd5b6020830191508360018202830111156115f657600080fd5b9250929050565b60008135905061160c816121d9565b92915050565b60006020828403121561162457600080fd5b600061163284828501611589565b91505092915050565b60008060008060006080868803121561165357600080fd5b600061166188828901611589565b955050602061167288828901611589565b9450506040611683888289016115fd565b935050606086013567ffffffffffffffff8111156116a057600080fd5b6116ac888289016115b3565b92509250509295509295909350565b6000602082840312156116cd57600080fd5b60006116db8482850161159e565b91505092915050565b6000602082840312156116f657600080fd5b6000611704848285016115fd565b91505092915050565b60006117198383611b39565b60408301905092915050565b61172e81611fda565b82525050565b61173d81611fda565b82525050565b600061174e82611e6a565b6117588185611e98565b935061176383611e5a565b8060005b8381101561179457815161177b888261170d565b975061178683611e8b565b925050600181019050611767565b5085935050505092915050565b6117aa81611fec565b82525050565b6117b981611ff8565b82525050565b60006117ca82611e75565b6117d48185611ea9565b93506117e4818560208601612096565b80840191505092915050565b6117f98161204e565b82525050565b61180881612072565b82525050565b600061181982611e80565b6118238185611eb4565b9350611833818560208601612096565b61183c8161219a565b840191505092915050565b6000611854601983611eb4565b91507f596f7520646f6e2774206f776e207468697320746f6b656e21000000000000006000830152602082019050919050565b6000611894602683611eb4565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006118fa601983611eb4565b91507f596f752068617665206e6f20746f6b656e73207374616b6564000000000000006000830152602082019050919050565b600061193a601c83611eb4565b91507f4e6f7420737570706f72746564204e465420436f6c6c656374696f6e000000006000830152602082019050919050565b600061197a602683611eb4565b91507f416464726573733a20696e73756666696369656e742062616c616e636520666f60008301527f722063616c6c00000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006119e0602083611eb4565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000611a20601c83611eb4565b91507f596f752068617665206e6f207265776172647320746f20636c61696d000000006000830152602082019050919050565b6000611a60601d83611eb4565b91507f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006000830152602082019050919050565b6000611aa0602a83611eb4565b91507f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008301527f6f742073756363656564000000000000000000000000000000000000000000006020830152604082019050919050565b6000611b06601f83611eb4565b91507f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006000830152602082019050919050565b604082016000820151611b4f6000850182611725565b506020820151611b626020850182611b68565b50505050565b611b7181612044565b82525050565b611b8081612044565b82525050565b6000611b9282846117bf565b915081905092915050565b6000602082019050611bb26000830184611734565b92915050565b6000606082019050611bcd6000830186611734565b611bda6020830185611734565b611be76040830184611b77565b949350505050565b6000604082019050611c046000830185611734565b611c116020830184611b77565b9392505050565b60006020820190508181036000830152611c328184611743565b905092915050565b6000602082019050611c4f60008301846117a1565b92915050565b6000602082019050611c6a60008301846117b0565b92915050565b6000602082019050611c8560008301846117f0565b92915050565b6000602082019050611ca060008301846117ff565b92915050565b60006020820190508181036000830152611cc0818461180e565b905092915050565b60006020820190508181036000830152611ce181611847565b9050919050565b60006020820190508181036000830152611d0181611887565b9050919050565b60006020820190508181036000830152611d21816118ed565b9050919050565b60006020820190508181036000830152611d418161192d565b9050919050565b60006020820190508181036000830152611d618161196d565b9050919050565b60006020820190508181036000830152611d81816119d3565b9050919050565b60006020820190508181036000830152611da181611a13565b9050919050565b60006020820190508181036000830152611dc181611a53565b9050919050565b60006020820190508181036000830152611de181611a93565b9050919050565b60006020820190508181036000830152611e0181611af9565b9050919050565b6000602082019050611e1d6000830184611b77565b92915050565b6000606082019050611e386000830186611b77565b611e456020830185611b77565b611e526040830184611b77565b949350505050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611ed082612044565b9150611edb83612044565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f1057611f0f61213c565b5b828201905092915050565b6000611f2682612044565b9150611f3183612044565b925082611f4157611f4061216b565b5b828204905092915050565b6000611f5782612044565b9150611f6283612044565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611f9b57611f9a61213c565b5b828202905092915050565b6000611fb182612044565b9150611fbc83612044565b925082821015611fcf57611fce61213c565b5b828203905092915050565b6000611fe582612024565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061205982612060565b9050919050565b600061206b82612024565b9050919050565b600061207d82612084565b9050919050565b600061208f82612024565b9050919050565b60005b838110156120b4578082015181840152602081019050612099565b838111156120c3576000848401525b50505050565b60006120d482612044565b915060008214156120e8576120e761213c565b5b600182039050919050565b60006120fe82612044565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156121315761213061213c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b6121b481611fda565b81146121bf57600080fd5b50565b6121cb81611fec565b81146121d657600080fd5b50565b6121e281612044565b81146121ed57600080fd5b5056fea2646970667358221220fbec4247a2052f54d28d0e5fc30c66fa740d70f440c030b5187075eef2b3a4e864736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0xF854A27F EQ PUSH2 0x291 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x94067045 EQ PUSH2 0x20B JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x63C28DB1 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x6588103B EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B1 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x163B JUMP JUMPDEST PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH2 0x86E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14D PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1C18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1C8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0xE4B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0xF1D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0xFA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1E08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x353 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1D28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x150B7A023D4804D13E8C85FB27262CB750CF6BA9F9DD3BB30D90F482CEEB4B1F SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x387 PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT PUSH2 0x40C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x403 SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A4 SWAP1 PUSH2 0x1CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4B8 CALLER PUSH2 0x1055 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x50C SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x612 JUMPI DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5DF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x5FF JUMPI DUP1 SWAP2 POP PUSH2 0x612 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x60A SWAP1 PUSH2 0x20F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x517 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x68F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x731 SWAP1 PUSH2 0x20C9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x816 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x86B PUSH2 0x1113 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x8BC CALLER PUSH2 0x1055 JUMP JUMPDEST PUSH2 0x8C6 SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x90B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x902 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x9E7 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x111D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAD2 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB0B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xAF8 PUSH2 0x1559 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xAF0 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xD97 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBF1 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD84 JUMPI PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCB8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD6A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xD80 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xD8F SWAP1 PUSH2 0x20F3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB12 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDE3 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE1C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE09 PUSH2 0x1559 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE01 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE53 PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0xE5D PUSH1 0x0 PUSH2 0x1221 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xEEC PUSH2 0x1005 JUMP JUMPDEST PUSH2 0xEF4 PUSH2 0x1113 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xF25 PUSH2 0x11A3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8C SWAP1 PUSH2 0x1CE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF9E DUP2 PUSH2 0x1221 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xFF0 DUP5 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0xFFA SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x104B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1042 SWAP1 PUSH2 0x1DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE10 PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x1FA6 JUMP JUMPDEST PUSH2 0x10F8 SWAP2 SWAP1 PUSH2 0x1F4C JUMP JUMPDEST PUSH2 0x1102 SWAP2 SWAP1 PUSH2 0x1F4C JUMP JUMPDEST PUSH2 0x110C SWAP2 SWAP1 PUSH2 0x1F1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x119E DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x113C SWAP3 SWAP2 SWAP1 PUSH2 0x1BEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x12E4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x11AB PUSH2 0x13AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11C9 PUSH2 0xE5F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x121F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1216 SWAP1 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1346 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13B3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x13A6 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1366 SWAP2 SWAP1 PUSH2 0x16BB JUMP JUMPDEST PUSH2 0x13A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139C SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13C2 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x13CB JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1410 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1407 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1419 DUP6 PUSH2 0x14DF JUMP JUMPDEST PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144F SWAP1 PUSH2 0x1DA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1481 SWAP2 SWAP1 PUSH2 0x1B86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x14BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x14D3 DUP3 DUP3 DUP7 PUSH2 0x14F2 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1502 JUMPI DUP3 SWAP1 POP PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x1515 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1549 SWAP2 SWAP1 PUSH2 0x1CA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1598 DUP2 PUSH2 0x21AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x15AD DUP2 PUSH2 0x21C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x15C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x160C DUP2 PUSH2 0x21D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1632 DUP5 DUP3 DUP6 ADD PUSH2 0x1589 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1661 DUP9 DUP3 DUP10 ADD PUSH2 0x1589 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1672 DUP9 DUP3 DUP10 ADD PUSH2 0x1589 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1683 DUP9 DUP3 DUP10 ADD PUSH2 0x15FD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16AC DUP9 DUP3 DUP10 ADD PUSH2 0x15B3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x16DB DUP5 DUP3 DUP6 ADD PUSH2 0x159E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1704 DUP5 DUP3 DUP6 ADD PUSH2 0x15FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP4 DUP4 PUSH2 0x1B39 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x172E DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x173D DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174E DUP3 PUSH2 0x1E6A JUMP JUMPDEST PUSH2 0x1758 DUP2 DUP6 PUSH2 0x1E98 JUMP JUMPDEST SWAP4 POP PUSH2 0x1763 DUP4 PUSH2 0x1E5A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1794 JUMPI DUP2 MLOAD PUSH2 0x177B DUP9 DUP3 PUSH2 0x170D JUMP JUMPDEST SWAP8 POP PUSH2 0x1786 DUP4 PUSH2 0x1E8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1767 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17AA DUP2 PUSH2 0x1FEC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17B9 DUP2 PUSH2 0x1FF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CA DUP3 PUSH2 0x1E75 JUMP JUMPDEST PUSH2 0x17D4 DUP2 DUP6 PUSH2 0x1EA9 JUMP JUMPDEST SWAP4 POP PUSH2 0x17E4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2096 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F9 DUP2 PUSH2 0x204E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1808 DUP2 PUSH2 0x2072 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1819 DUP3 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x1823 DUP2 DUP6 PUSH2 0x1EB4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1833 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x183C DUP2 PUSH2 0x219A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1854 PUSH1 0x19 DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1894 PUSH1 0x26 DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18FA PUSH1 0x19 DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x596F752068617665206E6F20746F6B656E73207374616B656400000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193A PUSH1 0x1C DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F7420737570706F72746564204E465420436F6C6C656374696F6E00000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197A PUSH1 0x26 DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E0 PUSH1 0x20 DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A20 PUSH1 0x1C DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x596F752068617665206E6F207265776172647320746F20636C61696D00000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A60 PUSH1 0x1D DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA0 PUSH1 0x2A DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B06 PUSH1 0x1F DUP4 PUSH2 0x1EB4 JUMP JUMPDEST SWAP2 POP PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1B4F PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1725 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1B62 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1B68 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1B71 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B80 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B92 DUP3 DUP5 PUSH2 0x17BF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BCD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x1BDA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x1BE7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B77 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C04 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x1C11 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B77 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 DUP5 PUSH2 0x1743 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C4F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C6A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CC0 DUP2 DUP5 PUSH2 0x180E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE1 DUP2 PUSH2 0x1847 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D01 DUP2 PUSH2 0x1887 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D21 DUP2 PUSH2 0x18ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D41 DUP2 PUSH2 0x192D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D61 DUP2 PUSH2 0x196D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D81 DUP2 PUSH2 0x19D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA1 DUP2 PUSH2 0x1A13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DC1 DUP2 PUSH2 0x1A53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE1 DUP2 PUSH2 0x1A93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E01 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E1D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E38 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0x1E45 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B77 JUMP JUMPDEST PUSH2 0x1E52 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B77 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED0 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EDB DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1F10 JUMPI PUSH2 0x1F0F PUSH2 0x213C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F26 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F31 DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F41 JUMPI PUSH2 0x1F40 PUSH2 0x216B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F57 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F62 DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1F9B JUMPI PUSH2 0x1F9A PUSH2 0x213C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB1 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FBC DUP4 PUSH2 0x2044 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1FCF JUMPI PUSH2 0x1FCE PUSH2 0x213C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE5 DUP3 PUSH2 0x2024 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2059 DUP3 PUSH2 0x2060 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206B DUP3 PUSH2 0x2024 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207D DUP3 PUSH2 0x2084 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x208F DUP3 PUSH2 0x2024 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20B4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2099 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x20C3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20D4 DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x20E8 JUMPI PUSH2 0x20E7 PUSH2 0x213C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FE DUP3 PUSH2 0x2044 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2131 JUMPI PUSH2 0x2130 PUSH2 0x213C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B4 DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP2 EQ PUSH2 0x21BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21CB DUP2 PUSH2 0x1FEC JUMP JUMPDEST DUP2 EQ PUSH2 0x21D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x21E2 DUP2 PUSH2 0x2044 JUMP JUMPDEST DUP2 EQ PUSH2 0x21ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xEC TIMESTAMP SELFBALANCE LOG2 SDIV 0x2F SLOAD 0xD2 DUP14 0xE 0x5F 0xC3 0xC PUSH7 0xFA740D70F440C0 ADDRESS 0xB5 XOR PUSH17 0x75EEF2B3A4E864736F6C63430008000033 ",
							"sourceMap": "29748:4875:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30742:350;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31947:1064;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33327:386;;;:::i;:::-;;16842:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33721:680;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30197:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28929:103;;;:::i;:::-;;28281:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30336:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;30463:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31866:73;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30164:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29187:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;34409:209;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30742:350;30908:6;30952:13;;;;;;;;;;;30935:30;;30943:4;30935:30;;;30927:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;31023:60;31009:75;;30742:350;;;;;;;:::o;31947:1064::-;19226:21;:19;:21::i;:::-;32073:1:::1;32038:7;:19;32046:10;32038:19;;;;;;;;;;;;;;;:32;;;:36;32016:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;32173:10;32146:37;;:13;:23;32160:8;32146:23;;;;;;;;;;;;;;;;;;;;;:37;;;32138:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;32325:15;32343:28;32360:10;32343:16;:28::i;:::-;32325:46;;32422:7;32382;:19;32390:10;32382:19;;;;;;;;;;;;;;;:36;;;:47;;;;;;;:::i;:::-;;;;;;;;32444:13;32477:9:::0;32472:225:::1;32496:7;:19;32504:10;32496:19;;;;;;;;;;;;;;;:32;;:39;;;;32492:1;:43;32472:225;;;32608:8;32561:7;:19;32569:10;32561:19;;;;;;;;;;;;;;;:32;;32594:1;32561:35;;;;;;;;;;;;;;;;;;;;;;;;;;:43;;;:55;32557:129;;;32645:1;32637:9;;32665:5;;32557:129;32537:3;;;;;:::i;:::-;;;;32472:225;;;;32768:1;32711:7;:19;32719:10;32711:19;;;;;;;;;;;;;;;:32;;32744:5;32711:39;;;;;;;;;;;;;;;;;;;;;;;;;;:46;;;:59;;;;;;;;;;;;;;;;;;32781:7;:19;32789:10;32781:19;;;;;;;;;;;;;;;:32;;;:34;;;;;;;;;:::i;:::-;;;;;;32860:1;32826:13;:23;32840:8;32826:23;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;32875:13;;;;;;;;;;;:26;;;32910:4;32917:10;32929:8;32875:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;32988:15;32949:7;:19;32957:10;32949:19;;;;;;;;;;;;;;;:36;;:54;;;;19258:1;;19270:20:::0;:18;:20::i;:::-;31947:1064;:::o;33327:386::-;33371:15;33433:7;:19;33441:10;33433:19;;;;;;;;;;;;;;;:36;;;33389:28;33406:10;33389:16;:28::i;:::-;:80;;;;:::i;:::-;33371:98;;33498:1;33488:7;:11;33480:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;33582:15;33543:7;:19;33551:10;33543:19;;;;;;;;;;;;;;;:36;;:54;;;;33647:1;33608:7;:19;33616:10;33608:19;;;;;;;;;;;;;;;:36;;:40;;;;33659:46;33685:10;33697:7;33659:12;;;;;;;;;;;:25;;;;:46;;;;;:::i;:::-;33327:386;:::o;16842:86::-;16889:4;16913:7;;;;;;;;;;;16906:14;;16842:86;:::o;33721:680::-;33782:20;33849:1;33819:7;:14;33827:5;33819:14;;;;;;;;;;;;;;;:27;;;:31;33815:579;;;33867:34;33922:7;:14;33930:5;33922:14;;;;;;;;;;;;;;;:27;;;33904:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;33867:83;;33965:14;34005:9;34000:286;34024:7;:14;34032:5;34024:14;;;;;;;;;;;;;;;:27;;:34;;;;34020:1;:38;34000:286;;;34138:1;34088:53;;:7;:14;34096:5;34088:14;;;;;;;;;;;;;;;:27;;34116:1;34088:30;;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:53;;;34084:187;;34190:7;:14;34198:5;34190:14;;;;;;;;;;;;;;;:27;;34218:1;34190:30;;;;;;;;;;;;;;;;;;;;;;;;;;34166:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;34180:6;34166:21;;;;;;;;;;;;;;;;;;;;;:54;;;;34243:8;;;;;:::i;:::-;;;;34084:187;34060:3;;;;;:::i;:::-;;;;34000:286;;;;34309:13;34302:20;;;;;;33815:579;34380:1;34362:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;34355:27;;33721:680;;;;:::o;30197:28::-;;;;;;;;;;;;;:::o;28929:103::-;28167:13;:11;:13::i;:::-;28994:30:::1;29021:1;28994:18;:30::i;:::-;28929:103::o:0;28281:87::-;28327:7;28354:6;;;;;;;;;;28347:13;;28281:87;:::o;30336:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;30463:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;31866:73::-;19226:21;:19;:21::i;:::-;19270:20;:18;:20::i;:::-;31866:73;:::o;30164:26::-;;;;;;;;;;;;;:::o;29187:201::-;28167:13;:11;:13::i;:::-;29296:1:::1;29276:22;;:8;:22;;;;29268:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;29352:28;29371:8;29352:18;:28::i;:::-;29187:201:::0;:::o;34409:209::-;34473:7;34493:15;34552:7;:16;34560:7;34552:16;;;;;;;;;;;;;;;:33;;;34511:25;34528:7;34511:16;:25::i;:::-;:74;;;;:::i;:::-;34493:92;;34603:7;34596:14;;;34409:209;;;:::o;19306:289::-;18708:1;19436:7;;:19;;19428:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;18708:1;19569:7;:18;;;;19306:289::o;33019:300::-;33112:16;33306:4;33288:14;;33244:7;:16;33252:7;33244:16;;;;;;;;;;;;;;;:29;;;33190:7;:16;33198:7;33190:16;;;;;;;;;;;;;;;:33;;;33172:15;:51;;;;:::i;:::-;33171:102;;;;:::i;:::-;33155:147;;;;:::i;:::-;33154:156;;;;:::i;:::-;33146:165;;33019:300;;;:::o;19603:213::-;18664:1;19786:7;:22;;;;19603:213::o;24638:177::-;24721:86;24741:5;24771:23;;;24796:2;24800:5;24748:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24721:19;:86::i;:::-;24638:177;;;:::o;28446:132::-;28521:12;:10;:12::i;:::-;28510:23;;:7;:5;:7::i;:::-;:23;;;28502:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;28446:132::o;29548:191::-;29622:16;29641:6;;;;;;;;;;29622:25;;29667:8;29658:6;;:17;;;;;;;;;;;;;;;;;;29722:8;29691:40;;29712:8;29691:40;;;;;;;;;;;;29548:191;;:::o;26943:761::-;27367:23;27393:69;27421:4;27393:69;;;;;;;;;;;;;;;;;27401:5;27393:27;;;;:69;;;;;:::i;:::-;27367:95;;27497:1;27477:10;:17;:21;27473:224;;;27619:10;27608:30;;;;;;;;;;;;:::i;:::-;27600:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;27473:224;26943:761;;;:::o;15568:98::-;15621:7;15648:10;15641:17;;15568:98;:::o;9557:195::-;9660:12;9692:52;9714:6;9722:4;9728:1;9731:12;9692:21;:52::i;:::-;9685:59;;9557:195;;;;;:::o;10609:530::-;10736:12;10794:5;10769:21;:30;;10761:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10861:18;10872:6;10861:10;:18::i;:::-;10853:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;10987:12;11001:23;11028:6;:11;;11048:5;11056:4;11028:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10986:75;;;;11079:52;11097:7;11106:10;11118:12;11079:17;:52::i;:::-;11072:59;;;;10609:530;;;;;;:::o;6639:422::-;6699:4;6907:12;7018:7;7006:20;6998:28;;7052:1;7045:4;:8;7038:15;;;6639:422;;;:::o;12145:742::-;12260:12;12289:7;12285:595;;;12320:10;12313:17;;;;12285:595;12454:1;12434:10;:17;:21;12430:439;;;12697:10;12691:17;12758:15;12745:10;12741:2;12737:19;12730:44;12645:148;12840:12;12833:20;;;;;;;;;;;:::i;:::-;;;;;;;;12145:742;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;7:139:1:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;308:351::-;;;425:3;418:4;410:6;406:17;402:27;392:2;;443:1;440;433:12;392:2;479:6;466:20;456:30;;509:18;501:6;498:30;495:2;;;541:1;538;531:12;495:2;578:4;570:6;566:17;554:29;;632:3;624:4;616:6;612:17;602:8;598:32;595:41;592:2;;;649:1;646;639:12;592:2;382:277;;;;;:::o;665:139::-;;749:6;736:20;727:29;;765:33;792:5;765:33;:::i;:::-;717:87;;;;:::o;810:262::-;;918:2;906:9;897:7;893:23;889:32;886:2;;;934:1;931;924:12;886:2;977:1;1002:53;1047:7;1038:6;1027:9;1023:22;1002:53;:::i;:::-;992:63;;948:117;876:196;;;;:::o;1078:829::-;;;;;;1256:3;1244:9;1235:7;1231:23;1227:33;1224:2;;;1273:1;1270;1263:12;1224:2;1316:1;1341:53;1386:7;1377:6;1366:9;1362:22;1341:53;:::i;:::-;1331:63;;1287:117;1443:2;1469:53;1514:7;1505:6;1494:9;1490:22;1469:53;:::i;:::-;1459:63;;1414:118;1571:2;1597:53;1642:7;1633:6;1622:9;1618:22;1597:53;:::i;:::-;1587:63;;1542:118;1727:2;1716:9;1712:18;1699:32;1758:18;1750:6;1747:30;1744:2;;;1790:1;1787;1780:12;1744:2;1826:64;1882:7;1873:6;1862:9;1858:22;1826:64;:::i;:::-;1808:82;;;;1670:230;1214:693;;;;;;;;:::o;1913:278::-;;2029:2;2017:9;2008:7;2004:23;2000:32;1997:2;;;2045:1;2042;2035:12;1997:2;2088:1;2113:61;2166:7;2157:6;2146:9;2142:22;2113:61;:::i;:::-;2103:71;;2059:125;1987:204;;;;:::o;2197:262::-;;2305:2;2293:9;2284:7;2280:23;2276:32;2273:2;;;2321:1;2318;2311:12;2273:2;2364:1;2389:53;2434:7;2425:6;2414:9;2410:22;2389:53;:::i;:::-;2379:63;;2335:117;2263:196;;;;:::o;2465:295::-;;2613:104;2713:3;2705:6;2613:104;:::i;:::-;2749:4;2744:3;2740:14;2726:28;;2603:157;;;;:::o;2766:108::-;2843:24;2861:5;2843:24;:::i;:::-;2838:3;2831:37;2821:53;;:::o;2880:118::-;2967:24;2985:5;2967:24;:::i;:::-;2962:3;2955:37;2945:53;;:::o;3066:964::-;;3272:83;3349:5;3272:83;:::i;:::-;3371:115;3479:6;3474:3;3371:115;:::i;:::-;3364:122;;3510:85;3589:5;3510:85;:::i;:::-;3618:7;3649:1;3634:371;3659:6;3656:1;3653:13;3634:371;;;3735:6;3729:13;3762:121;3879:3;3864:13;3762:121;:::i;:::-;3755:128;;3906:89;3988:6;3906:89;:::i;:::-;3896:99;;3694:311;3681:1;3678;3674:9;3669:14;;3634:371;;;3638:14;4021:3;4014:10;;3248:782;;;;;;;:::o;4036:109::-;4117:21;4132:5;4117:21;:::i;:::-;4112:3;4105:34;4095:50;;:::o;4151:115::-;4236:23;4253:5;4236:23;:::i;:::-;4231:3;4224:36;4214:52;;:::o;4272:373::-;;4404:38;4436:5;4404:38;:::i;:::-;4458:88;4539:6;4534:3;4458:88;:::i;:::-;4451:95;;4555:52;4600:6;4595:3;4588:4;4581:5;4577:16;4555:52;:::i;:::-;4632:6;4627:3;4623:16;4616:23;;4380:265;;;;;:::o;4651:159::-;4752:51;4797:5;4752:51;:::i;:::-;4747:3;4740:64;4730:80;;:::o;4816:161::-;4918:52;4964:5;4918:52;:::i;:::-;4913:3;4906:65;4896:81;;:::o;4983:364::-;;5099:39;5132:5;5099:39;:::i;:::-;5154:71;5218:6;5213:3;5154:71;:::i;:::-;5147:78;;5234:52;5279:6;5274:3;5267:4;5260:5;5256:16;5234:52;:::i;:::-;5311:29;5333:6;5311:29;:::i;:::-;5306:3;5302:39;5295:46;;5075:272;;;;;:::o;5353:323::-;;5516:67;5580:2;5575:3;5516:67;:::i;:::-;5509:74;;5613:27;5609:1;5604:3;5600:11;5593:48;5667:2;5662:3;5658:12;5651:19;;5499:177;;;:::o;5682:370::-;;5845:67;5909:2;5904:3;5845:67;:::i;:::-;5838:74;;5942:34;5938:1;5933:3;5929:11;5922:55;6008:8;6003:2;5998:3;5994:12;5987:30;6043:2;6038:3;6034:12;6027:19;;5828:224;;;:::o;6058:323::-;;6221:67;6285:2;6280:3;6221:67;:::i;:::-;6214:74;;6318:27;6314:1;6309:3;6305:11;6298:48;6372:2;6367:3;6363:12;6356:19;;6204:177;;;:::o;6387:326::-;;6550:67;6614:2;6609:3;6550:67;:::i;:::-;6543:74;;6647:30;6643:1;6638:3;6634:11;6627:51;6704:2;6699:3;6695:12;6688:19;;6533:180;;;:::o;6719:370::-;;6882:67;6946:2;6941:3;6882:67;:::i;:::-;6875:74;;6979:34;6975:1;6970:3;6966:11;6959:55;7045:8;7040:2;7035:3;7031:12;7024:30;7080:2;7075:3;7071:12;7064:19;;6865:224;;;:::o;7095:330::-;;7258:67;7322:2;7317:3;7258:67;:::i;:::-;7251:74;;7355:34;7351:1;7346:3;7342:11;7335:55;7416:2;7411:3;7407:12;7400:19;;7241:184;;;:::o;7431:326::-;;7594:67;7658:2;7653:3;7594:67;:::i;:::-;7587:74;;7691:30;7687:1;7682:3;7678:11;7671:51;7748:2;7743:3;7739:12;7732:19;;7577:180;;;:::o;7763:327::-;;7926:67;7990:2;7985:3;7926:67;:::i;:::-;7919:74;;8023:31;8019:1;8014:3;8010:11;8003:52;8081:2;8076:3;8072:12;8065:19;;7909:181;;;:::o;8096:374::-;;8259:67;8323:2;8318:3;8259:67;:::i;:::-;8252:74;;8356:34;8352:1;8347:3;8343:11;8336:55;8422:12;8417:2;8412:3;8408:12;8401:34;8461:2;8456:3;8452:12;8445:19;;8242:228;;;:::o;8476:329::-;;8639:67;8703:2;8698:3;8639:67;:::i;:::-;8632:74;;8736:33;8732:1;8727:3;8723:11;8716:54;8796:2;8791:3;8787:12;8780:19;;8622:183;;;:::o;8869:510::-;9014:4;9009:3;9005:14;9103:4;9096:5;9092:16;9086:23;9122:63;9179:4;9174:3;9170:14;9156:12;9122:63;:::i;:::-;9029:166;9280:4;9273:5;9269:16;9263:23;9299:63;9356:4;9351:3;9347:14;9333:12;9299:63;:::i;:::-;9205:167;8983:396;;;:::o;9385:108::-;9462:24;9480:5;9462:24;:::i;:::-;9457:3;9450:37;9440:53;;:::o;9499:118::-;9586:24;9604:5;9586:24;:::i;:::-;9581:3;9574:37;9564:53;;:::o;9623:271::-;;9775:93;9864:3;9855:6;9775:93;:::i;:::-;9768:100;;9885:3;9878:10;;9757:137;;;;:::o;9900:222::-;;10031:2;10020:9;10016:18;10008:26;;10044:71;10112:1;10101:9;10097:17;10088:6;10044:71;:::i;:::-;9998:124;;;;:::o;10128:442::-;;10315:2;10304:9;10300:18;10292:26;;10328:71;10396:1;10385:9;10381:17;10372:6;10328:71;:::i;:::-;10409:72;10477:2;10466:9;10462:18;10453:6;10409:72;:::i;:::-;10491;10559:2;10548:9;10544:18;10535:6;10491:72;:::i;:::-;10282:288;;;;;;:::o;10576:332::-;;10735:2;10724:9;10720:18;10712:26;;10748:71;10816:1;10805:9;10801:17;10792:6;10748:71;:::i;:::-;10829:72;10897:2;10886:9;10882:18;10873:6;10829:72;:::i;:::-;10702:206;;;;;:::o;10914:489::-;;11153:2;11142:9;11138:18;11130:26;;11202:9;11196:4;11192:20;11188:1;11177:9;11173:17;11166:47;11230:166;11391:4;11382:6;11230:166;:::i;:::-;11222:174;;11120:283;;;;:::o;11409:210::-;;11534:2;11523:9;11519:18;11511:26;;11547:65;11609:1;11598:9;11594:17;11585:6;11547:65;:::i;:::-;11501:118;;;;:::o;11625:218::-;;11754:2;11743:9;11739:18;11731:26;;11767:69;11833:1;11822:9;11818:17;11809:6;11767:69;:::i;:::-;11721:122;;;;:::o;11849:250::-;;11994:2;11983:9;11979:18;11971:26;;12007:85;12089:1;12078:9;12074:17;12065:6;12007:85;:::i;:::-;11961:138;;;;:::o;12105:252::-;;12251:2;12240:9;12236:18;12228:26;;12264:86;12347:1;12336:9;12332:17;12323:6;12264:86;:::i;:::-;12218:139;;;;:::o;12363:313::-;;12514:2;12503:9;12499:18;12491:26;;12563:9;12557:4;12553:20;12549:1;12538:9;12534:17;12527:47;12591:78;12664:4;12655:6;12591:78;:::i;:::-;12583:86;;12481:195;;;;:::o;12682:419::-;;12886:2;12875:9;12871:18;12863:26;;12935:9;12929:4;12925:20;12921:1;12910:9;12906:17;12899:47;12963:131;13089:4;12963:131;:::i;:::-;12955:139;;12853:248;;;:::o;13107:419::-;;13311:2;13300:9;13296:18;13288:26;;13360:9;13354:4;13350:20;13346:1;13335:9;13331:17;13324:47;13388:131;13514:4;13388:131;:::i;:::-;13380:139;;13278:248;;;:::o;13532:419::-;;13736:2;13725:9;13721:18;13713:26;;13785:9;13779:4;13775:20;13771:1;13760:9;13756:17;13749:47;13813:131;13939:4;13813:131;:::i;:::-;13805:139;;13703:248;;;:::o;13957:419::-;;14161:2;14150:9;14146:18;14138:26;;14210:9;14204:4;14200:20;14196:1;14185:9;14181:17;14174:47;14238:131;14364:4;14238:131;:::i;:::-;14230:139;;14128:248;;;:::o;14382:419::-;;14586:2;14575:9;14571:18;14563:26;;14635:9;14629:4;14625:20;14621:1;14610:9;14606:17;14599:47;14663:131;14789:4;14663:131;:::i;:::-;14655:139;;14553:248;;;:::o;14807:419::-;;15011:2;15000:9;14996:18;14988:26;;15060:9;15054:4;15050:20;15046:1;15035:9;15031:17;15024:47;15088:131;15214:4;15088:131;:::i;:::-;15080:139;;14978:248;;;:::o;15232:419::-;;15436:2;15425:9;15421:18;15413:26;;15485:9;15479:4;15475:20;15471:1;15460:9;15456:17;15449:47;15513:131;15639:4;15513:131;:::i;:::-;15505:139;;15403:248;;;:::o;15657:419::-;;15861:2;15850:9;15846:18;15838:26;;15910:9;15904:4;15900:20;15896:1;15885:9;15881:17;15874:47;15938:131;16064:4;15938:131;:::i;:::-;15930:139;;15828:248;;;:::o;16082:419::-;;16286:2;16275:9;16271:18;16263:26;;16335:9;16329:4;16325:20;16321:1;16310:9;16306:17;16299:47;16363:131;16489:4;16363:131;:::i;:::-;16355:139;;16253:248;;;:::o;16507:419::-;;16711:2;16700:9;16696:18;16688:26;;16760:9;16754:4;16750:20;16746:1;16735:9;16731:17;16724:47;16788:131;16914:4;16788:131;:::i;:::-;16780:139;;16678:248;;;:::o;16932:222::-;;17063:2;17052:9;17048:18;17040:26;;17076:71;17144:1;17133:9;17129:17;17120:6;17076:71;:::i;:::-;17030:124;;;;:::o;17160:442::-;;17347:2;17336:9;17332:18;17324:26;;17360:71;17428:1;17417:9;17413:17;17404:6;17360:71;:::i;:::-;17441:72;17509:2;17498:9;17494:18;17485:6;17441:72;:::i;:::-;17523;17591:2;17580:9;17576:18;17567:6;17523:72;:::i;:::-;17314:288;;;;;;:::o;17608:161::-;;17727:3;17719:11;;17757:4;17752:3;17748:14;17740:22;;17709:60;;;:::o;17775:143::-;;17905:5;17899:12;17889:22;;17878:40;;;:::o;17924:98::-;;18009:5;18003:12;17993:22;;17982:40;;;:::o;18028:99::-;;18114:5;18108:12;18098:22;;18087:40;;;:::o;18133:142::-;;18264:4;18259:3;18255:14;18247:22;;18237:38;;;:::o;18281:213::-;;18443:6;18438:3;18431:19;18483:4;18478:3;18474:14;18459:29;;18421:73;;;;:::o;18500:147::-;;18638:3;18623:18;;18613:34;;;;:::o;18653:169::-;;18771:6;18766:3;18759:19;18811:4;18806:3;18802:14;18787:29;;18749:73;;;;:::o;18828:305::-;;18887:20;18905:1;18887:20;:::i;:::-;18882:25;;18921:20;18939:1;18921:20;:::i;:::-;18916:25;;19075:1;19007:66;19003:74;19000:1;18997:81;18994:2;;;19081:18;;:::i;:::-;18994:2;19125:1;19122;19118:9;19111:16;;18872:261;;;;:::o;19139:185::-;;19196:20;19214:1;19196:20;:::i;:::-;19191:25;;19230:20;19248:1;19230:20;:::i;:::-;19225:25;;19269:1;19259:2;;19274:18;;:::i;:::-;19259:2;19316:1;19313;19309:9;19304:14;;19181:143;;;;:::o;19330:348::-;;19393:20;19411:1;19393:20;:::i;:::-;19388:25;;19427:20;19445:1;19427:20;:::i;:::-;19422:25;;19615:1;19547:66;19543:74;19540:1;19537:81;19532:1;19525:9;19518:17;19514:105;19511:2;;;19622:18;;:::i;:::-;19511:2;19670:1;19667;19663:9;19652:20;;19378:300;;;;:::o;19684:191::-;;19744:20;19762:1;19744:20;:::i;:::-;19739:25;;19778:20;19796:1;19778:20;:::i;:::-;19773:25;;19817:1;19814;19811:8;19808:2;;;19822:18;;:::i;:::-;19808:2;19867:1;19864;19860:9;19852:17;;19729:146;;;;:::o;19881:96::-;;19947:24;19965:5;19947:24;:::i;:::-;19936:35;;19926:51;;;:::o;19983:90::-;;20060:5;20053:13;20046:21;20035:32;;20025:48;;;:::o;20079:149::-;;20155:66;20148:5;20144:78;20133:89;;20123:105;;;:::o;20234:126::-;;20311:42;20304:5;20300:54;20289:65;;20279:81;;;:::o;20366:77::-;;20432:5;20421:16;;20411:32;;;:::o;20449:154::-;;20546:51;20591:5;20546:51;:::i;:::-;20533:64;;20523:80;;;:::o;20609:127::-;;20706:24;20724:5;20706:24;:::i;:::-;20693:37;;20683:53;;;:::o;20742:156::-;;20840:52;20886:5;20840:52;:::i;:::-;20827:65;;20817:81;;;:::o;20904:128::-;;21002:24;21020:5;21002:24;:::i;:::-;20989:37;;20979:53;;;:::o;21038:307::-;21106:1;21116:113;21130:6;21127:1;21124:13;21116:113;;;21215:1;21210:3;21206:11;21200:18;21196:1;21191:3;21187:11;21180:39;21152:2;21149:1;21145:10;21140:15;;21116:113;;;21247:6;21244:1;21241:13;21238:2;;;21327:1;21318:6;21313:3;21309:16;21302:27;21238:2;21087:258;;;;:::o;21351:171::-;;21413:24;21431:5;21413:24;:::i;:::-;21404:33;;21459:4;21452:5;21449:15;21446:2;;;21467:18;;:::i;:::-;21446:2;21514:1;21507:5;21503:13;21496:20;;21394:128;;;:::o;21528:233::-;;21590:24;21608:5;21590:24;:::i;:::-;21581:33;;21636:66;21629:5;21626:77;21623:2;;;21706:18;;:::i;:::-;21623:2;21753:1;21746:5;21742:13;21735:20;;21571:190;;;:::o;21767:180::-;21815:77;21812:1;21805:88;21912:4;21909:1;21902:15;21936:4;21933:1;21926:15;21953:180;22001:77;21998:1;21991:88;22098:4;22095:1;22088:15;22122:4;22119:1;22112:15;22139:102;;22231:2;22227:7;22222:2;22215:5;22211:14;22207:28;22197:38;;22187:54;;;:::o;22247:122::-;22320:24;22338:5;22320:24;:::i;:::-;22313:5;22310:35;22300:2;;22359:1;22356;22349:12;22300:2;22290:79;:::o;22375:116::-;22445:21;22460:5;22445:21;:::i;:::-;22438:5;22435:32;22425:2;;22481:1;22478;22471:12;22425:2;22415:76;:::o;22497:122::-;22570:24;22588:5;22570:24;:::i;:::-;22563:5;22560:35;22550:2;;22609:1;22606;22599:12;22550:2;22540:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1748400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"availableRewards(address)": "infinite",
								"claimRewards()": "infinite",
								"getStakedTokens(address)": "infinite",
								"nftCollection()": "1324",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "1292",
								"paused()": "1202",
								"renounceOwnership()": "24631",
								"rewardsToken()": "1301",
								"stake(uint256)": "26330",
								"stakerAddress(uint256)": "1606",
								"stakers(address)": "infinite",
								"transferOwnership(address)": "24957",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_stake(address,uint256)": "infinite",
								"calculateRewards(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29748,
									"end": 34623,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 29748,
									"end": 34623,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29748,
									"end": 34623,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30317,
									"end": 30323,
									"name": "PUSH",
									"source": 0,
									"value": "186A0"
								},
								{
									"begin": 30284,
									"end": 30323,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30284,
									"end": 30323,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18664,
									"end": 18665,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18775,
									"end": 18782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 18797,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 18797,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 18797,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 18797,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16203,
									"end": 16208,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16193,
									"end": 16200,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16193,
									"end": 16200,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 16193,
									"end": 16208,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28002,
									"end": 28034,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 28021,
									"end": 28033,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28021,
									"end": 28031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 28021,
									"end": 28031,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28021,
									"end": 28031,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 28021,
									"end": 28033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28021,
									"end": 28033,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 28021,
									"end": 28033,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 28021,
									"end": 28033,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28021,
									"end": 28033,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28002,
									"end": 28020,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 28002,
									"end": 28020,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28002,
									"end": 28020,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 28002,
									"end": 28034,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28002,
									"end": 28034,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 28002,
									"end": 28034,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 28002,
									"end": 28034,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 28002,
									"end": 28034,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30630,
									"end": 30644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30627,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 30614,
									"end": 30627,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30614,
									"end": 30644,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30670,
									"end": 30683,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30667,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 30655,
									"end": 30667,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30655,
									"end": 30683,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30711,
									"end": 30726,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30694,
									"end": 30708,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30694,
									"end": 30726,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30694,
									"end": 30726,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30694,
									"end": 30726,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30694,
									"end": 30726,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30520,
									"end": 30734,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29748,
									"end": 34623,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 29748,
									"end": 34623,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 15568,
									"end": 15666,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 15568,
									"end": 15666,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15621,
									"end": 15628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15648,
									"end": 15658,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 15641,
									"end": 15658,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15641,
									"end": 15658,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15568,
									"end": 15666,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15568,
									"end": 15666,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 29548,
									"end": 29739,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 29548,
									"end": 29739,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29622,
									"end": 29638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29641,
									"end": 29647,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29622,
									"end": 29647,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29622,
									"end": 29647,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29667,
									"end": 29675,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29664,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29658,
									"end": 29664,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29658,
									"end": 29675,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29722,
									"end": 29730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29712,
									"end": 29720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29691,
									"end": 29731,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 29548,
									"end": 29739,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29548,
									"end": 29739,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29548,
									"end": 29739,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 178,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7,
									"end": 178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 115,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 103,
									"end": 116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 94,
									"end": 116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 94,
									"end": 116,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 125,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 166,
									"end": 171,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 178,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 84,
									"end": 178,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 84,
									"end": 178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 84,
									"end": 178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 84,
									"end": 178,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 357,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 357,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 184,
									"end": 357,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 281,
									"end": 294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 272,
									"end": 294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 272,
									"end": 294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 303,
									"end": 351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 345,
									"end": 350,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 303,
									"end": 351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 303,
									"end": 351,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 303,
									"end": 351,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 303,
									"end": 351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 262,
									"end": 357,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 262,
									"end": 357,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 262,
									"end": 357,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 262,
									"end": 357,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 262,
									"end": 357,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 363,
									"end": 506,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 363,
									"end": 506,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 363,
									"end": 506,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 451,
									"end": 457,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 445,
									"end": 458,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 436,
									"end": 458,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 436,
									"end": 458,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 467,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 494,
									"end": 499,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 467,
									"end": 500,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 467,
									"end": 500,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 467,
									"end": 500,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 426,
									"end": 506,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 426,
									"end": 506,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 426,
									"end": 506,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 426,
									"end": 506,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 426,
									"end": 506,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 512,
									"end": 1166,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 512,
									"end": 1166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 512,
									"end": 1166,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 1166,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 512,
									"end": 1166,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 694,
									"end": 696,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 682,
									"end": 691,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 673,
									"end": 680,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 669,
									"end": 692,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 665,
									"end": 697,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 662,
									"end": 664,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 662,
									"end": 664,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 662,
									"end": 664,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 710,
									"end": 711,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 708,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 700,
									"end": 712,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 662,
									"end": 664,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 662,
									"end": 664,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 754,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 778,
									"end": 857,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 849,
									"end": 856,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 840,
									"end": 846,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 829,
									"end": 838,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 825,
									"end": 847,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 778,
									"end": 857,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 778,
									"end": 857,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 778,
									"end": 857,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 778,
									"end": 857,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 768,
									"end": 857,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 768,
									"end": 857,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 724,
									"end": 867,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 906,
									"end": 908,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 932,
									"end": 1010,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 1002,
									"end": 1009,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 993,
									"end": 999,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 982,
									"end": 991,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 978,
									"end": 1000,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1010,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 932,
									"end": 1010,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 932,
									"end": 1010,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 932,
									"end": 1010,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 922,
									"end": 1010,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 922,
									"end": 1010,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 877,
									"end": 1020,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 1061,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1085,
									"end": 1149,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1141,
									"end": 1148,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1130,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1117,
									"end": 1139,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1085,
									"end": 1149,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1085,
									"end": 1149,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1085,
									"end": 1149,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1085,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1149,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1149,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1159,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 652,
									"end": 1166,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 652,
									"end": 1166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 652,
									"end": 1166,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 652,
									"end": 1166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 652,
									"end": 1166,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 652,
									"end": 1166,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1172,
									"end": 1268,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1172,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1268,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1238,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1256,
									"end": 1261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1238,
									"end": 1262,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1238,
									"end": 1262,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1238,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1227,
									"end": 1262,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1227,
									"end": 1262,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1217,
									"end": 1268,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1217,
									"end": 1268,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1217,
									"end": 1268,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1217,
									"end": 1268,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1274,
									"end": 1384,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1274,
									"end": 1384,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1274,
									"end": 1384,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1354,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1372,
									"end": 1377,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1354,
									"end": 1378,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1378,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1354,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1343,
									"end": 1378,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1343,
									"end": 1378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1333,
									"end": 1384,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1333,
									"end": 1384,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1333,
									"end": 1384,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1333,
									"end": 1384,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1390,
									"end": 1501,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1390,
									"end": 1501,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1501,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1471,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1489,
									"end": 1494,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1471,
									"end": 1495,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1471,
									"end": 1495,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1471,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1460,
									"end": 1495,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1460,
									"end": 1495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1450,
									"end": 1501,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1450,
									"end": 1501,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1450,
									"end": 1501,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1450,
									"end": 1501,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1507,
									"end": 1633,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1507,
									"end": 1633,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1507,
									"end": 1633,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1584,
									"end": 1626,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1577,
									"end": 1582,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1573,
									"end": 1627,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1627,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1627,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1633,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1633,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1633,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1633,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1639,
									"end": 1716,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1639,
									"end": 1716,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1639,
									"end": 1716,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1705,
									"end": 1710,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1694,
									"end": 1710,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1694,
									"end": 1710,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1716,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1716,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1716,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1716,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1722,
									"end": 1872,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1722,
									"end": 1872,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1809,
									"end": 1847,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1841,
									"end": 1846,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1809,
									"end": 1847,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1809,
									"end": 1847,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1809,
									"end": 1847,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1809,
									"end": 1847,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1802,
									"end": 1807,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1799,
									"end": 1848,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1789,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1789,
									"end": 1791,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1859,
									"end": 1860,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1852,
									"end": 1864,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1789,
									"end": 1791,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1789,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1779,
									"end": 1872,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1779,
									"end": 1872,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1878,
									"end": 2030,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1878,
									"end": 2030,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1999,
									"end": 2004,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1966,
									"end": 2005,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1966,
									"end": 2005,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1966,
									"end": 2005,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1959,
									"end": 1964,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1956,
									"end": 2006,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2020,
									"end": 2021,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2017,
									"end": 2018,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2010,
									"end": 2022,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1936,
									"end": 2030,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1936,
									"end": 2030,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2036,
									"end": 2158,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2036,
									"end": 2158,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2109,
									"end": 2133,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2127,
									"end": 2132,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2109,
									"end": 2133,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2109,
									"end": 2133,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2109,
									"end": 2133,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2109,
									"end": 2133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2102,
									"end": 2107,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2099,
									"end": 2134,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2089,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2089,
									"end": 2091,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2149,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2145,
									"end": 2146,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2138,
									"end": 2150,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2089,
									"end": 2091,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2089,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2079,
									"end": 2158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2079,
									"end": 2158,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 29748,
									"end": 34623,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 29748,
									"end": 34623,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29748,
									"end": 34623,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29748,
									"end": 34623,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29748,
									"end": 34623,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29748,
									"end": 34623,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29748,
									"end": 34623,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29748,
									"end": 34623,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29748,
									"end": 34623,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fbec4247a2052f54d28d0e5fc30c66fa740d70f440c030b5187075eef2b3a4e864736f6c63430008000033",
									".code": [
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "D1AF0C7D"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "F854A27F"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "9168AE72"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "94067045"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "63C28DB1"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "6588103B"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "372500AB"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 34623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 33327,
											"end": 33713,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33327,
											"end": 33713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33327,
											"end": 33713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 33327,
											"end": 33713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 33327,
											"end": 33713,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33327,
											"end": 33713,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 33327,
											"end": 33713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33327,
											"end": 33713,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30908,
											"end": 30914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30952,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30952,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30952,
											"end": 30965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30952,
											"end": 30965,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30952,
											"end": 30965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30952,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30952,
											"end": 30965,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30952,
											"end": 30965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30952,
											"end": 30965,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30952,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30952,
											"end": 30965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30935,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30935,
											"end": 30965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30943,
											"end": 30947,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30935,
											"end": 30965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30935,
											"end": 30965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30935,
											"end": 30965,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 30927,
											"end": 30998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31023,
											"end": 31083,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A023D4804D13E8C85FB27262CB750CF6BA9F9DD3BB30D90F482CEEB4B1F"
										},
										{
											"begin": 31009,
											"end": 31084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31009,
											"end": 31084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30742,
											"end": 31092,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 19226,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32073,
											"end": 32074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32038,
											"end": 32045,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32046,
											"end": 32056,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32038,
											"end": 32057,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32038,
											"end": 32070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32038,
											"end": 32070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32038,
											"end": 32070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32038,
											"end": 32074,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 32016,
											"end": 32127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32173,
											"end": 32183,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32183,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32146,
											"end": 32183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32159,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32160,
											"end": 32168,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32146,
											"end": 32169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32183,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32146,
											"end": 32183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32183,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 32138,
											"end": 32213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32325,
											"end": 32340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32343,
											"end": 32371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32360,
											"end": 32370,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32343,
											"end": 32359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32343,
											"end": 32371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32343,
											"end": 32371,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32343,
											"end": 32371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32325,
											"end": 32371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32325,
											"end": 32371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32422,
											"end": 32429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32389,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32390,
											"end": 32400,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32382,
											"end": 32401,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32418,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32382,
											"end": 32418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32382,
											"end": 32429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32444,
											"end": 32457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32477,
											"end": 32486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32472,
											"end": 32697,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 32472,
											"end": 32697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32503,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32504,
											"end": 32514,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32496,
											"end": 32515,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32528,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32496,
											"end": 32528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32535,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32492,
											"end": 32493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32492,
											"end": 32535,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32472,
											"end": 32697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32472,
											"end": 32697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 32472,
											"end": 32697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32608,
											"end": 32616,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32568,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32569,
											"end": 32579,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32561,
											"end": 32580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32593,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32561,
											"end": 32593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32594,
											"end": 32595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32604,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32561,
											"end": 32604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32561,
											"end": 32616,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32686,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 32557,
											"end": 32686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32645,
											"end": 32646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32637,
											"end": 32646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32637,
											"end": 32646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32665,
											"end": 32670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 32665,
											"end": 32670,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32686,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 32557,
											"end": 32686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32537,
											"end": 32540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 32537,
											"end": 32540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32537,
											"end": 32540,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32537,
											"end": 32540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32472,
											"end": 32697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 32472,
											"end": 32697,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32472,
											"end": 32697,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 32472,
											"end": 32697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32472,
											"end": 32697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32768,
											"end": 32769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32711,
											"end": 32718,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32719,
											"end": 32729,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32711,
											"end": 32730,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32711,
											"end": 32743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32744,
											"end": 32749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32711,
											"end": 32757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32711,
											"end": 32770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32788,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32789,
											"end": 32799,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32781,
											"end": 32800,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32781,
											"end": 32813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32860,
											"end": 32861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32826,
											"end": 32839,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32826,
											"end": 32849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32840,
											"end": 32848,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32826,
											"end": 32849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32826,
											"end": 32849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32826,
											"end": 32849,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32826,
											"end": 32862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32888,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32875,
											"end": 32888,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32875,
											"end": 32888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32888,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32888,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32875,
											"end": 32888,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32888,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32888,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32875,
											"end": 32888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32901,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32875,
											"end": 32901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32901,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 32910,
											"end": 32914,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 32917,
											"end": 32927,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32929,
											"end": 32937,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32875,
											"end": 32938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32988,
											"end": 33003,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 32956,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32957,
											"end": 32967,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32949,
											"end": 32968,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 32985,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32949,
											"end": 32985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 33003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 33003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 33003,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 33003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19258,
											"end": 19259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19258,
											"end": 19259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 19270,
											"end": 19288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31947,
											"end": 33011,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33327,
											"end": 33713,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 33327,
											"end": 33713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33371,
											"end": 33386,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33433,
											"end": 33440,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33441,
											"end": 33451,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33433,
											"end": 33452,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33469,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33433,
											"end": 33469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33433,
											"end": 33469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33389,
											"end": 33417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 33406,
											"end": 33416,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33389,
											"end": 33405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 33389,
											"end": 33417,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33389,
											"end": 33417,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 33389,
											"end": 33417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33389,
											"end": 33469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 33389,
											"end": 33469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33389,
											"end": 33469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33389,
											"end": 33469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 33389,
											"end": 33469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33389,
											"end": 33469,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 33389,
											"end": 33469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33371,
											"end": 33469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33371,
											"end": 33469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33498,
											"end": 33499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33488,
											"end": 33495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33488,
											"end": 33499,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 33480,
											"end": 33532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33582,
											"end": 33597,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33550,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33551,
											"end": 33561,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33543,
											"end": 33562,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33579,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33543,
											"end": 33579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33597,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33543,
											"end": 33597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33647,
											"end": 33648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33608,
											"end": 33615,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33616,
											"end": 33626,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33608,
											"end": 33627,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33644,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33608,
											"end": 33644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33648,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 33685,
											"end": 33695,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33697,
											"end": 33704,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33671,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33659,
											"end": 33671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33659,
											"end": 33671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33671,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33659,
											"end": 33671,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33671,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33671,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33659,
											"end": 33671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33684,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33659,
											"end": 33684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 33659,
											"end": 33684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33705,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33705,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33659,
											"end": 33705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33659,
											"end": 33705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33659,
											"end": 33705,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 33659,
											"end": 33705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33327,
											"end": 33713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33327,
											"end": 33713,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16913,
											"end": 16920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16906,
											"end": 16920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16906,
											"end": 16920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16842,
											"end": 16928,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33782,
											"end": 33802,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33849,
											"end": 33850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33819,
											"end": 33826,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33827,
											"end": 33832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33819,
											"end": 33833,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33819,
											"end": 33846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33846,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33819,
											"end": 33850,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33815,
											"end": 34394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33815,
											"end": 34394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 33815,
											"end": 34394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33867,
											"end": 33901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33922,
											"end": 33929,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33930,
											"end": 33935,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33922,
											"end": 33936,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33922,
											"end": 33949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33922,
											"end": 33949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33922,
											"end": 33949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33867,
											"end": 33950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33867,
											"end": 33950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33965,
											"end": 33979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34005,
											"end": 34014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34000,
											"end": 34286,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 34000,
											"end": 34286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34031,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34032,
											"end": 34037,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34024,
											"end": 34038,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34051,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34024,
											"end": 34051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34024,
											"end": 34058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34020,
											"end": 34021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34020,
											"end": 34058,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34000,
											"end": 34286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34000,
											"end": 34286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 34000,
											"end": 34286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34138,
											"end": 34139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34088,
											"end": 34141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34088,
											"end": 34141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34095,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34096,
											"end": 34101,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34088,
											"end": 34102,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34115,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34088,
											"end": 34115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34116,
											"end": 34117,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34088,
											"end": 34125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34088,
											"end": 34125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34125,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34125,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34088,
											"end": 34125,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34125,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34088,
											"end": 34125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34088,
											"end": 34141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34088,
											"end": 34141,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 34084,
											"end": 34271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34197,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34198,
											"end": 34203,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34190,
											"end": 34204,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34217,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34190,
											"end": 34217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34218,
											"end": 34219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34190,
											"end": 34220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34179,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34180,
											"end": 34186,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34166,
											"end": 34220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34243,
											"end": 34251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34243,
											"end": 34251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34243,
											"end": 34251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 34243,
											"end": 34251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34243,
											"end": 34251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 34243,
											"end": 34251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34243,
											"end": 34251,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 34243,
											"end": 34251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34243,
											"end": 34251,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34243,
											"end": 34251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34243,
											"end": 34251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34271,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 34084,
											"end": 34271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34060,
											"end": 34063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34060,
											"end": 34063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34060,
											"end": 34063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 34060,
											"end": 34063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34060,
											"end": 34063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 34060,
											"end": 34063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34060,
											"end": 34063,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 34060,
											"end": 34063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34060,
											"end": 34063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34060,
											"end": 34063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34060,
											"end": 34063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34000,
											"end": 34286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 34000,
											"end": 34286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34000,
											"end": 34286,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 34000,
											"end": 34286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34000,
											"end": 34286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34309,
											"end": 34322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34302,
											"end": 34322,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34302,
											"end": 34322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34302,
											"end": 34322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34302,
											"end": 34322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34302,
											"end": 34322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 34302,
											"end": 34322,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33815,
											"end": 34394,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 33815,
											"end": 34394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34380,
											"end": 34381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34355,
											"end": 34382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34355,
											"end": 34382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33721,
											"end": 34401,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30197,
											"end": 30225,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 28167,
											"end": 28178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28994,
											"end": 29024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 29021,
											"end": 29022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28994,
											"end": 29012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 28994,
											"end": 29024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28994,
											"end": 29024,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 28994,
											"end": 29024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28929,
											"end": 29032,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28327,
											"end": 28334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28354,
											"end": 28360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28347,
											"end": 28360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28281,
											"end": 28368,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30336,
											"end": 30377,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30463,
											"end": 30511,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 19226,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 19226,
											"end": 19247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 19270,
											"end": 19288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 19270,
											"end": 19290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31866,
											"end": 31939,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30164,
											"end": 30190,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 28167,
											"end": 28178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 28167,
											"end": 28180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29296,
											"end": 29297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29276,
											"end": 29298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29276,
											"end": 29298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 29284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 29298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29276,
											"end": 29298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 29298,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 29298,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 29268,
											"end": 29341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29352,
											"end": 29380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 29371,
											"end": 29379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29352,
											"end": 29370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 29352,
											"end": 29380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29352,
											"end": 29380,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 29352,
											"end": 29380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29187,
											"end": 29388,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34473,
											"end": 34480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34493,
											"end": 34508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34552,
											"end": 34559,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34560,
											"end": 34567,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34552,
											"end": 34568,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34552,
											"end": 34585,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34552,
											"end": 34585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34552,
											"end": 34585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34511,
											"end": 34536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 34528,
											"end": 34535,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34511,
											"end": 34527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 34511,
											"end": 34536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34511,
											"end": 34536,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 34511,
											"end": 34536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34511,
											"end": 34585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 34511,
											"end": 34585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34511,
											"end": 34585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34511,
											"end": 34585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 34511,
											"end": 34585,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34511,
											"end": 34585,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 34511,
											"end": 34585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34493,
											"end": 34585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34493,
											"end": 34585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34603,
											"end": 34610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34596,
											"end": 34610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34596,
											"end": 34610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34596,
											"end": 34610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34409,
											"end": 34618,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19306,
											"end": 19595,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 19306,
											"end": 19595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18708,
											"end": 18709,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19436,
											"end": 19443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19436,
											"end": 19443,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 19455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19436,
											"end": 19455,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 19428,
											"end": 19491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18708,
											"end": 18709,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19569,
											"end": 19576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19569,
											"end": 19587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19569,
											"end": 19587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19569,
											"end": 19587,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19569,
											"end": 19587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19306,
											"end": 19595,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33019,
											"end": 33319,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 33019,
											"end": 33319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33112,
											"end": 33128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33306,
											"end": 33310,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 33288,
											"end": 33302,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33288,
											"end": 33302,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33244,
											"end": 33251,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33252,
											"end": 33259,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33244,
											"end": 33260,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33244,
											"end": 33273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33244,
											"end": 33273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33244,
											"end": 33273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33190,
											"end": 33197,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33198,
											"end": 33205,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33190,
											"end": 33206,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33190,
											"end": 33223,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33190,
											"end": 33223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33190,
											"end": 33223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33172,
											"end": 33187,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 33172,
											"end": 33223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 33172,
											"end": 33223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33172,
											"end": 33223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33172,
											"end": 33223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 33172,
											"end": 33223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33172,
											"end": 33223,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 33172,
											"end": 33223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33171,
											"end": 33273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 33171,
											"end": 33273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33171,
											"end": 33273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33171,
											"end": 33273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 33171,
											"end": 33273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33171,
											"end": 33273,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 33171,
											"end": 33273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33155,
											"end": 33302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 33155,
											"end": 33302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33155,
											"end": 33302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33155,
											"end": 33302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 33155,
											"end": 33302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33155,
											"end": 33302,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 33155,
											"end": 33302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33154,
											"end": 33310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 33154,
											"end": 33310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33154,
											"end": 33310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33154,
											"end": 33310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 33154,
											"end": 33310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33154,
											"end": 33310,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 33154,
											"end": 33310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33146,
											"end": 33311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33146,
											"end": 33311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33019,
											"end": 33319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33019,
											"end": 33319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33019,
											"end": 33319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33019,
											"end": 33319,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19603,
											"end": 19816,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 19603,
											"end": 19816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18664,
											"end": 18665,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19786,
											"end": 19793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19786,
											"end": 19808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19786,
											"end": 19808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19786,
											"end": 19808,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19786,
											"end": 19808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19603,
											"end": 19816,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24638,
											"end": 24815,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 24638,
											"end": 24815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 24741,
											"end": 24746,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24771,
											"end": 24794,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 24771,
											"end": 24794,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24771,
											"end": 24794,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 24796,
											"end": 24798,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24800,
											"end": 24805,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24748,
											"end": 24806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24721,
											"end": 24740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 24721,
											"end": 24807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24721,
											"end": 24807,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 24721,
											"end": 24807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24638,
											"end": 24815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24638,
											"end": 24815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24638,
											"end": 24815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24638,
											"end": 24815,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28446,
											"end": 28578,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 28446,
											"end": 28578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28521,
											"end": 28533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 28521,
											"end": 28531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 28521,
											"end": 28533,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28521,
											"end": 28533,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 28521,
											"end": 28533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28510,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28510,
											"end": 28533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28510,
											"end": 28517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 28510,
											"end": 28515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 28510,
											"end": 28517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28510,
											"end": 28517,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 28510,
											"end": 28517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28510,
											"end": 28533,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28510,
											"end": 28533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28510,
											"end": 28533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 28502,
											"end": 28570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28446,
											"end": 28578,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29548,
											"end": 29739,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 29548,
											"end": 29739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29622,
											"end": 29638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29641,
											"end": 29647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29622,
											"end": 29647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29622,
											"end": 29647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29667,
											"end": 29675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29664,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29658,
											"end": 29664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29722,
											"end": 29730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29712,
											"end": 29720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29691,
											"end": 29731,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 29548,
											"end": 29739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29548,
											"end": 29739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29548,
											"end": 29739,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26943,
											"end": 27704,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 26943,
											"end": 27704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27367,
											"end": 27390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 27421,
											"end": 27425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27401,
											"end": 27406,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27420,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27393,
											"end": 27420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 27393,
											"end": 27420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 27393,
											"end": 27462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27367,
											"end": 27462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27367,
											"end": 27462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27497,
											"end": 27498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27477,
											"end": 27487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27477,
											"end": 27494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27477,
											"end": 27498,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27473,
											"end": 27697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27473,
											"end": 27697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 27473,
											"end": 27697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27619,
											"end": 27629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 27608,
											"end": 27638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 27600,
											"end": 27685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27473,
											"end": 27697,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 27473,
											"end": 27697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26943,
											"end": 27704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26943,
											"end": 27704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26943,
											"end": 27704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26943,
											"end": 27704,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15568,
											"end": 15666,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 15568,
											"end": 15666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15621,
											"end": 15628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15648,
											"end": 15658,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15641,
											"end": 15658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15641,
											"end": 15658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15568,
											"end": 15666,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9557,
											"end": 9752,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 9557,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9660,
											"end": 9672,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9692,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 9714,
											"end": 9720,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9722,
											"end": 9726,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9728,
											"end": 9729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9731,
											"end": 9743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9692,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 9692,
											"end": 9744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9692,
											"end": 9744,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 9692,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 9744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9685,
											"end": 9744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9557,
											"end": 9752,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9557,
											"end": 9752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9557,
											"end": 9752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9557,
											"end": 9752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9557,
											"end": 9752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9557,
											"end": 9752,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10609,
											"end": 11139,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 10609,
											"end": 11139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10736,
											"end": 10748,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10794,
											"end": 10799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10769,
											"end": 10790,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 10769,
											"end": 10799,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10769,
											"end": 10799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 10761,
											"end": 10842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 10872,
											"end": 10878,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 10871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 10853,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10987,
											"end": 10999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11001,
											"end": 11024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11034,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11039,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11028,
											"end": 11039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11056,
											"end": 11060,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11028,
											"end": 11061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10986,
											"end": 11061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10986,
											"end": 11061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10986,
											"end": 11061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10986,
											"end": 11061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 11097,
											"end": 11104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11106,
											"end": 11116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11118,
											"end": 11130,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 11079,
											"end": 11131,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11079,
											"end": 11131,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 11079,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11131,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11072,
											"end": 11131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10609,
											"end": 11139,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10609,
											"end": 11139,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10609,
											"end": 11139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10609,
											"end": 11139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10609,
											"end": 11139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10609,
											"end": 11139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10609,
											"end": 11139,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6639,
											"end": 7061,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6639,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 6703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 6919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7025,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7006,
											"end": 7026,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6998,
											"end": 7026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6998,
											"end": 7026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7052,
											"end": 7053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7045,
											"end": 7049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7053,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7053,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7038,
											"end": 7053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6639,
											"end": 7061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6639,
											"end": 7061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6639,
											"end": 7061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6639,
											"end": 7061,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12145,
											"end": 12887,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 12145,
											"end": 12887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12260,
											"end": 12272,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12289,
											"end": 12296,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12285,
											"end": 12880,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12285,
											"end": 12880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 12285,
											"end": 12880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12330,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12313,
											"end": 12330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12313,
											"end": 12330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12313,
											"end": 12330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 12313,
											"end": 12330,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12285,
											"end": 12880,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 12285,
											"end": 12880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12454,
											"end": 12455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12434,
											"end": 12444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12434,
											"end": 12451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12434,
											"end": 12455,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12430,
											"end": 12869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12430,
											"end": 12869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 12430,
											"end": 12869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12697,
											"end": 12707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12691,
											"end": 12708,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12758,
											"end": 12773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12745,
											"end": 12755,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12741,
											"end": 12743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12737,
											"end": 12756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12730,
											"end": 12774,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12645,
											"end": 12793,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 12645,
											"end": 12793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12840,
											"end": 12852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12833,
											"end": 12853,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12145,
											"end": 12887,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 12145,
											"end": 12887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12145,
											"end": 12887,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12145,
											"end": 12887,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12145,
											"end": 12887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12145,
											"end": 12887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12145,
											"end": 12887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12145,
											"end": 12887,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "128"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 212,
											"end": 289,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 308,
											"end": 659,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 308,
											"end": 659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 425,
											"end": 428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 418,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 410,
											"end": 416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 406,
											"end": 423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 429,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 392,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 392,
											"end": 394,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 479,
											"end": 485,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 466,
											"end": 486,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 456,
											"end": 486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 501,
											"end": 507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 498,
											"end": 528,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 495,
											"end": 497,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 495,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 495,
											"end": 497,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 541,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 531,
											"end": 543,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 495,
											"end": 497,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 495,
											"end": 497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 578,
											"end": 582,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 576,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 566,
											"end": 583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 554,
											"end": 583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 554,
											"end": 583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 632,
											"end": 635,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 624,
											"end": 628,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 616,
											"end": 622,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 612,
											"end": 629,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 602,
											"end": 610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 598,
											"end": 630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 595,
											"end": 636,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 592,
											"end": 594,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 592,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 592,
											"end": 594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 649,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 651,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 592,
											"end": 594,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 592,
											"end": 594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 382,
											"end": 659,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 382,
											"end": 659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 382,
											"end": 659,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 382,
											"end": 659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 382,
											"end": 659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 382,
											"end": 659,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 665,
											"end": 804,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 665,
											"end": 804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 755,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 736,
											"end": 756,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 765,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 792,
											"end": 797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 765,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 765,
											"end": 798,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 798,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 765,
											"end": 798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 717,
											"end": 804,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 717,
											"end": 804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 717,
											"end": 804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 717,
											"end": 804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 717,
											"end": 804,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 810,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 810,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 810,
											"end": 1072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 906,
											"end": 915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 897,
											"end": 904,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 893,
											"end": 916,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 889,
											"end": 921,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 886,
											"end": 888,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 886,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 886,
											"end": 888,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 934,
											"end": 935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 924,
											"end": 936,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 886,
											"end": 888,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 886,
											"end": 888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 977,
											"end": 978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1047,
											"end": 1054,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1036,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 1002,
											"end": 1055,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1002,
											"end": 1055,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1002,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 948,
											"end": 1065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1072,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 876,
											"end": 1072,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1907,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1078,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1078,
											"end": 1907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1259,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1244,
											"end": 1253,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1242,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1260,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1226,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1224,
											"end": 1226,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1226,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1224,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 1341,
											"end": 1394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1394,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 1341,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1394,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1505,
											"end": 1511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1490,
											"end": 1512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1469,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1522,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1571,
											"end": 1573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1642,
											"end": 1649,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1631,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1597,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1597,
											"end": 1650,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1597,
											"end": 1650,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1597,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1650,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1729,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1731,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1777,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1746,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1744,
											"end": 1746,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1746,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1744,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1882,
											"end": 1889,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1879,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 1826,
											"end": 1890,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1826,
											"end": 1890,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1826,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1890,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1890,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1907,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1907,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1907,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1907,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1907,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1907,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1913,
											"end": 2191,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 1913,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 2191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2031,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2027,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2032,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2045,
											"end": 2046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2047,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2166,
											"end": 2173,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2113,
											"end": 2174,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2113,
											"end": 2174,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2113,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2191,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2191,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2191,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2197,
											"end": 2459,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2197,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2307,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2280,
											"end": 2303,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2308,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 2273,
											"end": 2275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2321,
											"end": 2322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 2273,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 2434,
											"end": 2441,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2389,
											"end": 2442,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2389,
											"end": 2442,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 2389,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2379,
											"end": 2442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2379,
											"end": 2442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2459,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2459,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2465,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 2465,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2713,
											"end": 2716,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 2613,
											"end": 2717,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2613,
											"end": 2717,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2613,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2753,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2760,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2760,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2766,
											"end": 2874,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 2766,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2843,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2874,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2880,
											"end": 2998,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 2880,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2985,
											"end": 2990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 2967,
											"end": 2991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2967,
											"end": 2991,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2967,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 2992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3066,
											"end": 4030,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3066,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 4030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3272,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3349,
											"end": 3354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 3272,
											"end": 3355,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3272,
											"end": 3355,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 3272,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3477,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 3371,
											"end": 3486,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3371,
											"end": 3486,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 3371,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3486,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 3589,
											"end": 3594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 3510,
											"end": 3595,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3510,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 3510,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3625,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3650,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 4005,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3634,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 3665,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3653,
											"end": 3666,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 4005,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3634,
											"end": 4005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3742,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3879,
											"end": 3882,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3864,
											"end": 3877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 3762,
											"end": 3883,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3883,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3762,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3883,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 3988,
											"end": 3994,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 3906,
											"end": 3995,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3906,
											"end": 3995,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 3906,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3995,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3694,
											"end": 4005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3681,
											"end": 3682,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3678,
											"end": 3679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 3683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 3634,
											"end": 4005,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3634,
											"end": 4005,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3634,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4024,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4024,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4030,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3248,
											"end": 4030,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4036,
											"end": 4145,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4036,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 4132,
											"end": 4137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 4117,
											"end": 4138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4117,
											"end": 4138,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 4117,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4115,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4145,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4151,
											"end": 4266,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 4151,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 4253,
											"end": 4258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 4236,
											"end": 4259,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4236,
											"end": 4259,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 4236,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4231,
											"end": 4234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4224,
											"end": 4260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4266,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4272,
											"end": 4645,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 4272,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4436,
											"end": 4441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4404,
											"end": 4442,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4404,
											"end": 4442,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4404,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4539,
											"end": 4545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4537,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4458,
											"end": 4546,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4458,
											"end": 4546,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4458,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4546,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4451,
											"end": 4546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4600,
											"end": 4606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4598,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4588,
											"end": 4592,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4581,
											"end": 4586,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4555,
											"end": 4607,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4555,
											"end": 4607,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4555,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4630,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4616,
											"end": 4639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4616,
											"end": 4639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4645,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4651,
											"end": 4810,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4651,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4797,
											"end": 4802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 4752,
											"end": 4803,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4752,
											"end": 4803,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4752,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4804,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4810,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4816,
											"end": 4977,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 4816,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 4964,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 4918,
											"end": 4970,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4918,
											"end": 4970,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 4918,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4977,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4983,
											"end": 5347,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4983,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 5347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5099,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5132,
											"end": 5137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5099,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5099,
											"end": 5138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5099,
											"end": 5138,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5099,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5218,
											"end": 5224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5216,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5154,
											"end": 5225,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5154,
											"end": 5225,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5154,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5225,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5274,
											"end": 5277,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5271,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5260,
											"end": 5265,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 5234,
											"end": 5286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5234,
											"end": 5286,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5234,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 5333,
											"end": 5339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 5311,
											"end": 5340,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5311,
											"end": 5340,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 5311,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5306,
											"end": 5309,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5341,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5347,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5347,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5353,
											"end": 5676,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5353,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5516,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 5580,
											"end": 5582,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5575,
											"end": 5578,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5516,
											"end": 5583,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5516,
											"end": 5583,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 5516,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000"
										},
										{
											"begin": 5609,
											"end": 5610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5604,
											"end": 5607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5662,
											"end": 5665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5658,
											"end": 5670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5676,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5682,
											"end": 6052,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 5682,
											"end": 6052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 6052,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 5909,
											"end": 5911,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5904,
											"end": 5907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 5845,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5912,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5976,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5938,
											"end": 5939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5933,
											"end": 5936,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5929,
											"end": 5940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5922,
											"end": 5977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6016,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6003,
											"end": 6005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5998,
											"end": 6001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6043,
											"end": 6045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6038,
											"end": 6041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5828,
											"end": 6052,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5828,
											"end": 6052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5828,
											"end": 6052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5828,
											"end": 6052,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6058,
											"end": 6381,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 6058,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 6285,
											"end": 6287,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6280,
											"end": 6283,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 6221,
											"end": 6288,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6221,
											"end": 6288,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 6221,
											"end": 6288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6318,
											"end": 6345,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F20746F6B656E73207374616B656400000000000000"
										},
										{
											"begin": 6314,
											"end": 6315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6309,
											"end": 6312,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6305,
											"end": 6316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6374,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6367,
											"end": 6370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6363,
											"end": 6375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6381,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6387,
											"end": 6713,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 6387,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6387,
											"end": 6713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 6614,
											"end": 6616,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 6609,
											"end": 6612,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 6550,
											"end": 6617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6550,
											"end": 6617,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 6550,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6543,
											"end": 6617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6543,
											"end": 6617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6677,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F7420737570706F72746564204E465420436F6C6C656374696F6E00000000"
										},
										{
											"begin": 6643,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6638,
											"end": 6641,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6634,
											"end": 6645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6706,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6699,
											"end": 6702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6695,
											"end": 6707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6688,
											"end": 6707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6688,
											"end": 6707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6533,
											"end": 6713,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6533,
											"end": 6713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6533,
											"end": 6713,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6533,
											"end": 6713,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6719,
											"end": 7089,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 6719,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6719,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6882,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 6946,
											"end": 6948,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6941,
											"end": 6944,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6882,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 6882,
											"end": 6949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6882,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 6882,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6875,
											"end": 6949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6875,
											"end": 6949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7013,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 6975,
											"end": 6976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6973,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6966,
											"end": 6977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6959,
											"end": 7014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7053,
											"name": "PUSH",
											"source": 1,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7040,
											"end": 7042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7035,
											"end": 7038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7080,
											"end": 7082,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7075,
											"end": 7078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7071,
											"end": 7083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 7089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 7089,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7095,
											"end": 7425,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 7095,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 7425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 7322,
											"end": 7324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7317,
											"end": 7320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7258,
											"end": 7325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7258,
											"end": 7325,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 7258,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7389,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7351,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7346,
											"end": 7349,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7335,
											"end": 7390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7418,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7411,
											"end": 7414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7407,
											"end": 7419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7400,
											"end": 7419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7400,
											"end": 7419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7241,
											"end": 7425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7241,
											"end": 7425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7241,
											"end": 7425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7241,
											"end": 7425,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7431,
											"end": 7757,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 7431,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7431,
											"end": 7757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7594,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 7658,
											"end": 7660,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 7653,
											"end": 7656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7594,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7594,
											"end": 7661,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7594,
											"end": 7661,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 7594,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7661,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7721,
											"name": "PUSH",
											"source": 1,
											"value": "596F752068617665206E6F207265776172647320746F20636C61696D00000000"
										},
										{
											"begin": 7687,
											"end": 7688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7682,
											"end": 7685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7678,
											"end": 7689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7671,
											"end": 7722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7748,
											"end": 7750,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7743,
											"end": 7746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7739,
											"end": 7751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7577,
											"end": 7757,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7577,
											"end": 7757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7577,
											"end": 7757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7577,
											"end": 7757,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7763,
											"end": 8090,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 7763,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 8090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 7990,
											"end": 7992,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 7985,
											"end": 7988,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7926,
											"end": 7993,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7926,
											"end": 7993,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 7926,
											"end": 7993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7919,
											"end": 7993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7919,
											"end": 7993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8054,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 8019,
											"end": 8020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8014,
											"end": 8017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8010,
											"end": 8021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8003,
											"end": 8055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8081,
											"end": 8083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8065,
											"end": 8084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8065,
											"end": 8084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7909,
											"end": 8090,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7909,
											"end": 8090,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7909,
											"end": 8090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7909,
											"end": 8090,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8096,
											"end": 8470,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 8096,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8096,
											"end": 8470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8259,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 8323,
											"end": 8325,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 8318,
											"end": 8321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8259,
											"end": 8326,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8259,
											"end": 8326,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 8259,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8326,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8356,
											"end": 8390,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 8352,
											"end": 8353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8350,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8422,
											"end": 8434,
											"name": "PUSH",
											"source": 1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 8417,
											"end": 8419,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8412,
											"end": 8415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8408,
											"end": 8420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8401,
											"end": 8435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8461,
											"end": 8463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8456,
											"end": 8459,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8452,
											"end": 8464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8470,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8476,
											"end": 8805,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 8476,
											"end": 8805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8476,
											"end": 8805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8639,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 8703,
											"end": 8705,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8698,
											"end": 8701,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8639,
											"end": 8706,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8639,
											"end": 8706,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 8639,
											"end": 8706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8706,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8736,
											"end": 8769,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 8732,
											"end": 8733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8727,
											"end": 8730,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8716,
											"end": 8770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8796,
											"end": 8798,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8791,
											"end": 8794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8787,
											"end": 8799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8780,
											"end": 8799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8780,
											"end": 8799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 8805,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 8805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 8805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 8805,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8869,
											"end": 9379,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 8869,
											"end": 9379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9014,
											"end": 9018,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9009,
											"end": 9012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9103,
											"end": 9107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9096,
											"end": 9101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9086,
											"end": 9109,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9122,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 9179,
											"end": 9183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9177,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9170,
											"end": 9184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9156,
											"end": 9168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9122,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 9122,
											"end": 9185,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9122,
											"end": 9185,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 9122,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9029,
											"end": 9195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9280,
											"end": 9284,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9273,
											"end": 9278,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9269,
											"end": 9285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9263,
											"end": 9286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9299,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 9356,
											"end": 9360,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9351,
											"end": 9354,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9347,
											"end": 9361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9333,
											"end": 9345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9299,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 9299,
											"end": 9362,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9299,
											"end": 9362,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 9299,
											"end": 9362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9205,
											"end": 9372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8983,
											"end": 9379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8983,
											"end": 9379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8983,
											"end": 9379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8983,
											"end": 9379,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9385,
											"end": 9493,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 9385,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9462,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 9480,
											"end": 9485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9462,
											"end": 9486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 9462,
											"end": 9486,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9462,
											"end": 9486,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 9462,
											"end": 9486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9457,
											"end": 9460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9493,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9499,
											"end": 9617,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 9499,
											"end": 9617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 9604,
											"end": 9609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 9586,
											"end": 9610,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9586,
											"end": 9610,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 9586,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9581,
											"end": 9584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9574,
											"end": 9611,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9564,
											"end": 9617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9564,
											"end": 9617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9564,
											"end": 9617,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9623,
											"end": 9894,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 9623,
											"end": 9894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9623,
											"end": 9894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9775,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 9864,
											"end": 9867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9775,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 9775,
											"end": 9868,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9775,
											"end": 9868,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 9775,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9768,
											"end": 9868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9768,
											"end": 9868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9885,
											"end": 9888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9878,
											"end": 9888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9757,
											"end": 9894,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9757,
											"end": 9894,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9757,
											"end": 9894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9757,
											"end": 9894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9757,
											"end": 9894,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9900,
											"end": 10122,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 9900,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9900,
											"end": 10122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10031,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10020,
											"end": 10029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10016,
											"end": 10034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10044,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 10112,
											"end": 10113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10101,
											"end": 10110,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10097,
											"end": 10114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10088,
											"end": 10094,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10044,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 10044,
											"end": 10115,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10044,
											"end": 10115,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 10044,
											"end": 10115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10122,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10122,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10122,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10128,
											"end": 10570,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 10128,
											"end": 10570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10128,
											"end": 10570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10315,
											"end": 10317,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10304,
											"end": 10313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10300,
											"end": 10318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10292,
											"end": 10318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10292,
											"end": 10318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10328,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 10396,
											"end": 10397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10385,
											"end": 10394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10381,
											"end": 10398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10372,
											"end": 10378,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10328,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 10328,
											"end": 10399,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10328,
											"end": 10399,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 10328,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 10477,
											"end": 10479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10466,
											"end": 10475,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10462,
											"end": 10480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10453,
											"end": 10459,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 10409,
											"end": 10481,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10409,
											"end": 10481,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 10409,
											"end": 10481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10491,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 10559,
											"end": 10561,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10548,
											"end": 10557,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10535,
											"end": 10541,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10491,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 10491,
											"end": 10563,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10491,
											"end": 10563,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 10491,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10570,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10570,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10570,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10576,
											"end": 10908,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 10576,
											"end": 10908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10735,
											"end": 10737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10724,
											"end": 10733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10712,
											"end": 10738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10712,
											"end": 10738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10748,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 10816,
											"end": 10817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10805,
											"end": 10814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10801,
											"end": 10818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10792,
											"end": 10798,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10748,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 10748,
											"end": 10819,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10748,
											"end": 10819,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 10748,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 10897,
											"end": 10899,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10886,
											"end": 10895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10882,
											"end": 10900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10879,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 10829,
											"end": 10901,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10829,
											"end": 10901,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 10829,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10702,
											"end": 10908,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10702,
											"end": 10908,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10702,
											"end": 10908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10702,
											"end": 10908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10702,
											"end": 10908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10702,
											"end": 10908,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10914,
											"end": 11403,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 10914,
											"end": 11403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11155,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11142,
											"end": 11151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11130,
											"end": 11156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11130,
											"end": 11156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11202,
											"end": 11211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11196,
											"end": 11200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11192,
											"end": 11212,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11188,
											"end": 11189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11186,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11173,
											"end": 11190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11166,
											"end": 11213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11230,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 11391,
											"end": 11395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11382,
											"end": 11388,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11230,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 11230,
											"end": 11396,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11230,
											"end": 11396,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 11230,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11403,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11403,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11403,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11409,
											"end": 11619,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 11409,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11409,
											"end": 11619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11534,
											"end": 11536,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11523,
											"end": 11532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11519,
											"end": 11537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11547,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 11609,
											"end": 11610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11598,
											"end": 11607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11594,
											"end": 11611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11585,
											"end": 11591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11547,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 11547,
											"end": 11612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11547,
											"end": 11612,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 11547,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11501,
											"end": 11619,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11501,
											"end": 11619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11501,
											"end": 11619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11501,
											"end": 11619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11501,
											"end": 11619,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11625,
											"end": 11843,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 11625,
											"end": 11843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11625,
											"end": 11843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11754,
											"end": 11756,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11743,
											"end": 11752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11739,
											"end": 11757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11731,
											"end": 11757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11731,
											"end": 11757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11767,
											"end": 11836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 11833,
											"end": 11834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11822,
											"end": 11831,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11818,
											"end": 11835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11815,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11767,
											"end": 11836,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 11767,
											"end": 11836,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11767,
											"end": 11836,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 11767,
											"end": 11836,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11721,
											"end": 11843,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11849,
											"end": 12099,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 11849,
											"end": 12099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11849,
											"end": 12099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11994,
											"end": 11996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11983,
											"end": 11992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 11997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11971,
											"end": 11997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11971,
											"end": 11997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12007,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 12089,
											"end": 12090,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12078,
											"end": 12087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12074,
											"end": 12091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12065,
											"end": 12071,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12007,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 12007,
											"end": 12092,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12007,
											"end": 12092,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 12007,
											"end": 12092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11961,
											"end": 12099,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11961,
											"end": 12099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11961,
											"end": 12099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11961,
											"end": 12099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11961,
											"end": 12099,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12105,
											"end": 12357,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 12105,
											"end": 12357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12105,
											"end": 12357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12251,
											"end": 12253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12240,
											"end": 12249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12236,
											"end": 12254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12228,
											"end": 12254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 12347,
											"end": 12348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12336,
											"end": 12345,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12332,
											"end": 12349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12323,
											"end": 12329,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 12264,
											"end": 12350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12264,
											"end": 12350,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 12264,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12218,
											"end": 12357,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12218,
											"end": 12357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12218,
											"end": 12357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12218,
											"end": 12357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12218,
											"end": 12357,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12363,
											"end": 12676,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 12363,
											"end": 12676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12363,
											"end": 12676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12514,
											"end": 12516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12503,
											"end": 12512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12499,
											"end": 12517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12491,
											"end": 12517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12491,
											"end": 12517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12563,
											"end": 12572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12557,
											"end": 12561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12549,
											"end": 12550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12538,
											"end": 12547,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12534,
											"end": 12551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12527,
											"end": 12574,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12591,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 12664,
											"end": 12668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12655,
											"end": 12661,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12591,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 12591,
											"end": 12669,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12591,
											"end": 12669,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 12591,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12676,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12676,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12682,
											"end": 13101,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 12682,
											"end": 13101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12682,
											"end": 13101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12886,
											"end": 12888,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12875,
											"end": 12884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12871,
											"end": 12889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12863,
											"end": 12889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12863,
											"end": 12889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12935,
											"end": 12944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12925,
											"end": 12945,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12921,
											"end": 12922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12910,
											"end": 12919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12899,
											"end": 12946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12963,
											"end": 13094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 13089,
											"end": 13093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12963,
											"end": 13094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 12963,
											"end": 13094,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12963,
											"end": 13094,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 12963,
											"end": 13094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12955,
											"end": 13094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12955,
											"end": 13094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 13101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 13101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 13101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 13101,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13107,
											"end": 13526,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 13107,
											"end": 13526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13311,
											"end": 13313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13300,
											"end": 13309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13288,
											"end": 13314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13288,
											"end": 13314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13360,
											"end": 13369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13354,
											"end": 13358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13350,
											"end": 13370,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13346,
											"end": 13347,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13335,
											"end": 13344,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13331,
											"end": 13348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13324,
											"end": 13371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13388,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 13514,
											"end": 13518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13388,
											"end": 13519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 13388,
											"end": 13519,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13388,
											"end": 13519,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 13388,
											"end": 13519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13380,
											"end": 13519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13380,
											"end": 13519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13278,
											"end": 13526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13278,
											"end": 13526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13278,
											"end": 13526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13278,
											"end": 13526,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13532,
											"end": 13951,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 13532,
											"end": 13951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13736,
											"end": 13738,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13725,
											"end": 13734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13721,
											"end": 13739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13713,
											"end": 13739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13713,
											"end": 13739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13785,
											"end": 13794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13779,
											"end": 13783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13775,
											"end": 13795,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13771,
											"end": 13772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13760,
											"end": 13769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13756,
											"end": 13773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13749,
											"end": 13796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13813,
											"end": 13944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 13939,
											"end": 13943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13813,
											"end": 13944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 13813,
											"end": 13944,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13813,
											"end": 13944,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 13813,
											"end": 13944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13805,
											"end": 13944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13805,
											"end": 13944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13703,
											"end": 13951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13703,
											"end": 13951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13703,
											"end": 13951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13703,
											"end": 13951,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13957,
											"end": 14376,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 13957,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13957,
											"end": 14376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14161,
											"end": 14163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14150,
											"end": 14159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14146,
											"end": 14164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14138,
											"end": 14164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14138,
											"end": 14164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14210,
											"end": 14219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14204,
											"end": 14208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14200,
											"end": 14220,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14196,
											"end": 14197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14185,
											"end": 14194,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14181,
											"end": 14198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14174,
											"end": 14221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14238,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 14364,
											"end": 14368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14238,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 14238,
											"end": 14369,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14238,
											"end": 14369,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 14238,
											"end": 14369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14230,
											"end": 14369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14230,
											"end": 14369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14128,
											"end": 14376,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14128,
											"end": 14376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14128,
											"end": 14376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14128,
											"end": 14376,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14382,
											"end": 14801,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 14382,
											"end": 14801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14382,
											"end": 14801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14586,
											"end": 14588,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14575,
											"end": 14584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14571,
											"end": 14589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14563,
											"end": 14589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14563,
											"end": 14589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14635,
											"end": 14644,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14629,
											"end": 14633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14625,
											"end": 14645,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14621,
											"end": 14622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14610,
											"end": 14619,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14606,
											"end": 14623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14599,
											"end": 14646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14663,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 14789,
											"end": 14793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14663,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 14663,
											"end": 14794,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14663,
											"end": 14794,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 14663,
											"end": 14794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14655,
											"end": 14794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14655,
											"end": 14794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14553,
											"end": 14801,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14553,
											"end": 14801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14553,
											"end": 14801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14553,
											"end": 14801,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14807,
											"end": 15226,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 14807,
											"end": 15226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14807,
											"end": 15226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15011,
											"end": 15013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15000,
											"end": 15009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14996,
											"end": 15014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14988,
											"end": 15014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14988,
											"end": 15014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15060,
											"end": 15069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15054,
											"end": 15058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15050,
											"end": 15070,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15046,
											"end": 15047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15035,
											"end": 15044,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15031,
											"end": 15048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15024,
											"end": 15071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15088,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 15214,
											"end": 15218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15088,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 15088,
											"end": 15219,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15088,
											"end": 15219,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 15088,
											"end": 15219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15219,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14978,
											"end": 15226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14978,
											"end": 15226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14978,
											"end": 15226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14978,
											"end": 15226,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15232,
											"end": 15651,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 15232,
											"end": 15651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15232,
											"end": 15651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15436,
											"end": 15438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15425,
											"end": 15434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15421,
											"end": 15439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15413,
											"end": 15439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15413,
											"end": 15439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15485,
											"end": 15494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15495,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15471,
											"end": 15472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15460,
											"end": 15469,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15456,
											"end": 15473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15449,
											"end": 15496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15513,
											"end": 15644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 15639,
											"end": 15643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15513,
											"end": 15644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 15513,
											"end": 15644,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15513,
											"end": 15644,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 15513,
											"end": 15644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15505,
											"end": 15644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15505,
											"end": 15644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15403,
											"end": 15651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15403,
											"end": 15651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15403,
											"end": 15651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15403,
											"end": 15651,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15657,
											"end": 16076,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 15657,
											"end": 16076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15657,
											"end": 16076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15861,
											"end": 15863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15850,
											"end": 15859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15846,
											"end": 15864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15838,
											"end": 15864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15910,
											"end": 15919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15904,
											"end": 15908,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15900,
											"end": 15920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15896,
											"end": 15897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15885,
											"end": 15894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15881,
											"end": 15898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15874,
											"end": 15921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15938,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 16064,
											"end": 16068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15938,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 15938,
											"end": 16069,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15938,
											"end": 16069,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 15938,
											"end": 16069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15930,
											"end": 16069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15930,
											"end": 16069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15828,
											"end": 16076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15828,
											"end": 16076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15828,
											"end": 16076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15828,
											"end": 16076,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16082,
											"end": 16501,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 16082,
											"end": 16501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16082,
											"end": 16501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16286,
											"end": 16288,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16275,
											"end": 16284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16271,
											"end": 16289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16335,
											"end": 16344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16329,
											"end": 16333,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16345,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16321,
											"end": 16322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16310,
											"end": 16319,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16306,
											"end": 16323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16299,
											"end": 16346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16363,
											"end": 16494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 16489,
											"end": 16493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16363,
											"end": 16494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 16363,
											"end": 16494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16363,
											"end": 16494,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 16363,
											"end": 16494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16355,
											"end": 16494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16355,
											"end": 16494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16253,
											"end": 16501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16253,
											"end": 16501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16253,
											"end": 16501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16253,
											"end": 16501,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16507,
											"end": 16926,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 16507,
											"end": 16926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16507,
											"end": 16926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16711,
											"end": 16713,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16700,
											"end": 16709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16696,
											"end": 16714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16688,
											"end": 16714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16688,
											"end": 16714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16760,
											"end": 16769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16754,
											"end": 16758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16750,
											"end": 16770,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16746,
											"end": 16747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16735,
											"end": 16744,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16731,
											"end": 16748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16724,
											"end": 16771,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16788,
											"end": 16919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 16914,
											"end": 16918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16788,
											"end": 16919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 16788,
											"end": 16919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16788,
											"end": 16919,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 16788,
											"end": 16919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16780,
											"end": 16919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16780,
											"end": 16919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16678,
											"end": 16926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16678,
											"end": 16926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16678,
											"end": 16926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16678,
											"end": 16926,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16932,
											"end": 17154,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 16932,
											"end": 17154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16932,
											"end": 17154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17063,
											"end": 17065,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17052,
											"end": 17061,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17048,
											"end": 17066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17040,
											"end": 17066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17040,
											"end": 17066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17076,
											"end": 17147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 17144,
											"end": 17145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17133,
											"end": 17142,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17129,
											"end": 17146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17120,
											"end": 17126,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17076,
											"end": 17147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 17076,
											"end": 17147,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17076,
											"end": 17147,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 17076,
											"end": 17147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17154,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17160,
											"end": 17602,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 17160,
											"end": 17602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17160,
											"end": 17602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17347,
											"end": 17349,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17336,
											"end": 17345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17332,
											"end": 17350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17324,
											"end": 17350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17324,
											"end": 17350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17360,
											"end": 17431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 17428,
											"end": 17429,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17417,
											"end": 17426,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17413,
											"end": 17430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17404,
											"end": 17410,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17360,
											"end": 17431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 17360,
											"end": 17431,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17360,
											"end": 17431,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 17360,
											"end": 17431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 17509,
											"end": 17511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17498,
											"end": 17507,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17494,
											"end": 17512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17485,
											"end": 17491,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17441,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 17441,
											"end": 17513,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17441,
											"end": 17513,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 17441,
											"end": 17513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17523,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 17591,
											"end": 17593,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17580,
											"end": 17589,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17576,
											"end": 17594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17567,
											"end": 17573,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17523,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 17523,
											"end": 17595,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17523,
											"end": 17595,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 17523,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17314,
											"end": 17602,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17314,
											"end": 17602,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17314,
											"end": 17602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17314,
											"end": 17602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17314,
											"end": 17602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17314,
											"end": 17602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17314,
											"end": 17602,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17608,
											"end": 17769,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 17608,
											"end": 17769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17608,
											"end": 17769,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17727,
											"end": 17730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17719,
											"end": 17730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17719,
											"end": 17730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17757,
											"end": 17761,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17752,
											"end": 17755,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17748,
											"end": 17762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17740,
											"end": 17762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17740,
											"end": 17762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17709,
											"end": 17769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17709,
											"end": 17769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17709,
											"end": 17769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17709,
											"end": 17769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17775,
											"end": 17918,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 17775,
											"end": 17918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17775,
											"end": 17918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17905,
											"end": 17910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17899,
											"end": 17911,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17889,
											"end": 17911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17889,
											"end": 17911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17878,
											"end": 17918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17878,
											"end": 17918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17878,
											"end": 17918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17878,
											"end": 17918,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17924,
											"end": 18022,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 17924,
											"end": 18022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17924,
											"end": 18022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18009,
											"end": 18014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18003,
											"end": 18015,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17993,
											"end": 18015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17993,
											"end": 18015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17982,
											"end": 18022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17982,
											"end": 18022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17982,
											"end": 18022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17982,
											"end": 18022,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18028,
											"end": 18127,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 18028,
											"end": 18127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18028,
											"end": 18127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18114,
											"end": 18119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18108,
											"end": 18120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18098,
											"end": 18120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18098,
											"end": 18120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18087,
											"end": 18127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18087,
											"end": 18127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18087,
											"end": 18127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18087,
											"end": 18127,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18133,
											"end": 18275,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 18133,
											"end": 18275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18133,
											"end": 18275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18264,
											"end": 18268,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18259,
											"end": 18262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18255,
											"end": 18269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18247,
											"end": 18269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18247,
											"end": 18269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18237,
											"end": 18275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18237,
											"end": 18275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18237,
											"end": 18275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18237,
											"end": 18275,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18281,
											"end": 18494,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 18281,
											"end": 18494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18281,
											"end": 18494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18443,
											"end": 18449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18438,
											"end": 18441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18431,
											"end": 18450,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18483,
											"end": 18487,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18478,
											"end": 18481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18474,
											"end": 18488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18421,
											"end": 18494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18421,
											"end": 18494,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18421,
											"end": 18494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18421,
											"end": 18494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18421,
											"end": 18494,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18500,
											"end": 18647,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 18500,
											"end": 18647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18500,
											"end": 18647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18638,
											"end": 18641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18623,
											"end": 18641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18623,
											"end": 18641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18613,
											"end": 18647,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18613,
											"end": 18647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18613,
											"end": 18647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18613,
											"end": 18647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18613,
											"end": 18647,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18653,
											"end": 18822,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 18653,
											"end": 18822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18653,
											"end": 18822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18771,
											"end": 18777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18766,
											"end": 18769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18759,
											"end": 18778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18811,
											"end": 18815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18806,
											"end": 18809,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18802,
											"end": 18816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18787,
											"end": 18816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18787,
											"end": 18816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18749,
											"end": 18822,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18749,
											"end": 18822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18749,
											"end": 18822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18749,
											"end": 18822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18749,
											"end": 18822,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18828,
											"end": 19133,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 18828,
											"end": 19133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18828,
											"end": 19133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18887,
											"end": 18907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 18905,
											"end": 18906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18887,
											"end": 18907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 18887,
											"end": 18907,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18887,
											"end": 18907,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 18887,
											"end": 18907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18882,
											"end": 18907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18882,
											"end": 18907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18921,
											"end": 18941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 18939,
											"end": 18940,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18921,
											"end": 18941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 18921,
											"end": 18941,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18921,
											"end": 18941,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 18921,
											"end": 18941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18916,
											"end": 18941,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18916,
											"end": 18941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19075,
											"end": 19076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19007,
											"end": 19073,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19003,
											"end": 19077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19000,
											"end": 19001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18997,
											"end": 19078,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18994,
											"end": 18996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18994,
											"end": 18996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 18994,
											"end": 18996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19081,
											"end": 19099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 19081,
											"end": 19099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 19081,
											"end": 19099,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19081,
											"end": 19099,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 19081,
											"end": 19099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18994,
											"end": 18996,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 18994,
											"end": 18996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19125,
											"end": 19126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19122,
											"end": 19123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19118,
											"end": 19127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19111,
											"end": 19127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19111,
											"end": 19127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18872,
											"end": 19133,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18872,
											"end": 19133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18872,
											"end": 19133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18872,
											"end": 19133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18872,
											"end": 19133,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19139,
											"end": 19324,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 19139,
											"end": 19324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19139,
											"end": 19324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19196,
											"end": 19216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 19214,
											"end": 19215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19196,
											"end": 19216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 19196,
											"end": 19216,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19196,
											"end": 19216,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 19196,
											"end": 19216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19191,
											"end": 19216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19191,
											"end": 19216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19230,
											"end": 19250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 19248,
											"end": 19249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19230,
											"end": 19250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 19230,
											"end": 19250,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19230,
											"end": 19250,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 19230,
											"end": 19250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19225,
											"end": 19250,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19225,
											"end": 19250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19269,
											"end": 19270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19259,
											"end": 19261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 19259,
											"end": 19261,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19274,
											"end": 19292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 19274,
											"end": 19292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 19274,
											"end": 19292,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19274,
											"end": 19292,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 19274,
											"end": 19292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19259,
											"end": 19261,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 19259,
											"end": 19261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19316,
											"end": 19317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19313,
											"end": 19314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19309,
											"end": 19318,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 19304,
											"end": 19318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19304,
											"end": 19318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19181,
											"end": 19324,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19181,
											"end": 19324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19181,
											"end": 19324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19181,
											"end": 19324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19181,
											"end": 19324,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19330,
											"end": 19678,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 19330,
											"end": 19678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19330,
											"end": 19678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19393,
											"end": 19413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 19411,
											"end": 19412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19393,
											"end": 19413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 19393,
											"end": 19413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19393,
											"end": 19413,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 19393,
											"end": 19413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19388,
											"end": 19413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19388,
											"end": 19413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19427,
											"end": 19447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 19445,
											"end": 19446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19427,
											"end": 19447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 19427,
											"end": 19447,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19427,
											"end": 19447,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 19427,
											"end": 19447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19422,
											"end": 19447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19615,
											"end": 19616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19547,
											"end": 19613,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19543,
											"end": 19617,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 19540,
											"end": 19541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19537,
											"end": 19618,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19532,
											"end": 19533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19525,
											"end": 19534,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19518,
											"end": 19535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19514,
											"end": 19619,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19511,
											"end": 19513,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19511,
											"end": 19513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 19511,
											"end": 19513,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19622,
											"end": 19640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 19622,
											"end": 19640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 19622,
											"end": 19640,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19622,
											"end": 19640,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 19622,
											"end": 19640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19511,
											"end": 19513,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 19511,
											"end": 19513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19670,
											"end": 19671,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19667,
											"end": 19668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19663,
											"end": 19672,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 19652,
											"end": 19672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19652,
											"end": 19672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19378,
											"end": 19678,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19378,
											"end": 19678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19378,
											"end": 19678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19378,
											"end": 19678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19378,
											"end": 19678,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19684,
											"end": 19875,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 19684,
											"end": 19875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19684,
											"end": 19875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 19762,
											"end": 19763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 19744,
											"end": 19764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19739,
											"end": 19764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19739,
											"end": 19764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19778,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 19796,
											"end": 19797,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19778,
											"end": 19798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 19778,
											"end": 19798,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19778,
											"end": 19798,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 19778,
											"end": 19798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19773,
											"end": 19798,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19773,
											"end": 19798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19814,
											"end": 19815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19811,
											"end": 19819,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19808,
											"end": 19810,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19808,
											"end": 19810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 19808,
											"end": 19810,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19822,
											"end": 19840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 19822,
											"end": 19840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 19822,
											"end": 19840,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19822,
											"end": 19840,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 19822,
											"end": 19840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19808,
											"end": 19810,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 19808,
											"end": 19810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19867,
											"end": 19868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19864,
											"end": 19865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19860,
											"end": 19869,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19852,
											"end": 19869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19852,
											"end": 19869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19729,
											"end": 19875,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19729,
											"end": 19875,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19729,
											"end": 19875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19729,
											"end": 19875,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19729,
											"end": 19875,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19881,
											"end": 19977,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 19881,
											"end": 19977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19881,
											"end": 19977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19947,
											"end": 19971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 19965,
											"end": 19970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19947,
											"end": 19971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 19947,
											"end": 19971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19947,
											"end": 19971,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 19947,
											"end": 19971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19936,
											"end": 19971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19936,
											"end": 19971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19926,
											"end": 19977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19926,
											"end": 19977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19926,
											"end": 19977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19926,
											"end": 19977,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19983,
											"end": 20073,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 19983,
											"end": 20073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19983,
											"end": 20073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20060,
											"end": 20065,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20053,
											"end": 20066,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20046,
											"end": 20067,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20035,
											"end": 20067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20035,
											"end": 20067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20025,
											"end": 20073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20025,
											"end": 20073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20025,
											"end": 20073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20025,
											"end": 20073,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20079,
											"end": 20228,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 20079,
											"end": 20228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20079,
											"end": 20228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20155,
											"end": 20221,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20148,
											"end": 20153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20144,
											"end": 20222,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20133,
											"end": 20222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20133,
											"end": 20222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20123,
											"end": 20228,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20123,
											"end": 20228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20123,
											"end": 20228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20123,
											"end": 20228,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20234,
											"end": 20360,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 20234,
											"end": 20360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20234,
											"end": 20360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20311,
											"end": 20353,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20304,
											"end": 20309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20300,
											"end": 20354,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20289,
											"end": 20354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20289,
											"end": 20354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20279,
											"end": 20360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20279,
											"end": 20360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20279,
											"end": 20360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20279,
											"end": 20360,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20366,
											"end": 20443,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 20366,
											"end": 20443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20366,
											"end": 20443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20432,
											"end": 20437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20421,
											"end": 20437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20421,
											"end": 20437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20411,
											"end": 20443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20411,
											"end": 20443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20411,
											"end": 20443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20411,
											"end": 20443,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20449,
											"end": 20603,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 20449,
											"end": 20603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20449,
											"end": 20603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20546,
											"end": 20597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 20591,
											"end": 20596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20546,
											"end": 20597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 20546,
											"end": 20597,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20546,
											"end": 20597,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 20546,
											"end": 20597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20523,
											"end": 20603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20523,
											"end": 20603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20523,
											"end": 20603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20523,
											"end": 20603,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20609,
											"end": 20736,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 20609,
											"end": 20736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20609,
											"end": 20736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 20724,
											"end": 20729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 20706,
											"end": 20730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20693,
											"end": 20730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20693,
											"end": 20730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20683,
											"end": 20736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20683,
											"end": 20736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20683,
											"end": 20736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20683,
											"end": 20736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20742,
											"end": 20898,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 20742,
											"end": 20898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20742,
											"end": 20898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20840,
											"end": 20892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 20886,
											"end": 20891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20840,
											"end": 20892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 20840,
											"end": 20892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20840,
											"end": 20892,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 20840,
											"end": 20892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20827,
											"end": 20892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20827,
											"end": 20892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20817,
											"end": 20898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20817,
											"end": 20898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20817,
											"end": 20898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20817,
											"end": 20898,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20904,
											"end": 21032,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 20904,
											"end": 21032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20904,
											"end": 21032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21002,
											"end": 21026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 21020,
											"end": 21025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21002,
											"end": 21026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 21002,
											"end": 21026,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21002,
											"end": 21026,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 21002,
											"end": 21026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20989,
											"end": 21026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20989,
											"end": 21026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20979,
											"end": 21032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20979,
											"end": 21032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20979,
											"end": 21032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20979,
											"end": 21032,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21038,
											"end": 21345,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 21038,
											"end": 21345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21106,
											"end": 21107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21116,
											"end": 21229,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 21116,
											"end": 21229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21130,
											"end": 21136,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21127,
											"end": 21128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21124,
											"end": 21137,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 21116,
											"end": 21229,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21116,
											"end": 21229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 21116,
											"end": 21229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21215,
											"end": 21216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21210,
											"end": 21213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21206,
											"end": 21217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21200,
											"end": 21218,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21196,
											"end": 21197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21191,
											"end": 21194,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21187,
											"end": 21198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21180,
											"end": 21219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21152,
											"end": 21154,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21149,
											"end": 21150,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21145,
											"end": 21155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21140,
											"end": 21155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21140,
											"end": 21155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21116,
											"end": 21229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 21116,
											"end": 21229,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21116,
											"end": 21229,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 21116,
											"end": 21229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21247,
											"end": 21253,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21244,
											"end": 21245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21241,
											"end": 21254,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 21238,
											"end": 21240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21238,
											"end": 21240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 21238,
											"end": 21240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21327,
											"end": 21328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21318,
											"end": 21324,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21313,
											"end": 21316,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21309,
											"end": 21325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21302,
											"end": 21329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21238,
											"end": 21240,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 21238,
											"end": 21240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21087,
											"end": 21345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21087,
											"end": 21345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21087,
											"end": 21345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21087,
											"end": 21345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21087,
											"end": 21345,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21351,
											"end": 21522,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 21351,
											"end": 21522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21351,
											"end": 21522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21413,
											"end": 21437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 21431,
											"end": 21436,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21413,
											"end": 21437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 21413,
											"end": 21437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21413,
											"end": 21437,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 21413,
											"end": 21437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21404,
											"end": 21437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21404,
											"end": 21437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21459,
											"end": 21463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21452,
											"end": 21457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21449,
											"end": 21464,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21446,
											"end": 21448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21446,
											"end": 21448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 21446,
											"end": 21448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21467,
											"end": 21485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 21467,
											"end": 21485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 21467,
											"end": 21485,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21467,
											"end": 21485,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 21467,
											"end": 21485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21446,
											"end": 21448,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 21446,
											"end": 21448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21514,
											"end": 21515,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21507,
											"end": 21512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21503,
											"end": 21516,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21496,
											"end": 21516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21496,
											"end": 21516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21394,
											"end": 21522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21394,
											"end": 21522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21394,
											"end": 21522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21394,
											"end": 21522,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21528,
											"end": 21761,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 21528,
											"end": 21761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21528,
											"end": 21761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21590,
											"end": 21614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 21608,
											"end": 21613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21590,
											"end": 21614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 21590,
											"end": 21614,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21590,
											"end": 21614,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 21590,
											"end": 21614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21581,
											"end": 21614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21581,
											"end": 21614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21636,
											"end": 21702,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21629,
											"end": 21634,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21626,
											"end": 21703,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21623,
											"end": 21625,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21623,
											"end": 21625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 21623,
											"end": 21625,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21706,
											"end": 21724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 21706,
											"end": 21724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 21706,
											"end": 21724,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21706,
											"end": 21724,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 21706,
											"end": 21724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21623,
											"end": 21625,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 21623,
											"end": 21625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21753,
											"end": 21754,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21746,
											"end": 21751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21742,
											"end": 21755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21735,
											"end": 21755,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21735,
											"end": 21755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21571,
											"end": 21761,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21571,
											"end": 21761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21571,
											"end": 21761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21571,
											"end": 21761,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21767,
											"end": 21947,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 21767,
											"end": 21947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21815,
											"end": 21892,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21812,
											"end": 21813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21805,
											"end": 21893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21912,
											"end": 21916,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 21909,
											"end": 21910,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21902,
											"end": 21917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21936,
											"end": 21940,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21933,
											"end": 21934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21926,
											"end": 21941,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21953,
											"end": 22133,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 21953,
											"end": 22133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22001,
											"end": 22078,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21998,
											"end": 21999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21991,
											"end": 22079,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22098,
											"end": 22102,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 22095,
											"end": 22096,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22088,
											"end": 22103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22122,
											"end": 22126,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 22119,
											"end": 22120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22112,
											"end": 22127,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22139,
											"end": 22241,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 22139,
											"end": 22241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22139,
											"end": 22241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22231,
											"end": 22233,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 22227,
											"end": 22234,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 22222,
											"end": 22224,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 22215,
											"end": 22220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22211,
											"end": 22225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22207,
											"end": 22235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22197,
											"end": 22235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22197,
											"end": 22235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22187,
											"end": 22241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22187,
											"end": 22241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22187,
											"end": 22241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22187,
											"end": 22241,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22247,
											"end": 22369,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 22247,
											"end": 22369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22320,
											"end": 22344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 22338,
											"end": 22343,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22320,
											"end": 22344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 22320,
											"end": 22344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22320,
											"end": 22344,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 22320,
											"end": 22344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22313,
											"end": 22318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22310,
											"end": 22345,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22300,
											"end": 22302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 22300,
											"end": 22302,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22359,
											"end": 22360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22356,
											"end": 22357,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22361,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22300,
											"end": 22302,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 22300,
											"end": 22302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22290,
											"end": 22369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22290,
											"end": 22369,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22375,
											"end": 22491,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 22375,
											"end": 22491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22445,
											"end": 22466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 22460,
											"end": 22465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22445,
											"end": 22466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 22445,
											"end": 22466,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22445,
											"end": 22466,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 22445,
											"end": 22466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22438,
											"end": 22443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22435,
											"end": 22467,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22425,
											"end": 22427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 22425,
											"end": 22427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22481,
											"end": 22482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22478,
											"end": 22479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22471,
											"end": 22483,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22425,
											"end": 22427,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 22425,
											"end": 22427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22415,
											"end": 22491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22415,
											"end": 22491,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22497,
											"end": 22619,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 22497,
											"end": 22619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22570,
											"end": 22594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 22588,
											"end": 22593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22570,
											"end": 22594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 22570,
											"end": 22594,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22570,
											"end": 22594,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 22570,
											"end": 22594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22563,
											"end": 22568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22560,
											"end": 22595,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 22550,
											"end": 22552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 22550,
											"end": 22552,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22609,
											"end": 22610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22606,
											"end": 22607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22599,
											"end": 22611,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22550,
											"end": 22552,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 22550,
											"end": 22552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22540,
											"end": 22619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22540,
											"end": 22619,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"availableRewards(address)": "f854a27f",
							"claimRewards()": "372500ab",
							"getStakedTokens(address)": "63c28db1",
							"nftCollection()": "6588103b",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"rewardsToken()": "d1af0c7d",
							"stake(uint256)": "a694fc3a",
							"stakerAddress(uint256)": "94067045",
							"stakers(address)": "9168ae72",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_nftCollection\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsPerHour\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"availableRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakedTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Farm.StakedToken[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftCollection\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"Farm\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0xf3802d7f4b5813bff061eac1c57a592584da2c659ca79bd9bbd5b52943c9c419\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://35016025ba196051e3087c41fd46e92d5014ae524e8390b59c2e222a1d01bb3e\",\"dweb:/ipfs/QmTV4qSKieduG22waSx785wExRRWamfRJsAVcwpjY7JY8b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 585,
								"contract": "Farm.sol:Farm",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 487,
								"contract": "Farm.sol:Farm",
								"label": "_paused",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 1038,
								"contract": "Farm.sol:Farm",
								"label": "_owner",
								"offset": 1,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1177,
								"contract": "Farm.sol:Farm",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)454"
							},
							{
								"astId": 1180,
								"contract": "Farm.sol:Farm",
								"label": "nftCollection",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC721)138"
							},
							{
								"astId": 1183,
								"contract": "Farm.sol:Farm",
								"label": "rewardsPerHour",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1188,
								"contract": "Farm.sol:Farm",
								"label": "stakers",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Staker)1174_storage)"
							},
							{
								"astId": 1192,
								"contract": "Farm.sol:Farm",
								"label": "stakerAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(StakedToken)1163_storage)dyn_storage": {
								"base": "t_struct(StakedToken)1163_storage",
								"encoding": "dynamic_array",
								"label": "struct Farm.StakedToken[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)454": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)138": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Staker)1174_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Farm.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)1174_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_struct(StakedToken)1163_storage": {
								"encoding": "inplace",
								"label": "struct Farm.StakedToken",
								"members": [
									{
										"astId": 1160,
										"contract": "Farm.sol:Farm",
										"label": "staker",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1162,
										"contract": "Farm.sol:Farm",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Staker)1174_storage": {
								"encoding": "inplace",
								"label": "struct Farm.Staker",
								"members": [
									{
										"astId": 1165,
										"contract": "Farm.sol:Farm",
										"label": "amountStaked",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1169,
										"contract": "Farm.sol:Farm",
										"label": "stakedTokens",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(StakedToken)1163_storage)dyn_storage"
									},
									{
										"astId": 1171,
										"contract": "Farm.sol:Farm",
										"label": "timeOfLastUpdate",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1173,
										"contract": "Farm.sol:Farm",
										"label": "unclaimedRewards",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0xf3802d7f4b5813bff061eac1c57a592584da2c659ca79bd9bbd5b52943c9c419\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://35016025ba196051e3087c41fd46e92d5014ae524e8390b59c2e222a1d01bb3e\",\"dweb:/ipfs/QmTV4qSKieduG22waSx785wExRRWamfRJsAVcwpjY7JY8b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0xf3802d7f4b5813bff061eac1c57a592584da2c659ca79bd9bbd5b52943c9c419\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://35016025ba196051e3087c41fd46e92d5014ae524e8390b59c2e222a1d01bb3e\",\"dweb:/ipfs/QmTV4qSKieduG22waSx785wExRRWamfRJsAVcwpjY7JY8b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0xf3802d7f4b5813bff061eac1c57a592584da2c659ca79bd9bbd5b52943c9c419\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://35016025ba196051e3087c41fd46e92d5014ae524e8390b59c2e222a1d01bb3e\",\"dweb:/ipfs/QmTV4qSKieduG22waSx785wExRRWamfRJsAVcwpjY7JY8b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0xf3802d7f4b5813bff061eac1c57a592584da2c659ca79bd9bbd5b52943c9c419\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://35016025ba196051e3087c41fd46e92d5014ae524e8390b59c2e222a1d01bb3e\",\"dweb:/ipfs/QmTV4qSKieduG22waSx785wExRRWamfRJsAVcwpjY7JY8b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0xf3802d7f4b5813bff061eac1c57a592584da2c659ca79bd9bbd5b52943c9c419\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://35016025ba196051e3087c41fd46e92d5014ae524e8390b59c2e222a1d01bb3e\",\"dweb:/ipfs/QmTV4qSKieduG22waSx785wExRRWamfRJsAVcwpjY7JY8b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1038,
								"contract": "Farm.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0xf3802d7f4b5813bff061eac1c57a592584da2c659ca79bd9bbd5b52943c9c419\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://35016025ba196051e3087c41fd46e92d5014ae524e8390b59c2e222a1d01bb3e\",\"dweb:/ipfs/QmTV4qSKieduG22waSx785wExRRWamfRJsAVcwpjY7JY8b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 487,
								"contract": "Farm.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0xf3802d7f4b5813bff061eac1c57a592584da2c659ca79bd9bbd5b52943c9c419\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://35016025ba196051e3087c41fd46e92d5014ae524e8390b59c2e222a1d01bb3e\",\"dweb:/ipfs/QmTV4qSKieduG22waSx785wExRRWamfRJsAVcwpjY7JY8b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 585,
								"contract": "Farm.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Farm.sol\":24546:27707  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Farm.sol\":24546:27707  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207d650785e80dc7277057b93d6a3b74509524a5848705cda1a6ab0fbab25d23f064736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207d650785e80dc7277057b93d6a3b74509524a5848705cda1a6ab0fbab25d23f064736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x650785E80DC7277057B93D6A3B74509524A5848705CDA1A6AB0FBAB25D23 CREATE PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "24546:3161:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207d650785e80dc7277057b93d6a3b74509524a5848705cda1a6ab0fbab25d23f064736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0x650785E80DC7277057B93D6A3B74509524A5848705CDA1A6AB0FBAB25D23 CREATE PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "24546:3161:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24546,
									"end": 27707,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207d650785e80dc7277057b93d6a3b74509524a5848705cda1a6ab0fbab25d23f064736f6c63430008000033",
									".code": [
										{
											"begin": 24546,
											"end": 27707,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24546,
											"end": 27707,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0xf3802d7f4b5813bff061eac1c57a592584da2c659ca79bd9bbd5b52943c9c419\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://35016025ba196051e3087c41fd46e92d5014ae524e8390b59c2e222a1d01bb3e\",\"dweb:/ipfs/QmTV4qSKieduG22waSx785wExRRWamfRJsAVcwpjY7JY8b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Farm.sol\":19823:24542  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Farm.sol\":19823:24542  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220033ec77a462eaa35b0428927a7183e5352e8a49502453d12fc76c10b88ba10a664736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220033ec77a462eaa35b0428927a7183e5352e8a49502453d12fc76c10b88ba10a664736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB RETURNDATACOPY 0xC7 PUSH27 0x462EAA35B0428927A7183E5352E8A49502453D12FC76C10B88BA10 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "19823:4719:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220033ec77a462eaa35b0428927a7183e5352e8a49502453d12fc76c10b88ba10a664736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB RETURNDATACOPY 0xC7 PUSH27 0x462EAA35B0428927A7183E5352E8A49502453D12FC76C10B88BA10 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "19823:4719:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19823,
									"end": 24542,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220033ec77a462eaa35b0428927a7183e5352e8a49502453d12fc76c10b88ba10a664736f6c63430008000033",
									".code": [
										{
											"begin": 19823,
											"end": 24542,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19823,
											"end": 24542,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farm.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Farm.sol\":{\"keccak256\":\"0xf3802d7f4b5813bff061eac1c57a592584da2c659ca79bd9bbd5b52943c9c419\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://35016025ba196051e3087c41fd46e92d5014ae524e8390b59c2e222a1d01bb3e\",\"dweb:/ipfs/QmTV4qSKieduG22waSx785wExRRWamfRJsAVcwpjY7JY8b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> Farm.sol:853:9:\n    |\n853 |         address operator,\n    |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 30794,
					"file": "Farm.sol",
					"start": 30778
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> Farm.sol:855:9:\n    |\n855 |         uint256 tokenId,\n    |         ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 30843,
					"file": "Farm.sol",
					"start": 30828
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> Farm.sol:856:9:\n    |\n856 |         bytes calldata data\n    |         ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 30873,
					"file": "Farm.sol",
					"start": 30854
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> Farm.sol:862:21:\n    |\n862 |     function _stake(address holder, uint256 _tokenId) internal {\n    |                     ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 31130,
					"file": "Farm.sol",
					"start": 31116
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n   --> Farm.sol:852:5:\n    |\n852 |     function onERC721Received(\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 31092,
					"file": "Farm.sol",
					"start": 30742
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Farm.sol": {
				"ast": {
					"absolutePath": "Farm.sol",
					"exportedSymbols": {
						"Address": [
							379
						],
						"Context": [
							473
						],
						"Farm": [
							1677
						],
						"IERC165": [
							26
						],
						"IERC20": [
							454
						],
						"IERC721": [
							138
						],
						"IERC721Receiver": [
							17
						],
						"Ownable": [
							1143
						],
						"Pausable": [
							577
						],
						"ReentrancyGuard": [
							628
						],
						"SafeERC20": [
							1034
						],
						"SafeMath": [
							821
						]
					},
					"id": 1678,
					"license": "Unlicense",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "65:156:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "IERC721Receiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "256:501:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "799:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "826:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "849:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "875:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "875:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:113:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "920:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 13,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "920:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "919:8:0"
									},
									"scope": 17,
									"src": "763:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1678,
							"src": "223:708:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "IERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "960:347:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1340:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 19,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1340:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:20:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1383:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1383:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:6:0"
									},
									"scope": 26,
									"src": "1313:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1678,
							"src": "935:457:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 27,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 26,
										"src": "1417:7:0"
									},
									"id": 28,
									"nodeType": "InheritanceSpecifier",
									"src": "1417:7:0"
								}
							],
							"contractDependencies": [
								26
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 138,
							"linearizedBaseContracts": [
								138,
								26
							],
							"name": "IERC721",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1432:90:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 37,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1543:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1565:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1585:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:67:0"
									},
									"src": "1528:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1618:96:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 46,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1735:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1758:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1784:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1734:74:0"
									},
									"src": "1720:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1817:119:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 55,
									"name": "ApprovalForAll",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1963:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1963:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1986:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "2012:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 52,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2012:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:64:0"
									},
									"src": "1942:85:0"
								},
								{
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "2035:78:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 63,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2138:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:15:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2176:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2176:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2175:17:0"
									},
									"scope": 138,
									"src": "2119:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2201:137:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2361:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:17:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2401:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2400:15:0"
									},
									"scope": 138,
									"src": "2344:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "2424:568:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 83,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3034:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3057:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3078:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3104:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3104:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3023:107:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:0"
									},
									"scope": 138,
									"src": "2998:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "3148:700:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3890:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3913:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3934:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3879:77:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3965:0:0"
									},
									"scope": 138,
									"src": "3854:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3974:517:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4529:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4552:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "4573:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4518:77:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4604:0:0"
									},
									"scope": 138,
									"src": "4497:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "4613:464:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5100:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5112:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5099:29:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5137:0:0"
									},
									"scope": 138,
									"src": "5083:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5146:318:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5497:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "_approved",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5515:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5515:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5496:34:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5539:0:0"
									},
									"scope": 138,
									"src": "5470:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "5548:145:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "5720:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:17:0"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "5760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:18:0"
									},
									"scope": 138,
									"src": "5699:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "5786:142:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "5960:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "5975:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:33:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "6016:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6016:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6015:6:0"
									},
									"scope": 138,
									"src": "5934:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1678,
							"src": "1396:4629:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "6705:356:0",
										"statements": [
											{
												"assignments": [
													147
												],
												"declarations": [
													{
														"constant": false,
														"id": 147,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 154,
														"src": "6907:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6907:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6996:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6998:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "7018:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "7006:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7006:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6998:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 141,
														"isOffset": false,
														"isSlot": false,
														"src": "7018:7:0",
														"valueSize": 1
													},
													{
														"declaration": 147,
														"isOffset": false,
														"isSlot": false,
														"src": "6998:4:0",
														"valueSize": 1
													}
												],
												"id": 149,
												"nodeType": "InlineAssembly",
												"src": "6987:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 150,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "7045:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7052:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7045:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 145,
												"id": 153,
												"nodeType": "Return",
												"src": "7038:15:0"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "6052:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "6659:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6658:17:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "6699:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 143,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6699:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6698:6:0"
									},
									"scope": 379,
									"src": "6639:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "8067:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 166,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8094:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$379",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$379",
																				"typeString": "library Address"
																			}
																		],
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8086:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 164,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8086:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8086:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "8086:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 169,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "8111:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8086:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8119:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8078:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8078:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "8078:73:0"
											},
											{
												"assignments": [
													175,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 175,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 188,
														"src": "8243:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 174,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8243:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 182,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8293:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 176,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "8261:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "8261:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 178,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "8284:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8261:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8261:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8242:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "8315:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8307:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8307:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "8307:78:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "7069:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "8015:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8015:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "8042:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8014:43:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8067:0:0"
									},
									"scope": 379,
									"src": "7996:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "9243:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "9272:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 201,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "9280:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9286:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 199,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															206,
															226
														],
														"referencedDeclaration": 226,
														"src": "9259:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9259:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 198,
												"id": 204,
												"nodeType": "Return",
												"src": "9252:67:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "8401:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "9176:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "9192:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 193,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9192:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9175:35:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "9229:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9229:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9228:14:0"
									},
									"scope": 379,
									"src": "9154:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "9674:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 219,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "9714:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 220,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "9722:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9728:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 222,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "9731:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 218,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															246,
															296
														],
														"referencedDeclaration": 296,
														"src": "9692:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9692:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 217,
												"id": 224,
												"nodeType": "Return",
												"src": "9685:59:0"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "9335:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "9579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9579:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "9595:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 210,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9595:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "9614:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 212,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9614:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9578:63:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "9660:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 215,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9660:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9659:14:0"
									},
									"scope": 379,
									"src": "9557:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "10240:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "10280:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 240,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "10288:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 241,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "10294:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10301:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 238,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															246,
															296
														],
														"referencedDeclaration": 296,
														"src": "10258:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10258:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 237,
												"id": 244,
												"nodeType": "Return",
												"src": "10251:94:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "9760:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "10158:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "10174:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10174:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "10193:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10157:50:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "10226:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10226:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10225:14:0"
									},
									"scope": 379,
									"src": "10127:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "10750:389:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 263,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10777:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$379",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$379",
																				"typeString": "library Address"
																			}
																		],
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10769:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 261,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10769:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10769:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "10769:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 266,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "10794:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10769:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10801:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10761:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "10761:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 273,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "10872:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 272,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "10861:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10861:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10881:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10853:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10853:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "10853:60:0"
											},
											{
												"assignments": [
													279,
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 279,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 295,
														"src": "10987:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 278,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10987:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 295,
														"src": "11001:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 280,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11001:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"arguments": [
														{
															"id": 286,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "11056:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 282,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "11028:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "11028:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 284,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "11048:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "11028:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11028:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10986:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "11097:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 291,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "11106:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 292,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "11118:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 289,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "11079:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11079:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 259,
												"id": 294,
												"nodeType": "Return",
												"src": "11072:59:0"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "10361:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "10640:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "10656:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10656:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "10675:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "10690:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 254,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10690:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10639:78:0"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "10736:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 257,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10736:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10735:14:0"
									},
									"scope": 379,
									"src": "10609:530:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "11424:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 307,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "11461:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 308,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "11469:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11475:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 306,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															313,
															348
														],
														"referencedDeclaration": 348,
														"src": "11442:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11442:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 305,
												"id": 311,
												"nodeType": "Return",
												"src": "11435:80:0"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "11147:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "11352:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "11368:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11368:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:35:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "11410:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11410:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11409:14:0"
									},
									"scope": 379,
									"src": "11324:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "11843:294:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 327,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "11873:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 326,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "11862:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11862:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11882:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 325,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11854:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11854:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "11854:67:0"
											},
											{
												"assignments": [
													333,
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 333,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "11995:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 332,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11995:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "12009:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 334,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "12009:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"arguments": [
														{
															"id": 338,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "12054:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 336,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "12036:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "12036:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12036:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11994:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 342,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "12095:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 343,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "12104:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 344,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "12116:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 341,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "12077:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12077:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 324,
												"id": 346,
												"nodeType": "Return",
												"src": "12070:59:0"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "11531:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11743:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11759:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11759:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11778:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11778:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11742:63:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "11829:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11829:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11828:14:0"
									},
									"scope": 379,
									"src": "11715:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "12274:613:0",
										"statements": [
											{
												"condition": {
													"id": 359,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 350,
													"src": "12289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 375,
													"nodeType": "Block",
													"src": "12348:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 363,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "12434:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "12434:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12454:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12434:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 373,
																"nodeType": "Block",
																"src": "12814:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 370,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 354,
																					"src": "12840:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 369,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "12833:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12833:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 372,
																		"nodeType": "ExpressionStatement",
																		"src": "12833:20:0"
																	}
																]
															},
															"id": 374,
															"nodeType": "IfStatement",
															"src": "12430:439:0",
															"trueBody": {
																"id": 368,
																"nodeType": "Block",
																"src": "12457:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "12645:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "12668:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "12697:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "12691:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12691:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "12672:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "12741:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "12745:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "12737:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "12737:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "12758:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "12730:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12730:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12730:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 352,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12697:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 352,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "12745:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 367,
																		"nodeType": "InlineAssembly",
																		"src": "12636:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 376,
												"nodeType": "IfStatement",
												"src": "12285:595:0",
												"trueBody": {
													"id": 362,
													"nodeType": "Block",
													"src": "12298:44:0",
													"statements": [
														{
															"expression": {
																"id": 360,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "12320:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 358,
															"id": 361,
															"nodeType": "Return",
															"src": "12313:17:0"
														}
													]
												}
											}
										]
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "12172:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12172:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "12186:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12186:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "12211:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 353,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12211:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12171:67:0"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "12260:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12260:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12259:14:0"
									},
									"scope": 379,
									"src": "12145:742:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1678,
							"src": "6029:6861:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 454,
							"linearizedBaseContracts": [
								454
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "12918:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13012:2:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "13038:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13037:9:0"
									},
									"scope": 454,
									"src": "12992:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "13055:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "13154:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13153:17:0"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "13194:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13193:9:0"
									},
									"scope": 454,
									"src": "13135:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "13211:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "13450:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "13469:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13449:35:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "13503:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13503:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13502:6:0"
									},
									"scope": 454,
									"src": "13432:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "13517:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "13812:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "13827:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13811:32:0"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "13867:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13866:9:0"
									},
									"scope": 454,
									"src": "13793:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "13884:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "14562:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "14579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14561:33:0"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "14613:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14613:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14612:6:0"
									},
									"scope": 454,
									"src": "14545:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "14627:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "14959:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "14975:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "14994:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14958:51:0"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "15028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15027:6:0"
									},
									"scope": 454,
									"src": "14937:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "15042:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 444,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "15226:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "15248:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "15268:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15225:57:0"
									},
									"src": "15211:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "15291:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 453,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "15463:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "15486:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "15511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15462:63:0"
									},
									"src": "15448:78:0"
								}
							],
							"scope": 1678,
							"src": "12894:2635:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 473,
							"linearizedBaseContracts": [
								473
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "15630:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 459,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "15648:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "15648:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 458,
												"id": 461,
												"nodeType": "Return",
												"src": "15641:17:0"
											}
										]
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15587:2:0"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "15621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15620:9:0"
									},
									"scope": 473,
									"src": "15568:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "15741:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 468,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "15759:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "15759:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 467,
												"id": 470,
												"nodeType": "Return",
												"src": "15752:15:0"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15691:2:0"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "15725:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15725:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15724:16:0"
									},
									"scope": 473,
									"src": "15674:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1678,
							"src": "15535:243:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 474,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 473,
										"src": "15812:7:0"
									},
									"id": 475,
									"nodeType": "InheritanceSpecifier",
									"src": "15812:7:0"
								}
							],
							"contractDependencies": [
								473
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 577,
							"linearizedBaseContracts": [
								577,
								473
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "15827:75:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 480,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "15921:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15920:17:0"
									},
									"src": "15908:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "15946:72:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 485,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "16039:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16038:17:0"
									},
									"src": "16024:32:0"
								},
								{
									"constant": false,
									"id": 487,
									"mutability": "mutable",
									"name": "_paused",
									"nodeType": "VariableDeclaration",
									"scope": 577,
									"src": "16064:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 486,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "16064:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "16182:34:0",
										"statements": [
											{
												"expression": {
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 491,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "16193:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16203:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "16193:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "16193:15:0"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "16093:69:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 496,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16179:2:0"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16182:0:0"
									},
									"scope": 577,
									"src": "16168:48:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "16436:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 499,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "16447:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16447:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "16447:19:0"
											},
											{
												"id": 502,
												"nodeType": "PlaceholderStatement",
												"src": "16477:1:0"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "16224:181:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 504,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16433:2:0"
									},
									"src": "16411:75:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "16695:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 507,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "16706:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16706:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "16706:16:0"
											},
											{
												"id": 510,
												"nodeType": "PlaceholderStatement",
												"src": "16733:1:0"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "16494:173:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 512,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16692:2:0"
									},
									"src": "16673:69:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "16895:33:0",
										"statements": [
											{
												"expression": {
													"id": 518,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 487,
													"src": "16913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "16906:14:0"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "16750:86:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16857:2:0"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "16889:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16889:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16888:6:0"
									},
									"scope": 577,
									"src": "16842:86:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "17052:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "17071:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 526,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "17072:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17082:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17063:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17063:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "17063:38:0"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "16936:59:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17027:2:0"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17052:0:0"
									},
									"scope": 577,
									"src": "17001:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "17234:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 538,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "17253:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17253:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17263:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17245:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17245:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "17245:41:0"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "17117:63:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17209:2:0"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17234:0:0"
									},
									"scope": 577,
									"src": "17186:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "17487:69:0",
										"statements": [
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "17498:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17508:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "17498:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "17498:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 555,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "17535:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17535:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 554,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "17528:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17528:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "EmitStatement",
												"src": "17523:25:0"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "17302:130:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 548,
											"modifierName": {
												"id": 547,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 504,
												"src": "17473:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "17473:13:0"
										}
									],
									"name": "_pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17453:2:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17487:0:0"
									},
									"scope": 577,
									"src": "17438:118:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "17745:72:0",
										"statements": [
											{
												"expression": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 566,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "17756:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17766:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "17756:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "17756:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 571,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "17796:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17796:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 570,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "17787:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17787:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 574,
												"nodeType": "EmitStatement",
												"src": "17782:27:0"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "17564:127:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 564,
											"modifierName": {
												"id": 563,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 512,
												"src": "17734:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "17734:10:0"
										}
									],
									"name": "_unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17714:2:0"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17745:0:0"
									},
									"scope": 577,
									"src": "17697:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1678,
							"src": "15782:2038:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 628,
							"linearizedBaseContracts": [
								628
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 580,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "18624:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 578,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18624:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 579,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18664:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 583,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "18672:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 581,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18672:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 582,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "18708:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 585,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"scope": 628,
									"src": "18718:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 584,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18718:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "18764:41:0",
										"statements": [
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 588,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "18775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "18785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18775:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "18775:22:0"
											}
										]
									},
									"id": 593,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18761:2:0"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18764:0:0"
									},
									"scope": 628,
									"src": "18750:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "19215:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 596,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "19226:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19226:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "19226:21:0"
											},
											{
												"id": 599,
												"nodeType": "PlaceholderStatement",
												"src": "19258:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 600,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "19270:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19270:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "19270:20:0"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "18813:372:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 604,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19212:2:0"
									},
									"src": "19191:107:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "19345:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 608,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "19436:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 609,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "19447:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19436:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19457:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19428:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19428:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "19428:63:0"
											},
											{
												"expression": {
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 614,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "19569:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 615,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "19579:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19569:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "19569:18:0"
											}
										]
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19334:2:0"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19345:0:0"
									},
									"scope": 628,
									"src": "19306:289:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "19641:175:0",
										"statements": [
											{
												"expression": {
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 622,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "19786:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 623,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "19796:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19786:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "19786:22:0"
											}
										]
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19630:2:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19641:0:0"
									},
									"scope": 628,
									"src": "19603:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1678,
							"src": "17824:1995:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 821,
							"linearizedBaseContracts": [
								821
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "20153:114:0",
										"statements": [
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "20164:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20164:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 643,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 640,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "20176:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 641,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "20180:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20176:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20164:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 645,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "20200:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 646,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "20205:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20200:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20208:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20192:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "20192:46:0"
											},
											{
												"expression": {
													"id": 651,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 639,
													"src": "20258:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 637,
												"id": 652,
												"nodeType": "Return",
												"src": "20251:8:0"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "19847:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "20099:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "20110:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20098:22:0"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "20144:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20143:9:0"
									},
									"scope": 821,
									"src": "20086:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "20617:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "20639:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 666,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "20642:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20645:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 664,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															671,
															699
														],
														"referencedDeclaration": 699,
														"src": "20635:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20635:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 663,
												"id": 669,
												"nodeType": "Return",
												"src": "20628:50:0"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "20275:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "20563:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "20574:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20562:22:0"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "20608:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20607:9:0"
									},
									"scope": 821,
									"src": "20550:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "21084:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 684,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "21103:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 685,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "21108:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21103:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 687,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "21111:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 683,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21095:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21095:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "21095:29:0"
											},
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 698,
														"src": "21135:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21135:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 692,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "21147:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 693,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "21151:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21147:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21135:17:0"
											},
											{
												"expression": {
													"id": 696,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 691,
													"src": "21172:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 682,
												"id": 697,
												"nodeType": "Return",
												"src": "21165:8:0"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "20694:289:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "21002:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21002:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "21013:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "21024:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 677,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21001:50:0"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "21075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21074:9:0"
									},
									"scope": 821,
									"src": "20989:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "21507:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 709,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "21743:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21748:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21743:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 715,
												"nodeType": "IfStatement",
												"src": "21739:47:0",
												"trueBody": {
													"id": 714,
													"nodeType": "Block",
													"src": "21751:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21773:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 708,
															"id": 713,
															"nodeType": "Return",
															"src": "21766:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 733,
														"src": "21798:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 716,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21798:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 721,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 718,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "21810:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 719,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "21814:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21810:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21798:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 723,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 717,
																	"src": "21834:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 724,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "21838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21834:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 726,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "21843:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21834:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21846:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 722,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21826:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "21826:56:0"
											},
											{
												"expression": {
													"id": 731,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 717,
													"src": "21902:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 708,
												"id": 732,
												"nodeType": "Return",
												"src": "21895:8:0"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "21189:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "21453:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "21464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21452:22:0"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "21498:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21497:9:0"
									},
									"scope": 821,
									"src": "21440:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "22454:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 745,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "22476:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 746,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "22479:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22482:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 744,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															751,
															779
														],
														"referencedDeclaration": 779,
														"src": "22472:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22472:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 743,
												"id": 749,
												"nodeType": "Return",
												"src": "22465:46:0"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "21919:462:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "22400:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "22411:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22399:22:0"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "22445:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22444:9:0"
									},
									"scope": 821,
									"src": "22387:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "23110:183:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 764,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "23129:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23133:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23129:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 767,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "23136:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 763,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23121:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23121:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "23121:28:0"
											},
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 778,
														"src": "23160:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23160:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 772,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "23172:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 773,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "23176:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23172:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23160:17:0"
											},
											{
												"expression": {
													"id": 776,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 771,
													"src": "23284:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 762,
												"id": 777,
												"nodeType": "Return",
												"src": "23277:8:0"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "22527:482:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "23028:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "23039:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "23050:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 757,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23050:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23027:50:0"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "23101:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23100:9:0"
									},
									"scope": 821,
									"src": "23015:278:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "23825:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 790,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "23847:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 791,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "23850:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23853:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 789,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															796,
															820
														],
														"referencedDeclaration": 820,
														"src": "23843:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23843:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 788,
												"id": 794,
												"nodeType": "Return",
												"src": "23836:44:0"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "23301:451:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "23771:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "23782:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23770:22:0"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "23816:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23815:9:0"
									},
									"scope": 821,
									"src": "23758:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "24468:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 809,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "24487:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24492:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24487:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 812,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "24495:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 808,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24479:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24479:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "24479:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 815,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "24526:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 816,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "24530:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24526:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 807,
												"id": 818,
												"nodeType": "Return",
												"src": "24519:12:0"
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "23896:471:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "24386:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "24397:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "24408:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 802,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24408:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24385:50:0"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "24459:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24458:9:0"
									},
									"scope": 821,
									"src": "24373:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1678,
							"src": "19823:4719:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1034,
							"linearizedBaseContracts": [
								1034
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 824,
									"libraryName": {
										"id": 822,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "24577:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "24571:27:0",
									"typeName": {
										"id": 823,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24590:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 827,
									"libraryName": {
										"id": 825,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "24610:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "24604:26:0",
									"typeName": {
										"id": 826,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24622:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "24710:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 838,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "24741:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 841,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 830,
																			"src": "24771:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$454",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 403,
																		"src": "24771:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "24771:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 844,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "24796:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 845,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "24800:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 839,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "24748:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "24748:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24748:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 837,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "24721:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$454_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24721:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "24721:86:0"
											}
										]
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "24660:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$454",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 829,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 828,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 454,
														"src": "24660:6:0"
													},
													"referencedDeclaration": 454,
													"src": "24660:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "24674:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "24686:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24659:41:0"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24710:0:0"
									},
									"scope": 1034,
									"src": "24638:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "24913:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "24944:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 866,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 853,
																			"src": "24974:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$454",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 435,
																		"src": "24974:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "24974:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 869,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "25003:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 870,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "25009:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 871,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "25013:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 864,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "24951:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "24951:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24951:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 862,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "24924:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$454_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24924:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "24924:96:0"
											}
										]
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "24849:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$454",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 852,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 851,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 454,
														"src": "24849:6:0"
													},
													"referencedDeclaration": 454,
													"src": "24849:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "24863:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "24877:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "24889:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24848:55:0"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24913:0:0"
									},
									"scope": 1034,
									"src": "24823:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "25373:546:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 888,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "25667:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25676:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25667:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 891,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25666:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 896,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "25707:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1034",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1034",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 895,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "25699:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 894,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "25699:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 897,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "25699:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 898,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 882,
																					"src": "25714:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 892,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 880,
																					"src": "25683:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$454",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 413,
																				"src": "25683:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "25683:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25726:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25683:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 902,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25682:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "25666:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25743:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 887,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25658:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25658:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "25658:152:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 908,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "25841:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 911,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 880,
																			"src": "25871:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$454",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 423,
																		"src": "25871:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "25871:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 914,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "25895:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 915,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "25904:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 909,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "25848:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "25848:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25848:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 907,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "25821:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$454_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25821:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "25821:90:0"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "25036:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "25318:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$454",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 879,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 878,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 454,
														"src": "25318:6:0"
													},
													"referencedDeclaration": 454,
													"src": "25318:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "25332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "25349:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25317:46:0"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25373:0:0"
									},
									"scope": 1034,
									"src": "25297:622:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "26013:200:0",
										"statements": [
											{
												"assignments": [
													931
												],
												"declarations": [
													{
														"constant": false,
														"id": 931,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "26024:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 930,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26024:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 943,
												"initialValue": {
													"arguments": [
														{
															"id": 941,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "26091:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 936,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "26071:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1034",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1034",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26063:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 934,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "26063:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26063:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 938,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "26078:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 932,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "26047:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$454",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 413,
																"src": "26047:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26047:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 654,
														"src": "26047:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26047:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26024:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 945,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "26128:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 948,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 923,
																			"src": "26158:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$454",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 423,
																		"src": "26158:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "26158:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 951,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "26182:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 952,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "26191:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 946,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "26135:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "26135:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26135:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 944,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "26108:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$454_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26108:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "26108:97:0"
											}
										]
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "25958:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$454",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 922,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 921,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 454,
														"src": "25958:6:0"
													},
													"referencedDeclaration": 454,
													"src": "25958:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "25972:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "25989:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25957:46:0"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26013:0:0"
									},
									"scope": 1034,
									"src": "25927:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "26307:245:0",
										"statements": [
											{
												"assignments": [
													968
												],
												"declarations": [
													{
														"constant": false,
														"id": 968,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "26318:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 967,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26318:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 981,
												"initialValue": {
													"arguments": [
														{
															"id": 978,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "26385:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26392:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 973,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "26365:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1034",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1034",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26357:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 971,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "26357:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26357:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 975,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "26372:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 969,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "26341:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$454",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 413,
																"src": "26341:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26341:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 699,
														"src": "26341:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26341:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26318:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "26467:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 986,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 960,
																			"src": "26497:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$454",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 423,
																		"src": "26497:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "26497:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 989,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "26521:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 990,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "26530:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 984,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "26474:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "26474:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26474:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 982,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "26447:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$454_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26447:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "26447:97:0"
											}
										]
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "26252:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$454",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 959,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 958,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 454,
														"src": "26252:6:0"
													},
													"referencedDeclaration": 454,
													"src": "26252:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "26266:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "26283:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26251:46:0"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26307:0:0"
									},
									"scope": 1034,
									"src": "26221:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "27013:691:0",
										"statements": [
											{
												"assignments": [
													1005
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1032,
														"src": "27367:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1004,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "27367:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1014,
												"initialValue": {
													"arguments": [
														{
															"id": 1011,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "27421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27427:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1008,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 999,
																	"src": "27401:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$454",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$454",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27393:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1006,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "27393:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27393:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 226,
														"src": "27393:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27393:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27367:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1015,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "27477:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "27477:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27497:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27477:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1031,
												"nodeType": "IfStatement",
												"src": "27473:224:0",
												"trueBody": {
													"id": 1030,
													"nodeType": "Block",
													"src": "27500:197:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1022,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1005,
																				"src": "27619:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1024,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "27632:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1023,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "27632:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1025,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "27631:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1020,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "27608:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "27608:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "27608:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27640:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1019,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "27600:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27600:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1029,
															"nodeType": "ExpressionStatement",
															"src": "27600:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "26560:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "26972:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$454",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 998,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 997,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 454,
														"src": "26972:6:0"
													},
													"referencedDeclaration": 454,
													"src": "26972:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "26986:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1000,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26986:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26971:33:0"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27013:0:0"
									},
									"scope": 1034,
									"src": "26943:761:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1678,
							"src": "24546:3161:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1035,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 473,
										"src": "27740:7:0"
									},
									"id": 1036,
									"nodeType": "InheritanceSpecifier",
									"src": "27740:7:0"
								}
							],
							"contractDependencies": [
								473
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1143,
							"linearizedBaseContracts": [
								1143,
								473
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1038,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 1143,
									"src": "27755:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1037,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27755:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 1044,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "27813:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "27844:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27812:57:0"
									},
									"src": "27786:84:0"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "27991:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1049,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "28021:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28021:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1048,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "28002:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28002:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "28002:32:0"
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "27878:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1054,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27988:2:0"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27991:0:0"
									},
									"scope": 1143,
									"src": "27977:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "28156:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1057,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "28167:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28167:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "28167:13:0"
											},
											{
												"id": 1060,
												"nodeType": "PlaceholderStatement",
												"src": "28191:1:0"
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "28050:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1062,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28153:2:0"
									},
									"src": "28135:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "28336:32:0",
										"statements": [
											{
												"expression": {
													"id": 1068,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1038,
													"src": "28354:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1067,
												"id": 1069,
												"nodeType": "Return",
												"src": "28347:13:0"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "28208:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28295:2:0"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "28327:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28327:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28326:9:0"
									},
									"scope": 1143,
									"src": "28281:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "28491:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1076,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "28510:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28510:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1078,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "28521:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28521:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28510:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28535:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28502:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28502:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "28502:68:0"
											}
										]
									},
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "28376:64:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28466:2:0"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28491:0:0"
									},
									"scope": 1143,
									"src": "28446:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "28983:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29021:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29013:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1092,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29013:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29013:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1091,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "28994:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28994:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "28994:30:0"
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "28586:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1089,
											"modifierName": {
												"id": 1088,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "28973:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28973:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28955:2:0"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28983:0:0"
									},
									"scope": 1143,
									"src": "28929:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "29257:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1108,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "29276:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29296:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29288:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1109,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "29288:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29288:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29276:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29300:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29268:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29268:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "29268:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1118,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "29371:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1117,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "29352:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29352:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "29352:28:0"
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "29040:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1105,
											"modifierName": {
												"id": 1104,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "29247:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29247:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "29214:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29213:18:0"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29257:0:0"
									},
									"scope": 1143,
									"src": "29187:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "29611:128:0",
										"statements": [
											{
												"assignments": [
													1129
												],
												"declarations": [
													{
														"constant": false,
														"id": 1129,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "29622:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1128,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "29622:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1131,
												"initialValue": {
													"id": 1130,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1038,
													"src": "29641:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29622:25:0"
											},
											{
												"expression": {
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1132,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "29658:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1133,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "29667:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29658:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "29658:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1137,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "29712:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1138,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "29722:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1136,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "29691:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29691:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "EmitStatement",
												"src": "29686:45:0"
											}
										]
									},
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "29396:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "29576:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29575:18:0"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29611:0:0"
									},
									"scope": 1143,
									"src": "29548:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1678,
							"src": "27711:2031:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1144,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 628,
										"src": "29765:15:0"
									},
									"id": 1145,
									"nodeType": "InheritanceSpecifier",
									"src": "29765:15:0"
								},
								{
									"baseName": {
										"id": 1146,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 577,
										"src": "29782:8:0"
									},
									"id": 1147,
									"nodeType": "InheritanceSpecifier",
									"src": "29782:8:0"
								},
								{
									"baseName": {
										"id": 1148,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1143,
										"src": "29792:7:0"
									},
									"id": 1149,
									"nodeType": "InheritanceSpecifier",
									"src": "29792:7:0"
								},
								{
									"baseName": {
										"id": 1150,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 17,
										"src": "29801:15:0"
									},
									"id": 1151,
									"nodeType": "InheritanceSpecifier",
									"src": "29801:15:0"
								}
							],
							"contractDependencies": [
								17,
								473,
								577,
								628,
								1143
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1677,
							"linearizedBaseContracts": [
								1677,
								17,
								1143,
								577,
								473,
								628
							],
							"name": "Farm",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1154,
									"libraryName": {
										"id": 1152,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "29830:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "29824:27:0",
									"typeName": {
										"id": 1153,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "29843:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1158,
									"libraryName": {
										"id": 1155,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1034,
										"src": "29863:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "29857:27:0",
									"typeName": {
										"id": 1157,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1156,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 454,
											"src": "29877:6:0"
										},
										"referencedDeclaration": 454,
										"src": "29877:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$454",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "Farm.StakedToken",
									"id": 1163,
									"members": [
										{
											"constant": false,
											"id": 1160,
											"mutability": "mutable",
											"name": "staker",
											"nodeType": "VariableDeclaration",
											"scope": 1163,
											"src": "29922:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1159,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "29922:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1162,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 1163,
											"src": "29947:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1161,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "29947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakedToken",
									"nodeType": "StructDefinition",
									"scope": 1677,
									"src": "29892:78:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Farm.Staker",
									"id": 1174,
									"members": [
										{
											"constant": false,
											"id": 1165,
											"mutability": "mutable",
											"name": "amountStaked",
											"nodeType": "VariableDeclaration",
											"scope": 1174,
											"src": "30021:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1164,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "30021:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1169,
											"mutability": "mutable",
											"name": "stakedTokens",
											"nodeType": "VariableDeclaration",
											"scope": 1174,
											"src": "30052:26:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage_ptr",
												"typeString": "struct Farm.StakedToken[]"
											},
											"typeName": {
												"baseType": {
													"id": 1167,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1166,
														"name": "StakedToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1163,
														"src": "30052:11:0"
													},
													"referencedDeclaration": 1163,
													"src": "30052:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakedToken_$1163_storage_ptr",
														"typeString": "struct Farm.StakedToken"
													}
												},
												"id": 1168,
												"nodeType": "ArrayTypeName",
												"src": "30052:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage_ptr",
													"typeString": "struct Farm.StakedToken[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1171,
											"mutability": "mutable",
											"name": "timeOfLastUpdate",
											"nodeType": "VariableDeclaration",
											"scope": 1174,
											"src": "30089:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1170,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "30089:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1173,
											"mutability": "mutable",
											"name": "unclaimedRewards",
											"nodeType": "VariableDeclaration",
											"scope": 1174,
											"src": "30124:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "30124:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nodeType": "StructDefinition",
									"scope": 1677,
									"src": "29996:160:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 1177,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 1677,
									"src": "30164:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$454",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1176,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1175,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 454,
											"src": "30164:6:0"
										},
										"referencedDeclaration": 454,
										"src": "30164:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$454",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6588103b",
									"id": 1180,
									"mutability": "mutable",
									"name": "nftCollection",
									"nodeType": "VariableDeclaration",
									"scope": 1677,
									"src": "30197:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$138",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 1179,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1178,
											"name": "IERC721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 138,
											"src": "30197:7:0"
										},
										"referencedDeclaration": 138,
										"src": "30197:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$138",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1183,
									"mutability": "mutable",
									"name": "rewardsPerHour",
									"nodeType": "VariableDeclaration",
									"scope": 1677,
									"src": "30284:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1181,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "30284:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 1182,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "30317:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "9168ae72",
									"id": 1188,
									"mutability": "mutable",
									"name": "stakers",
									"nodeType": "VariableDeclaration",
									"scope": 1677,
									"src": "30336:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
										"typeString": "mapping(address => struct Farm.Staker)"
									},
									"typeName": {
										"id": 1187,
										"keyType": {
											"id": 1184,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30344:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "30336:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
											"typeString": "mapping(address => struct Farm.Staker)"
										},
										"valueType": {
											"id": 1186,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1185,
												"name": "Staker",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1174,
												"src": "30355:6:0"
											},
											"referencedDeclaration": 1174,
											"src": "30355:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1174_storage_ptr",
												"typeString": "struct Farm.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "94067045",
									"id": 1192,
									"mutability": "mutable",
									"name": "stakerAddress",
									"nodeType": "VariableDeclaration",
									"scope": 1677,
									"src": "30463:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1191,
										"keyType": {
											"id": 1189,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "30471:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "30463:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 1190,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "30482:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "30603:131:0",
										"statements": [
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1203,
														"name": "nftCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "30614:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$138",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1204,
														"name": "_nftCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "30630:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$138",
															"typeString": "contract IERC721"
														}
													},
													"src": "30614:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$138",
														"typeString": "contract IERC721"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "30614:30:0"
											},
											{
												"expression": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1207,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "30655:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$454",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1208,
														"name": "_rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "30670:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$454",
															"typeString": "contract IERC20"
														}
													},
													"src": "30655:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "30655:28:0"
											},
											{
												"expression": {
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1211,
														"name": "rewardsPerHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "30694:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1212,
														"name": "_rewardsPerHour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "30711:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30694:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "30694:32:0"
											}
										]
									},
									"id": 1216,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "_nftCollection",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "30532:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$138",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 1194,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1193,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 138,
														"src": "30532:7:0"
													},
													"referencedDeclaration": 138,
													"src": "30532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$138",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "30556:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$454",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1197,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1196,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 454,
														"src": "30556:6:0"
													},
													"referencedDeclaration": 454,
													"src": "30556:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$454",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "_rewardsPerHour",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "30578:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30531:71:0"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30603:0:0"
									},
									"scope": 1677,
									"src": "30520:214:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "30916:176:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_contract$_IERC721_$138",
																"typeString": "contract IERC721"
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1232,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1220,
																		"src": "30943:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1231,
																	"name": "IERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "30935:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC721_$138_$",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30935:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC721_$138",
																	"typeString": "contract IERC721"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1234,
																"name": "nftCollection",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "30952:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC721_$138",
																	"typeString": "contract IERC721"
																}
															},
															"src": "30935:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420737570706f72746564204e465420436f6c6c656374696f6e",
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30967:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41d43409f2d7162ba35b48a990c5f914c4024b4bdbebb61ed357215fd7bb0f20",
																"typeString": "literal_string \"Not supported NFT Collection\""
															},
															"value": "Not supported NFT Collection"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41d43409f2d7162ba35b48a990c5f914c4024b4bdbebb61ed357215fd7bb0f20",
																"typeString": "literal_string \"Not supported NFT Collection\""
															}
														],
														"id": 1230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30927:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30927:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "30927:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f6e455243373231526563656976656428616464726573732c616464726573732c75696e743235362c627974657329",
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31033:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
																		"typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
																	},
																	"value": "onERC721Received(address,address,uint256,bytes)"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
																		"typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
																	}
																],
																"id": 1241,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "31023:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31023:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "31016:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 1239,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "31016:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31016:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1245,
												"nodeType": "Return",
												"src": "31009:75:0"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1226,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "30890:8:0"
									},
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "30778:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "30805:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "30828:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "30854:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30854:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30767:113:0"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "30908:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "30908:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30907:8:0"
									},
									"scope": 1677,
									"src": "30742:350:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "31159:701:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1257,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "31214:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1255,
																		"name": "nftCollection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "31192:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$138",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 71,
																	"src": "31192:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31192:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1259,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "31227:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "31227:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31192:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31252:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															},
															"value": "You don't own this token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															}
														],
														"id": 1254,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31170:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31170:120:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "31170:120:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1265,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "31307:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1268,
															"indexExpression": {
																"expression": {
																	"id": 1266,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "31315:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "31315:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31307:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1165,
														"src": "31307:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31342:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31307:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1288,
												"nodeType": "IfStatement",
												"src": "31303:177:0",
												"trueBody": {
													"id": 1287,
													"nodeType": "Block",
													"src": "31345:135:0",
													"statements": [
														{
															"assignments": [
																1273
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1273,
																	"mutability": "mutable",
																	"name": "rewards",
																	"nodeType": "VariableDeclaration",
																	"scope": 1287,
																	"src": "31360:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1272,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31360:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1278,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1275,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "31395:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "31395:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1274,
																	"name": "calculateRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "31378:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31378:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31360:46:0"
														},
														{
															"expression": {
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1279,
																			"name": "stakers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1188,
																			"src": "31421:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																				"typeString": "mapping(address => struct Farm.Staker storage ref)"
																			}
																		},
																		"id": 1282,
																		"indexExpression": {
																			"expression": {
																				"id": 1280,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "31429:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "31429:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "31421:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1174_storage",
																			"typeString": "struct Farm.Staker storage ref"
																		}
																	},
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "unclaimedRewards",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1173,
																	"src": "31421:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1284,
																	"name": "rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "31461:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31421:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1286,
															"nodeType": "ExpressionStatement",
															"src": "31421:47:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1292,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31519:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31519:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1296,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31539:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farm_$1677",
																		"typeString": "contract Farm"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farm_$1677",
																		"typeString": "contract Farm"
																	}
																],
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31531:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1294,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31531:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31531:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1298,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "31546:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1289,
															"name": "nftCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "31492:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$138",
																"typeString": "contract IERC721"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "31492:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31492:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "31492:63:0"
											},
											{
												"assignments": [
													1303
												],
												"declarations": [
													{
														"constant": false,
														"id": 1303,
														"mutability": "mutable",
														"name": "stakedToken",
														"nodeType": "VariableDeclaration",
														"scope": 1342,
														"src": "31568:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakedToken_$1163_memory_ptr",
															"typeString": "struct Farm.StakedToken"
														},
														"typeName": {
															"id": 1302,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1301,
																"name": "StakedToken",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1163,
																"src": "31568:11:0"
															},
															"referencedDeclaration": 1163,
															"src": "31568:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$1163_storage_ptr",
																"typeString": "struct Farm.StakedToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1309,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1305,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31613:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31613:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1307,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "31625:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1304,
														"name": "StakedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "31601:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakedToken_$1163_storage_ptr_$",
															"typeString": "type(struct Farm.StakedToken storage pointer)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31601:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakedToken_$1163_memory_ptr",
														"typeString": "struct Farm.StakedToken memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31568:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1316,
															"name": "stakedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "31683:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$1163_memory_ptr",
																"typeString": "struct Farm.StakedToken memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_StakedToken_$1163_memory_ptr",
																"typeString": "struct Farm.StakedToken memory"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1310,
																	"name": "stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "31645:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																		"typeString": "mapping(address => struct Farm.Staker storage ref)"
																	}
																},
																"id": 1313,
																"indexExpression": {
																	"expression": {
																		"id": 1311,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "31653:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "31653:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31645:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1174_storage",
																	"typeString": "struct Farm.Staker storage ref"
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakedTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1169,
															"src": "31645:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage",
																"typeString": "struct Farm.StakedToken storage ref[] storage ref"
															}
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "31645:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_StakedToken_$1163_storage_$returns$__$",
															"typeString": "function (struct Farm.StakedToken storage ref)"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31645:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1318,
												"nodeType": "ExpressionStatement",
												"src": "31645:50:0"
											},
											{
												"expression": {
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "31706:34:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1319,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "31706:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1322,
															"indexExpression": {
																"expression": {
																	"id": 1320,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "31714:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "31714:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31706:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1165,
														"src": "31706:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "31706:34:0"
											},
											{
												"expression": {
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1326,
															"name": "stakerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "31751:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1328,
														"indexExpression": {
															"id": 1327,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "31765:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31751:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1329,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "31777:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "31777:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31751:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "31751:36:0"
											},
											{
												"expression": {
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1333,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "31798:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1336,
															"indexExpression": {
																"expression": {
																	"id": 1334,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "31806:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "31806:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31798:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timeOfLastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1171,
														"src": "31798:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1338,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31837:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "31837:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31798:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1341,
												"nodeType": "ExpressionStatement",
												"src": "31798:54:0"
											}
										]
									},
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "holder",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "31116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "_tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "31132:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31115:34:0"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31159:0:0"
									},
									"scope": 1677,
									"src": "31100:760:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "31921:18:0",
										"statements": []
									},
									"functionSelector": "a694fc3a",
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1348,
											"modifierName": {
												"id": 1347,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 604,
												"src": "31908:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31908:12:0"
										}
									],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "_tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "31881:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31880:18:0"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31921:0:0"
									},
									"scope": 1677,
									"src": "31866:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "32005:1006:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1359,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1188,
																		"src": "32038:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																			"typeString": "mapping(address => struct Farm.Staker storage ref)"
																		}
																	},
																	"id": 1362,
																	"indexExpression": {
																		"expression": {
																			"id": 1360,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "32046:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "32046:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "32038:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1174_storage",
																		"typeString": "struct Farm.Staker storage ref"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amountStaked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1165,
																"src": "32038:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32073:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32038:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f20746f6b656e73207374616b6564",
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32089:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139",
																"typeString": "literal_string \"You have no tokens staked\""
															},
															"value": "You have no tokens staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139",
																"typeString": "literal_string \"You have no tokens staked\""
															}
														],
														"id": 1358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32016:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32016:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1368,
												"nodeType": "ExpressionStatement",
												"src": "32016:111:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1370,
																	"name": "stakerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "32146:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 1372,
																"indexExpression": {
																	"id": 1371,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "32160:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32146:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1373,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "32173:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "32173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "32146:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32185:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															},
															"value": "You don't own this token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															}
														],
														"id": 1369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32138:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32138:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "32138:75:0"
											},
											{
												"assignments": [
													1380
												],
												"declarations": [
													{
														"constant": false,
														"id": 1380,
														"mutability": "mutable",
														"name": "rewards",
														"nodeType": "VariableDeclaration",
														"scope": 1483,
														"src": "32325:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1379,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32325:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1385,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1382,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32360:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32360:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1381,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "32343:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32343:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32325:46:0"
											},
											{
												"expression": {
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1386,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "32382:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1389,
															"indexExpression": {
																"expression": {
																	"id": 1387,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "32390:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "32390:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32382:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1173,
														"src": "32382:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1391,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "32422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32382:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "32382:47:0"
											},
											{
												"assignments": [
													1395
												],
												"declarations": [
													{
														"constant": false,
														"id": 1395,
														"mutability": "mutable",
														"name": "index",
														"nodeType": "VariableDeclaration",
														"scope": 1483,
														"src": "32444:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1394,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32444:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"hexValue": "30",
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "32460:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32444:17:0"
											},
											{
												"body": {
													"id": 1430,
													"nodeType": "Block",
													"src": "32542:155:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1413,
																					"name": "stakers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1188,
																					"src": "32561:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																						"typeString": "mapping(address => struct Farm.Staker storage ref)"
																					}
																				},
																				"id": 1416,
																				"indexExpression": {
																					"expression": {
																						"id": 1414,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "32569:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1415,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "32569:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "32561:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Staker_$1174_storage",
																					"typeString": "struct Farm.Staker storage ref"
																				}
																			},
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakedTokens",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1169,
																			"src": "32561:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage",
																				"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																			}
																		},
																		"id": 1419,
																		"indexExpression": {
																			"id": 1418,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1399,
																			"src": "32594:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "32561:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakedToken_$1163_storage",
																			"typeString": "struct Farm.StakedToken storage ref"
																		}
																	},
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1162,
																	"src": "32561:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1421,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "32608:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32561:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1429,
															"nodeType": "IfStatement",
															"src": "32557:129:0",
															"trueBody": {
																"id": 1428,
																"nodeType": "Block",
																"src": "32618:68:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1423,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1395,
																				"src": "32637:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1424,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1399,
																				"src": "32645:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "32637:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1426,
																		"nodeType": "ExpressionStatement",
																		"src": "32637:9:0"
																	},
																	{
																		"id": 1427,
																		"nodeType": "Break",
																		"src": "32665:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1402,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "32492:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1403,
																	"name": "stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "32496:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																		"typeString": "mapping(address => struct Farm.Staker storage ref)"
																	}
																},
																"id": 1406,
																"indexExpression": {
																	"expression": {
																		"id": 1404,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "32504:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "32504:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "32496:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$1174_storage",
																	"typeString": "struct Farm.Staker storage ref"
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakedTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1169,
															"src": "32496:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage",
																"typeString": "struct Farm.StakedToken storage ref[] storage ref"
															}
														},
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "32496:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32492:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1431,
												"initializationExpression": {
													"assignments": [
														1399
													],
													"declarations": [
														{
															"constant": false,
															"id": 1399,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1431,
															"src": "32477:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1398,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "32477:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1401,
													"initialValue": {
														"hexValue": "30",
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32489:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "32477:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "32537:3:0",
														"subExpression": {
															"id": 1410,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "32537:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1412,
													"nodeType": "ExpressionStatement",
													"src": "32537:3:0"
												},
												"nodeType": "ForStatement",
												"src": "32472:225:0"
											},
											{
												"expression": {
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1432,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1188,
																		"src": "32711:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																			"typeString": "mapping(address => struct Farm.Staker storage ref)"
																		}
																	},
																	"id": 1435,
																	"indexExpression": {
																		"expression": {
																			"id": 1433,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "32719:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "32719:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "32711:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$1174_storage",
																		"typeString": "struct Farm.Staker storage ref"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakedTokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1169,
																"src": "32711:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage",
																	"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																}
															},
															"id": 1438,
															"indexExpression": {
																"id": 1437,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "32744:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32711:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$1163_storage",
																"typeString": "struct Farm.StakedToken storage ref"
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "staker",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1160,
														"src": "32711:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32768:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32760:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1440,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32760:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32760:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32711:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "32711:59:0"
											},
											{
												"expression": {
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "32781:34:0",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1446,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "32781:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1449,
															"indexExpression": {
																"expression": {
																	"id": 1447,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "32789:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "32789:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32781:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1450,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1165,
														"src": "32781:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "32781:34:0"
											},
											{
												"expression": {
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1453,
															"name": "stakerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "32826:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1455,
														"indexExpression": {
															"id": 1454,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "32840:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32826:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32860:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32852:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1456,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32852:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32852:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32826:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "32826:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1467,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "32910:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farm_$1677",
																		"typeString": "contract Farm"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farm_$1677",
																		"typeString": "contract Farm"
																	}
																],
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32902:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1465,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32902:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32902:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1469,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32917:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32917:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1471,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "32929:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1462,
															"name": "nftCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "32875:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$138",
																"typeString": "contract IERC721"
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "32875:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32875:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1473,
												"nodeType": "ExpressionStatement",
												"src": "32875:63:0"
											},
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1474,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "32949:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1477,
															"indexExpression": {
																"expression": {
																	"id": 1475,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "32957:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "32957:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32949:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timeOfLastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1171,
														"src": "32949:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1479,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "32988:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "32988:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32949:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "32949:54:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1356,
											"modifierName": {
												"id": 1355,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 604,
												"src": "31992:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31992:12:0"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "_tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "31965:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31964:18:0"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32005:0:0"
									},
									"scope": 1677,
									"src": "31947:1064:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1513,
										"nodeType": "Block",
										"src": "33135:184:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1503,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1497,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"expression": {
																												"id": 1491,
																												"name": "block",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967292,
																												"src": "33172:5:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_block",
																													"typeString": "block"
																												}
																											},
																											"id": 1492,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "timestamp",
																											"nodeType": "MemberAccess",
																											"src": "33172:15:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"expression": {
																												"baseExpression": {
																													"id": 1493,
																													"name": "stakers",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1188,
																													"src": "33190:7:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																														"typeString": "mapping(address => struct Farm.Staker storage ref)"
																													}
																												},
																												"id": 1495,
																												"indexExpression": {
																													"id": 1494,
																													"name": "_staker",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1486,
																													"src": "33198:7:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "33190:16:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Staker_$1174_storage",
																													"typeString": "struct Farm.Staker storage ref"
																												}
																											},
																											"id": 1496,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "timeOfLastUpdate",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1171,
																											"src": "33190:33:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "33172:51:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1498,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "33171:53:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1499,
																										"name": "stakers",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1188,
																										"src": "33244:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																											"typeString": "mapping(address => struct Farm.Staker storage ref)"
																										}
																									},
																									"id": 1501,
																									"indexExpression": {
																										"id": 1500,
																										"name": "_staker",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1486,
																										"src": "33252:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "33244:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Staker_$1174_storage",
																										"typeString": "struct Farm.Staker storage ref"
																									}
																								},
																								"id": 1502,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "amountStaked",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1165,
																								"src": "33244:29:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "33171:102:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1504,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "33170:104:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1505,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "33155:130:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1506,
																			"name": "rewardsPerHour",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "33288:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33155:147:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1508,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "33154:149:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "33363030",
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33306:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "3600"
															},
															"src": "33154:156:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1511,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "33153:158:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1490,
												"id": 1512,
												"nodeType": "Return",
												"src": "33146:165:0"
											}
										]
									},
									"id": 1514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "_staker",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "33045:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33044:17:0"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "_rewards",
												"nodeType": "VariableDeclaration",
												"scope": 1514,
												"src": "33112:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33111:18:0"
									},
									"scope": 1677,
									"src": "33019:300:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "33360:353:0",
										"statements": [
											{
												"assignments": [
													1518
												],
												"declarations": [
													{
														"constant": false,
														"id": 1518,
														"mutability": "mutable",
														"name": "rewards",
														"nodeType": "VariableDeclaration",
														"scope": 1562,
														"src": "33371:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1517,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33371:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1529,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1520,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "33406:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "33406:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1519,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "33389:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33389:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1523,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "33433:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1526,
															"indexExpression": {
																"expression": {
																	"id": 1524,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "33441:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "33441:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33433:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1173,
														"src": "33433:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33389:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33371:98:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1531,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "33488:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33498:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33488:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f207265776172647320746f20636c61696d",
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33501:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e",
																"typeString": "literal_string \"You have no rewards to claim\""
															},
															"value": "You have no rewards to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e",
																"typeString": "literal_string \"You have no rewards to claim\""
															}
														],
														"id": 1530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33480:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "33480:52:0"
											},
											{
												"expression": {
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1537,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "33543:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1540,
															"indexExpression": {
																"expression": {
																	"id": 1538,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "33551:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "33551:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33543:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timeOfLastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1171,
														"src": "33543:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1542,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "33582:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "33582:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33543:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "33543:54:0"
											},
											{
												"expression": {
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1546,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "33608:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1549,
															"indexExpression": {
																"expression": {
																	"id": 1547,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "33616:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "33616:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33608:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1550,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1173,
														"src": "33608:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33647:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33608:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "33608:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1557,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33685:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33685:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1559,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "33697:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1554,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "33659:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$454",
																"typeString": "contract IERC20"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 850,
														"src": "33659:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$454_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$454_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33659:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "33659:46:0"
											}
										]
									},
									"functionSelector": "372500ab",
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33348:2:0"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33360:0:0"
									},
									"scope": 1677,
									"src": "33327:386:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "33804:597:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1572,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "33819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1574,
															"indexExpression": {
																"id": 1573,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "33827:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33819:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1165,
														"src": "33819:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33849:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33819:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1652,
													"nodeType": "Block",
													"src": "34340:54:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34380:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "34362:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct Farm.StakedToken memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1646,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1645,
																				"name": "StakedToken",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1163,
																				"src": "34366:11:0"
																			},
																			"referencedDeclaration": 1163,
																			"src": "34366:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$1163_storage_ptr",
																				"typeString": "struct Farm.StakedToken"
																			}
																		},
																		"id": 1647,
																		"nodeType": "ArrayTypeName",
																		"src": "34366:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage_ptr",
																			"typeString": "struct Farm.StakedToken[]"
																		}
																	}
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34362:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct Farm.StakedToken memory[] memory"
																}
															},
															"functionReturnParameters": 1571,
															"id": 1651,
															"nodeType": "Return",
															"src": "34355:27:0"
														}
													]
												},
												"id": 1653,
												"nodeType": "IfStatement",
												"src": "33815:579:0",
												"trueBody": {
													"id": 1644,
													"nodeType": "Block",
													"src": "33852:482:0",
													"statements": [
														{
															"assignments": [
																1582
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1582,
																	"mutability": "mutable",
																	"name": "_stakedTokens",
																	"nodeType": "VariableDeclaration",
																	"scope": 1644,
																	"src": "33867:34:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Farm.StakedToken[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1580,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1579,
																				"name": "StakedToken",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1163,
																				"src": "33867:11:0"
																			},
																			"referencedDeclaration": 1163,
																			"src": "33867:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$1163_storage_ptr",
																				"typeString": "struct Farm.StakedToken"
																			}
																		},
																		"id": 1581,
																		"nodeType": "ArrayTypeName",
																		"src": "33867:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage_ptr",
																			"typeString": "struct Farm.StakedToken[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1592,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1587,
																				"name": "stakers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1188,
																				"src": "33922:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																					"typeString": "mapping(address => struct Farm.Staker storage ref)"
																				}
																			},
																			"id": 1589,
																			"indexExpression": {
																				"id": 1588,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1565,
																				"src": "33930:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "33922:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1174_storage",
																				"typeString": "struct Farm.Staker storage ref"
																			}
																		},
																		"id": 1590,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amountStaked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1165,
																		"src": "33922:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "33904:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct Farm.StakedToken memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1584,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1583,
																				"name": "StakedToken",
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1163,
																				"src": "33908:11:0"
																			},
																			"referencedDeclaration": 1163,
																			"src": "33908:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$1163_storage_ptr",
																				"typeString": "struct Farm.StakedToken"
																			}
																		},
																		"id": 1585,
																		"nodeType": "ArrayTypeName",
																		"src": "33908:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage_ptr",
																			"typeString": "struct Farm.StakedToken[]"
																		}
																	}
																},
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33904:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct Farm.StakedToken memory[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33867:83:0"
														},
														{
															"assignments": [
																1594
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1594,
																	"mutability": "mutable",
																	"name": "_index",
																	"nodeType": "VariableDeclaration",
																	"scope": 1644,
																	"src": "33965:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1593,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33965:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1596,
															"initialValue": {
																"hexValue": "30",
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33982:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33965:18:0"
														},
														{
															"body": {
																"id": 1640,
																"nodeType": "Block",
																"src": "34065:221:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 1611,
																								"name": "stakers",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1188,
																								"src": "34088:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																									"typeString": "mapping(address => struct Farm.Staker storage ref)"
																								}
																							},
																							"id": 1613,
																							"indexExpression": {
																								"id": 1612,
																								"name": "_user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1565,
																								"src": "34096:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "34088:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Staker_$1174_storage",
																								"typeString": "struct Farm.Staker storage ref"
																							}
																						},
																						"id": 1614,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "stakedTokens",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1169,
																						"src": "34088:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage",
																							"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																						}
																					},
																					"id": 1616,
																					"indexExpression": {
																						"id": 1615,
																						"name": "j",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1598,
																						"src": "34116:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "34088:30:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakedToken_$1163_storage",
																						"typeString": "struct Farm.StakedToken storage ref"
																					}
																				},
																				"id": 1617,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "staker",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1160,
																				"src": "34088:37:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"components": [
																					{
																						"arguments": [
																							{
																								"hexValue": "30",
																								"id": 1620,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "34138:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								}
																							],
																							"id": 1619,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "34130:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1618,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "34130:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1621,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "34130:10:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"id": 1622,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "34129:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "34088:53:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1639,
																		"nodeType": "IfStatement",
																		"src": "34084:187:0",
																		"trueBody": {
																			"id": 1638,
																			"nodeType": "Block",
																			"src": "34143:128:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 1633,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 1624,
																								"name": "_stakedTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1582,
																								"src": "34166:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct Farm.StakedToken memory[] memory"
																								}
																							},
																							"id": 1626,
																							"indexExpression": {
																								"id": 1625,
																								"name": "_index",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1594,
																								"src": "34180:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "34166:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_StakedToken_$1163_memory_ptr",
																								"typeString": "struct Farm.StakedToken memory"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1627,
																										"name": "stakers",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1188,
																										"src": "34190:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																											"typeString": "mapping(address => struct Farm.Staker storage ref)"
																										}
																									},
																									"id": 1629,
																									"indexExpression": {
																										"id": 1628,
																										"name": "_user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1565,
																										"src": "34198:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "34190:14:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Staker_$1174_storage",
																										"typeString": "struct Farm.Staker storage ref"
																									}
																								},
																								"id": 1630,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "stakedTokens",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1169,
																								"src": "34190:27:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage",
																									"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																								}
																							},
																							"id": 1632,
																							"indexExpression": {
																								"id": 1631,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1598,
																								"src": "34218:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "34190:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_StakedToken_$1163_storage",
																								"typeString": "struct Farm.StakedToken storage ref"
																							}
																						},
																						"src": "34166:54:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_StakedToken_$1163_memory_ptr",
																							"typeString": "struct Farm.StakedToken memory"
																						}
																					},
																					"id": 1634,
																					"nodeType": "ExpressionStatement",
																					"src": "34166:54:0"
																				},
																				{
																					"expression": {
																						"id": 1636,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "34243:8:0",
																						"subExpression": {
																							"id": 1635,
																							"name": "_index",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1594,
																							"src": "34243:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1637,
																					"nodeType": "ExpressionStatement",
																					"src": "34243:8:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1601,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "34020:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1602,
																				"name": "stakers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1188,
																				"src": "34024:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																					"typeString": "mapping(address => struct Farm.Staker storage ref)"
																				}
																			},
																			"id": 1604,
																			"indexExpression": {
																				"id": 1603,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1565,
																				"src": "34032:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "34024:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1174_storage",
																				"typeString": "struct Farm.Staker storage ref"
																			}
																		},
																		"id": 1605,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stakedTokens",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1169,
																		"src": "34024:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage",
																			"typeString": "struct Farm.StakedToken storage ref[] storage ref"
																		}
																	},
																	"id": 1606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "34024:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34020:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1641,
															"initializationExpression": {
																"assignments": [
																	1598
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1598,
																		"mutability": "mutable",
																		"name": "j",
																		"nodeType": "VariableDeclaration",
																		"scope": 1641,
																		"src": "34005:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1597,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "34005:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1600,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34017:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "34005:13:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "34060:3:0",
																	"subExpression": {
																		"id": 1608,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1598,
																		"src": "34060:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1610,
																"nodeType": "ExpressionStatement",
																"src": "34060:3:0"
															},
															"nodeType": "ForStatement",
															"src": "34000:286:0"
														},
														{
															"expression": {
																"id": 1642,
																"name": "_stakedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "34309:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct Farm.StakedToken memory[] memory"
																}
															},
															"functionReturnParameters": 1571,
															"id": 1643,
															"nodeType": "Return",
															"src": "34302:20:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "63c28db1",
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakedTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "33746:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33745:15:0"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "33782:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Farm.StakedToken[]"
												},
												"typeName": {
													"baseType": {
														"id": 1568,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1567,
															"name": "StakedToken",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1163,
															"src": "33782:11:0"
														},
														"referencedDeclaration": 1163,
														"src": "33782:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakedToken_$1163_storage_ptr",
															"typeString": "struct Farm.StakedToken"
														}
													},
													"id": 1569,
													"nodeType": "ArrayTypeName",
													"src": "33782:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakedToken_$1163_storage_$dyn_storage_ptr",
														"typeString": "struct Farm.StakedToken[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33781:22:0"
									},
									"scope": 1677,
									"src": "33721:680:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "34482:136:0",
										"statements": [
											{
												"assignments": [
													1663
												],
												"declarations": [
													{
														"constant": false,
														"id": 1663,
														"mutability": "mutable",
														"name": "rewards",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "34493:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1662,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1672,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1665,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "34528:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1664,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "34511:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34511:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1667,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "34552:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1174_storage_$",
																	"typeString": "mapping(address => struct Farm.Staker storage ref)"
																}
															},
															"id": 1669,
															"indexExpression": {
																"id": 1668,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "34560:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34552:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1174_storage",
																"typeString": "struct Farm.Staker storage ref"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1173,
														"src": "34552:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34511:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34493:92:0"
											},
											{
												"expression": {
													"id": 1673,
													"name": "rewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1663,
													"src": "34603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1661,
												"id": 1674,
												"nodeType": "Return",
												"src": "34596:14:0"
											}
										]
									},
									"functionSelector": "f854a27f",
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "availableRewards",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "_staker",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "34435:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34435:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34434:17:0"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "34473:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34472:9:0"
									},
									"scope": 1677,
									"src": "34409:209:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1678,
							"src": "29748:4875:0"
						}
					],
					"src": "38:34587:0"
				},
				"id": 0
			}
		}
	}
}